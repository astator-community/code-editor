<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Sockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.Sockets.IOControlCode">
      <summary>指定 <see cref="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])" /> 方法支持的 IO 控制代码。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AbsorbRouterAlert">
      <summary>此值等于 Winsock 2 SIO_ABSORB_RTRALERT 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface">
      <summary>使用按索引标识的接口联接多播组。 此值等于 Winsock 2 SIO_INDEX_ADD_MCAST 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListChange">
      <summary>当套接字协议族的本地接口列表更改时启用接收通知。 此值等于 Winsock 2 SIO_ADDRESS_LIST_CHANGE 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListQuery">
      <summary>返回套接字可绑定到的本地接口列表。 此值等于 Winsock 2 SIO_ADDRESS_LIST_QUERY 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListSort">
      <summary>对 <see cref="F:System.Net.Sockets.IOControlCode.AddressListQuery" /> 字段返回的结构进行排序，并为 IPv6 地址添加范围 ID 信息。 Windows XP 及更高版本的操作系统支持此控制代码。 此值等于 Winsock 2 SIO_ADDRESS_LIST_SORT 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AssociateHandle">
      <summary>将此套接字与附带接口的指定句柄关联。 有关其他详细信息，请参考 Winsock 2 参考或文档中特定附带接口的相应协议特定附录。 建议使用组件对象模型 (COM) 代替此 IOCTL，以发现并跟踪套接字可能支持的其他接口。 此控制代码是为了与某些系统保持向后兼容而提供的，在这些系统中，COM 不可用或由于某些其他原因而无法使用。 此值等于 Winsock 2 SIO_ASSOCIATE_HANDLE 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AsyncIO">
      <summary>当等待接收数据时启用通知。 此值等于 Winsock 2 FIOASYNC 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.BindToInterface">
      <summary>将套接字绑定到指定的接口索引。 此值等于 Winsock 2 SIO_INDEX_BIND 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DataToRead">
      <summary>返回可读取的字节数。 此值等于 Winsock 2 FIONREAD 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface">
      <summary>从多播组中移除套接字。 此值等于 Winsock 2 SIO_INDEX_ADD_MCAST 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.EnableCircularQueuing">
      <summary>当传入的消息队列已满时，将时间最久的已排队数据报替换为传入的数据报。 此值等于 Winsock 2 SIO_ENABLE_CIRCULAR_QUEUEING 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.Flush">
      <summary>放弃发送队列的内容。 此值等于 Winsock 2 SIO_FLUSH 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetBroadcastAddress">
      <summary>返回一个 SOCKADDR 结构，该结构包含当前套接字地址族的广播地址。 返回的地址可与 <see cref="Overload:System.Net.Sockets.Socket.SendTo" /> 方法一起使用。 此值等于 Winsock 2 SIO_GET_BROADCAST_ADDRESS 常数。 此值仅可用于用户数据报协议 (UDP) 套接字。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer">
      <summary>获取提供程序特定的函数，这类函数不是 Winsock 规范的一部分。 这些函数通过使用其提供程序分配的 GUID 进行指定。 此值等于 Winsock 2 SIO_GET_EXTENSION_FUNCTION_POINTER 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetGroupQos">
      <summary>返回套接字组的服务质量 (QOS) 特性。 此值保留供将来使用，并且等于 Winsock 2 SIO_GET_GROUP_QOS 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetQos">
      <summary>检索与套接字关联的 QOS 结构。 只有能提供 QOS 传输的平台（Windows Me、Windows 2000 和更高版本）才支持此控件。此值等于 Winsock 2 SIO_GET_QOS 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.KeepAliveValues">
      <summary>控制 TCP Keep-Alive 数据包的发送以及发送间隔。 有关其他信息，请参阅 RFC 1122 的 4.2.3.6 节。 此值等于 Winsock 2 SIO_KEEPALIVE_VALS 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.LimitBroadcasts">
      <summary>此值等于 Winsock 2 SIO_LIMIT_BROADCASTS 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastInterface">
      <summary>设置用于传出多播数据包的接口。 该接口由索引进行标识。  此值等于 Winsock 2 SIO_INDEX_MCASTIF 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastScope">
      <summary>控制路由器可以转发多播数据包的次数，也称作生存时间 (TTL) 或跃点计数。 此值等于 Winsock 2 SIO_MULTICAST_SCOPE 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MultipointLoopback">
      <summary>控制套接字发送的多播数据是否在套接字接收队列中显示为传入数据。 此值等于 Winsock 2 SIO_MULTIPOINT_LOOPBACK 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NamespaceChange">
      <summary>控制套接字是否在命名空间查询无效时接收通知。 Windows XP 及更高版本的操作系统支持此控制代码。 此值等于 Winsock 2 SIO_NSP_NOTIFY_CHANGE 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NonBlockingIO">
      <summary>控制套接字的阻止行为。 如果使用此控制代码指定的参数为零，套接字置于阻止模式下。 如果参数不为零，套接字置于非阻止模式下。 此值等于 Winsock 2 FIONBIO 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.OobDataRead">
      <summary>返回有关等待接收的带外数据的信息。 在流式套接字上使用此控制代码时，返回值指示可用的字节数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.QueryTargetPnpHandle">
      <summary>检索基础提供程序的 SOCKET 句柄。 此句柄可用于接收即插即用事件通知。 此值等于 Winsock 2 SIO_QUERY_TARGET_PNP_HANDLE 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAll">
      <summary>支持接收网络上的所有 IPv4 数据包。 套接字必须有 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 地址族，套接字类型必须是 <see cref="F:System.Net.Sockets.SocketType.Raw" />，并且协议类型必须为 <see cref="F:System.Net.Sockets.ProtocolType.IP" />。 当前用户必须属于本地计算机上的管理员组，并且套接字必须绑定到特定端口。 此值等于 Winsock 2 SIO_RCVALL 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast">
      <summary>支持接收网络上所有 Internet 组管理协议 (IGMP) 数据包。 套接字必须有 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 地址族，套接字类型必须是 <see cref="F:System.Net.Sockets.SocketType.Raw" />，并且协议类型必须为 <see cref="F:System.Net.Sockets.ProtocolType.Igmp" />。 当前用户必须属于本地计算机上的管理员组，并且套接字必须绑定到特定端口。 此值等于 Winsock 2 SIO_RCVALL_IGMPMCAST 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllMulticast">
      <summary>支持接收网络上所有多播 IPv4 数据包。 这些数据包的目标地址范围介于 224.0.0.0 到 239.255.255.255 之间。 套接字必须有 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 地址族，套接字类型必须是 <see cref="F:System.Net.Sockets.SocketType.Raw" />，并且协议类型必须为 <see cref="F:System.Net.Sockets.ProtocolType.Udp" />。 当前用户必须属于本地计算机上的管理员组，并且套接字必须绑定到特定端口。 此值等于 Winsock 2 SIO_RCVALL_MCAST 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceChange">
      <summary>支持在用于访问远程终结点的本地接口更改时接收通知。 此值等于 Winsock 2 SIO_ROUTING_INTERFACE_CHANGE 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceQuery">
      <summary>返回可用于连接到指定远程地址的接口地址。 此值等于 Winsock 2 SIO_ROUTING_INTERFACE_QUERY 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetGroupQos">
      <summary>设置套接字组的服务质量 (QOS) 特性。 此值保留供将来使用，并且等于 Winsock 2 SIO_SET_GROUP_QOS 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetQos">
      <summary>设置套接字的服务质量 (QOS) 特性。 QOS 用于定义套接字的带宽要求。 此值等于 Winsock 2 SIO_SET_QOS 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.TranslateHandle">
      <summary>返回附带接口上下文中有效套接字的句柄。 此值等于 Winsock 2 SIO_TRANSLATE_HANDLE 常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.UnicastInterface">
      <summary>设置用于传出单播数据包的接口。 此值等于 Winsock 2 SIO_UCAST_IF 常数。</summary>
    </member>
    <member name="T:System.Net.Sockets.IPPacketInformation">
      <summary>通过调用 <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 或 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 显示数据包信息。</summary>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.Equals(System.Object)">
      <summary>返回一个值，该值指示此实例是否与指定的对象相等。</summary>
      <param name="comparand">与该实例进行比较的对象。</param>
      <returns>如果 <paramref name="comparand" /> 是 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 的实例并且等于此实例的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>Int32 哈希代码。</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>测试两个指定的 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 实例是否相等。</summary>
      <param name="packetInformation1">相等运算符左侧的 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 实例。</param>
      <param name="packetInformation2">相等运算符右侧的 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 实例。</param>
      <returns>如果 <paramref name="packetInformation1" /> 和 <paramref name="packetInformation2" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>测试两个指定的 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 实例是否不相等。</summary>
      <param name="packetInformation1">不等运算符左侧的 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 实例。</param>
      <param name="packetInformation2">不等运算符右侧的 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 实例。</param>
      <returns>如果 <paramref name="packetInformation1" /> 和 <paramref name="packetInformation2" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Address">
      <summary>获取调用 <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 方法或 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 方法后收到的数据包的来源信息。</summary>
      <returns>
        <see cref="T:System.Net.IPAddress" />，指示调用 <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 方法或 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 方法后收到的数据包的来源信息。 如果从单播地址发送数据包，<see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> 属性将返回发送方的 <see cref="T:System.Net.IPAddress" />；对于多路广播或广播数据包，<see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> 属性将返回多路广播或广播 <see cref="T:System.Net.IPAddress" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Interface">
      <summary>获取与调用 <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 或 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 关联的网络接口信息。</summary>
      <returns>
        <see cref="T:System.Int32" /> 值，表示网络接口的索引。 可以将此索引和 <see cref="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" /> 结合使用，以获取有关相关接口的更多信息。</returns>
    </member>
    <member name="T:System.Net.Sockets.IPProtectionLevel">
      <summary>一个可用于将 IPv6 套接字限制为一个指定范围的值，例如限制为具有相同的链接本地或站点本地前缀的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.EdgeRestricted">
      <summary>IP 保护级别是“边缘受限的”。 此值应由设计为在 Internet 上运行的应用程序使用。 此设置不允许使用 Windows Teredo 实现的网络地址转换 (NAT) 遍历。 这些应用程序可能会绕过 IPv4 防火墙，因此，必须加强应用程序的安全性以防范针对开放端口的 Internet 攻击。 在 Windows Server 2003 和 Windows XP 中，针对套接字的 IP 保护级别的默认值是“边缘受限的”。</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Restricted">
      <summary>IP 保护级别是“受限的”。 此值应由未实现 Internet 方案的 Intranet 应用程序使用。 一般情况下，不会针对 Internet 样式的攻击来对这些应用程序进行测试或加强安全性。 此设置将限制仅接收链接本地的通信。</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unrestricted">
      <summary>IP 保护级别是“不受限的”。 此值应由设计为在 Internet 上运行的应用程序使用，包括利用 Windows 中内置的 IPv6 NAT 遍历功能（例如，Teredo）的应用程序。 这些应用程序可能会绕过 IPv4 防火墙，因此，必须加强应用程序的安全性以防范针对开放端口的 Internet 攻击。 在 Windows Server 2008 R2 和 Windows Vista 中，针对套接字的 IP 保护级别的默认值是“不受限的”。</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unspecified">
      <summary>IP 保护级别是“未指定的”。 在 Windows 7 和 Windows Server 2008 R2 中，针对套接字的 IP 保护级别的默认值是“未指定的”。</summary>
    </member>
    <member name="T:System.Net.Sockets.IPv6MulticastOption">
      <summary>包含用于加入 IPv6 多路广播组的选项值。</summary>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>为指定的 IP 多路广播组初始化 <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> 类的新版本。</summary>
      <param name="group">多路广播组的 <see cref="T:System.Net.IPAddress" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)">
      <summary>使用指定的 IP 多路广播组和本地接口地址，初始化 <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> 类的新实例。</summary>
      <param name="group">
        <see cref="T:System.Net.IPAddress" /> 组。</param>
      <param name="ifindex">本地接口地址。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ifindex" /> 小于 0。  
  
- 或 - 
 <paramref name="ifindex" /> 大于 0x00000000FFFFFFFF。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.Group">
      <summary>获取或设置多路广播组的 IP 地址。</summary>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> 为 <see langword="null" />。</exception>
      <returns>一个包含多路广播组 Internet 地址的 <see cref="T:System.Net.IPAddress" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.InterfaceIndex">
      <summary>获取或设置与多路广播组关联的接口索引。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">为设置操作指定的值小于 0 或大于 0x00000000FFFFFFFF。</exception>
      <returns>一个指定接口地址的 <see cref="T:System.UInt64" /> 值。</returns>
    </member>
    <member name="T:System.Net.Sockets.LingerOption">
      <summary>指定在调用 <see cref="T:System.Net.Sockets.Socket" /> 或 <see cref="M:System.Net.Sockets.Socket.Close" /> 方法之后，如果仍有数据要发送，<see cref="M:System.Net.Sockets.TcpClient.Close" /> 是否保持连接以及保持多长时间。</summary>
    </member>
    <member name="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)">
      <summary>初始化 <see cref="T:System.Net.Sockets.LingerOption" /> 类的新实例。</summary>
      <param name="enable">如果调用 <see cref="M:System.Net.Sockets.Socket.Close" /> 方法后保持连接，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="seconds">调用 <see cref="M:System.Net.Sockets.Socket.Close" /> 方法后保持连接的秒数。</param>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.Enabled">
      <summary>获取或设置一个值，指示 <see cref="T:System.Net.Sockets.Socket" /> 关闭后是否逗留。</summary>
      <returns>如果 <see cref="T:System.Net.Sockets.Socket" /> 在调用 <see cref="M:System.Net.Sockets.Socket.Close" /> 之后将逗留，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.LingerTime">
      <summary>获取或设置在调用 <see cref="M:System.Net.Sockets.Socket.Close" /> 方法后仍有数据要发送的情况下将保持连接的时间量。</summary>
      <returns>调用 <see cref="M:System.Net.Sockets.Socket.Close" /> 后保持连接的时间量（以秒为单位）。</returns>
    </member>
    <member name="T:System.Net.Sockets.MulticastOption">
      <summary>包含用于联接和丢弃多路广播组的 <see cref="T:System.Net.IPAddress" /> 值。</summary>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>为指定的 IP 多路广播组初始化 <see cref="T:System.Net.Sockets.MulticastOption" /> 类的新版本。</summary>
      <param name="group">多播组的 IP 地址。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>使用指定的 IP 多路广播组地址和接口索引，初始化 <see cref="T:System.Net.Sockets.MulticastOption" /> 类的新实例。</summary>
      <param name="group">多播组的 IP 地址。</param>
      <param name="interfaceIndex">用于发送和接收多播数据包的接口的索引。</param>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>使用指定的 IP 多路广播组地址以及和网络接口相关联的本地 IP 地址来初始化 <see cref="T:System.Net.Sockets.MulticastOption" /> 类的新实例。</summary>
      <param name="group">组 IP 地址。</param>
      <param name="mcint">本地 IP 地址。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="mcint" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.Group">
      <summary>获取或设置多路广播组的 IP 地址。</summary>
      <exception cref="T:System.ArgumentNullException">.NET 5.0 及更高版本：<paramref name="group" /> 为 <see langword="null" />。</exception>
      <returns>多路广播组的 IP 地址。</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.InterfaceIndex">
      <summary>获取或设置用于发送和接收多播数据包的接口的索引。</summary>
      <returns>数组元素的索引 <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> 。</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.LocalAddress">
      <summary>获取或设置与多路广播组关联的本地地址。</summary>
      <returns>与多路广播组关联的本地地址。</returns>
    </member>
    <member name="T:System.Net.Sockets.NetworkStream">
      <summary>为网络访问提供数据的基础流。</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)">
      <summary>为指定的 <see cref="T:System.Net.Sockets.Socket" /> 创建 <see cref="T:System.Net.Sockets.NetworkStream" /> 类的新实例。</summary>
      <param name="socket">
        <see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 使用它来发送和接收数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="socket" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">未连接 <paramref name="socket" /> 参数。  
  
- 或 - 
<paramref name="socket" /> 参数的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 属性不为 <see cref="F:System.Net.Sockets.SocketType.Stream" />。  
  
- 或 - 
<paramref name="socket" /> 参数处于非阻止状态。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)">
      <summary>用指定的 <see cref="T:System.Net.Sockets.Socket" /> 所属权为指定的 <see cref="T:System.Net.Sockets.Socket" /> 初始化 <see cref="T:System.Net.Sockets.NetworkStream" /> 类的新实例。</summary>
      <param name="socket">
        <see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 使用它来发送和接收数据。</param>
      <param name="ownsSocket">设置为 <see langword="true" /> 可指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 将拥有 <see cref="T:System.Net.Sockets.Socket" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="socket" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">未连接 <paramref name="socket" /> 参数。  
  
- 或 - 
<paramref name="socket" /> 参数的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 属性的值不为 <see cref="F:System.Net.Sockets.SocketType.Stream" />。  
  
- 或 - 
<paramref name="socket" /> 参数处于非阻止状态。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)">
      <summary>用指定的访问权限为指定的 <see cref="T:System.Net.Sockets.NetworkStream" /> 创建 <see cref="T:System.Net.Sockets.Socket" /> 类的新实例。</summary>
      <param name="socket">
        <see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 使用它来发送和接收数据。</param>
      <param name="access">
        <see cref="T:System.IO.FileAccess" /> 值的按位组合，这些值指定向所提供的 <see cref="T:System.Net.Sockets.Socket" /> 上的 <see cref="T:System.Net.Sockets.NetworkStream" /> 授予的访问类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="socket" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">未连接 <paramref name="socket" /> 参数。  
  
- 或 - 
<paramref name="socket" /> 参数的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 属性不为 <see cref="F:System.Net.Sockets.SocketType.Stream" />。  
  
- 或 - 
<paramref name="socket" /> 参数处于非阻止状态。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)">
      <summary>用指定的访问权限和指定的 <see cref="T:System.Net.Sockets.Socket" /> 所属权为指定的 <see cref="T:System.Net.Sockets.Socket" /> 创建 <see cref="T:System.Net.Sockets.NetworkStream" /> 类的新实例。</summary>
      <param name="socket">
        <see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 使用它来发送和接收数据。</param>
      <param name="access">
        <see cref="T:System.IO.FileAccess" /> 值的按位组合，这些值指定向所提供的 <see cref="T:System.Net.Sockets.Socket" /> 上的 <see cref="T:System.Net.Sockets.NetworkStream" /> 授予的访问类型。</param>
      <param name="ownsSocket">设置为 <see langword="true" /> 可指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 将拥有 <see cref="T:System.Net.Sockets.Socket" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="socket" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">未连接 <paramref name="socket" /> 参数。  
  
- 或 - 
<paramref name="socket" /> 参数的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 属性不为 <see cref="F:System.Net.Sockets.SocketType.Stream" />。  
  
- 或 - 
<paramref name="socket" /> 参数处于非阻止状态。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>从 <see cref="T:System.Net.Sockets.NetworkStream" /> 开始异步读取。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 类型的数组，它是内存中用于存储从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取的数据的位置。</param>
      <param name="offset">
        <paramref name="buffer" /> 中开始存储数据的位置。</param>
      <param name="size">要从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</param>
      <param name="callback">在 <see cref="T:System.AsyncCallback" /> 完成后执行的 <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 委托。</param>
      <param name="state">一个包含用户定义的任何附加数据的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 参数小于 0。  
  
- 或 - 
<paramref name="offset" /> 参数大于 <paramref name="buffer" /> 参数的长度。  
  
- 或 - 
<paramref name="size" /> 小于 0。  
  
- 或 - 
<paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.IO.IOException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。  
  
- 或 - 
从网络读取时出错。  
  
- 或 - 
访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
      <returns>一个表示异步调用的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始向流异步写入。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 类型的数组，该数组包含要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的数据。</param>
      <param name="offset">
        <paramref name="buffer" /> 中开始发送数据的位置。</param>
      <param name="size">要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的字节数。</param>
      <param name="callback">在 <see cref="T:System.AsyncCallback" /> 完成后执行的 <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 委托。</param>
      <param name="state">一个包含用户定义的任何附加数据的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 参数小于 0。  
  
- 或 - 
<paramref name="offset" /> 参数大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
<paramref name="size" /> 参数小于 0。  
  
- 或 - 
<paramref name="size" /> 参数大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.IO.IOException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。  
  
- 或 - 
写入到网络时出错。  
  
- 或 - 
访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
      <returns>一个表示异步调用的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Close(System.Int32)">
      <summary>等待指定的时间获许发送数据之后，关闭 <see cref="T:System.Net.Sockets.NetworkStream" />。</summary>
      <param name="timeout">一个 32 位带符号整数，用于指定在关闭前等待发送所有剩余数据的毫秒数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> 参数小于 -1。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Net.Sockets.NetworkStream" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)">
      <summary>处理异步读取的结束。</summary>
      <param name="asyncResult">一个表示异步调用的 <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。  
  
- 或 - 
访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
      <returns>从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)">
      <summary>处理异步写入的结束。</summary>
      <param name="asyncResult">表示异步调用的 <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。  
  
- 或 - 
写入网络时出错。  
  
- 或 - 
访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Finalize">
      <summary>释放由 <see cref="T:System.Net.Sockets.NetworkStream" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Flush">
      <summary>刷新流中的数据。 此方法保留供将来使用。</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>以异步操作形式刷新流中的数据。</summary>
      <param name="cancellationToken">一个取消标记，用于传播应取消此操作的通知。</param>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取数据，并将其存储到字节数组中。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 类型的数组，它是内存中用于存储从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取的数据的位置。</param>
      <param name="offset">
        <paramref name="buffer" /> 中开始将数据存储到的位置。</param>
      <param name="size">要从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" />的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 不支持读取。</exception>
      <exception cref="T:System.IO.IOException">访问套接字时出错。

- 或 -

从网络读取时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
      <returns>从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Span{System.Byte})">
      <summary>从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取数据，并将其存储到内存中的字节范围内。</summary>
      <param name="buffer">存储从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取的数据的内存区域。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 不支持读取。</exception>
      <exception cref="T:System.IO.IOException">访问套接字时出错。

- 或 -

从网络读取时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
      <returns>从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>以异步操作形式，从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取数据，并将其存储到字节数组的指定范围内。</summary>
      <param name="buffer">要写入数据的缓冲区。</param>
      <param name="offset">
        <paramref name="buffer" /> 中开始将数据存储到的位置。</param>
      <param name="size">要从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 不支持读取。</exception>
      <exception cref="T:System.IO.IOException">访问套接字时出错。

- 或 -

从网络读取时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
      <returns>表示异步读取操作的任务。 其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性的值包含读入 <paramref name="buffer" /> 的总字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>以异步操作形式，从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取数据，并将其存储在字节内存范围内。</summary>
      <param name="buffer">要写入数据的缓冲区。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 不支持读取。</exception>
      <exception cref="T:System.IO.IOException">访问套接字时出错。

- 或 -

从网络读取时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
      <returns>表示异步读取操作的 <see cref="T:System.Threading.Tasks.ValueTask`1" />。 其 <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> 属性的值包含读入 <paramref name="buffer" /> 的总字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadByte">
      <summary>从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取一个字节，并将流内的位置向前提升一个字节，或者如果已到达流结尾，则返回 -1。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 不支持读取。</exception>
      <exception cref="T:System.IO.IOException">访问套接字时出错。

- 或 -

从网络读取时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
      <returns>强制转换为 <see cref="T:System.Int32" /> 的无符号字节，如果到达流的末尾，则为 -1。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>将流的当前位置设置为给定值。 此方法当前不受支持，总是引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="offset">未使用此参数。</param>
      <param name="origin">未使用此参数。</param>
      <exception cref="T:System.NotSupportedException">此属性的任何用法。</exception>
      <returns>流中的位置。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)">
      <summary>设置流的长度。 此方法始终引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="value">未使用此参数。</param>
      <exception cref="T:System.NotSupportedException">此属性的任何用法。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>从字节数组的指定范围向 <see cref="T:System.Net.Sockets.NetworkStream" /> 写入数据。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 类型的数组，该数组包含要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的数据。</param>
      <param name="offset">
        <paramref name="buffer" /> 中开始写入数据的位置。</param>
      <param name="size">要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的字节数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 参数小于 0。  
  
- 或 - 
<paramref name="offset" /> 参数大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
<paramref name="size" /> 参数小于 0。  
  
- 或 - 
<paramref name="size" /> 参数大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 不支持写入。</exception>
      <exception cref="T:System.IO.IOException">访问套接字时出错。

- 或 -

写入到网络时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>从只读字节范围向 <see cref="T:System.Net.Sockets.NetworkStream" /> 写入数据。</summary>
      <param name="buffer">要写入到 <see cref="T:System.Net.Sockets.NetworkStream" /> 的数据。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 不支持写入。</exception>
      <exception cref="T:System.IO.IOException">访问套接字时出错。

- 或 -

写入到网络时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>以异步操作形式，将指定字节数组范围内的数据写入 <see cref="T:System.Net.Sockets.NetworkStream" />。</summary>
      <param name="buffer">一个包含要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的数据的字节数组。</param>
      <param name="offset">
        <paramref name="buffer" /> 中开始写入数据的位置。</param>
      <param name="size">要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的字节数。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 参数小于 0。  
  
- 或 - 
<paramref name="offset" /> 参数大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
<paramref name="size" /> 参数小于 0。  
  
- 或 - 
<paramref name="size" /> 参数大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 不支持写入。</exception>
      <exception cref="T:System.IO.IOException">写入到网络时出错。  
  
 - 或 -  
  
 访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
      <returns>表示异步写入操作的任务。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>以异步操作的形式，将只读内存字节内存范围中的数据写入 <see cref="T:System.Net.Sockets.NetworkStream" />。</summary>
      <param name="buffer">一个包含要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的数据的内存区域。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 不支持写入。</exception>
      <exception cref="T:System.IO.IOException">访问套接字时出错。

- 或 -

写入到网络时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
      <returns>表示异步写入操作的任务。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteByte(System.Byte)">
      <summary>将一个字节写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 内的当前位置，并将流内的位置向前提升一个字节。</summary>
      <param name="value">要写入流中的字节。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 不支持写入。</exception>
      <exception cref="T:System.IO.IOException">访问套接字时出错。

- 或 -

写入到网络时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanRead">
      <summary>获取一个值，该值指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否支持读取。</summary>
      <returns>如果可从该流读取数据，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanSeek">
      <summary>获取一个值，该值指示流是否支持查找。 目前不支持此属性。 此属性始终返回 <see langword="false" />。</summary>
      <returns>所有情况下都为 <see langword="false" />，指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 不能在流中查找特定的位置。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanTimeout">
      <summary>指示超时属性是否可用于 <see cref="T:System.Net.Sockets.NetworkStream" />。</summary>
      <returns>在所有情况下均为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanWrite">
      <summary>获取一个值，该值指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否支持写入。</summary>
      <returns>如果数据可写入 <see cref="T:System.Net.Sockets.NetworkStream" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.DataAvailable">
      <summary>获取一个值，该值指示在要读取的 <see cref="T:System.Net.Sockets.NetworkStream" /> 上是否有可用的数据。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</exception>
      <exception cref="T:System.IO.IOException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">请使用 <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 属性获取特定的错误代码，并参考  Windows Sockets 版本 2 API 错误代码文档，以获取有关此错误的详细说明。</exception>
      <returns>如果可以在流上读取数据，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Length">
      <summary>获取流上可用数据的长度。 此属性当前不受支持，总是引发 <see cref="T:System.NotSupportedException" />。</summary>
      <exception cref="T:System.NotSupportedException">此属性的任何用法。</exception>
      <returns>流上可用数据的长度。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Position">
      <summary>获取或设置流中的当前位置。 此属性当前不受支持，总是引发 <see cref="T:System.NotSupportedException" />。</summary>
      <exception cref="T:System.NotSupportedException">此属性的任何用法。</exception>
      <returns>流中的当前新位置。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Readable">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否可以读取。</summary>
      <returns>如果 <see cref="T:System.Net.Sockets.NetworkStream" /> 可以读取，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.ReadTimeout">
      <summary>获取或设置读取操作阻止等待数据的时间。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的值小于或等于零，并且不为 <see cref="F:System.Threading.Timeout.Infinite" />。</exception>
      <returns>
        <see cref="T:System.Int32" /> 指定以毫秒为单位的时间量，表示读取操作失败前经过的时间。 默认值 <see cref="F:System.Threading.Timeout.Infinite" /> 指定读取操作未超时。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Socket">
      <summary>获取基础 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <returns>表示基础网络连接的 <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Writeable">
      <summary>获取一个值，该值指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否可写入数据。</summary>
      <returns>如果数据可写入该流，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认值是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.WriteTimeout">
      <summary>获取或设置写入操作阻止等待数据的时间。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的值小于或等于零，并且不为 <see cref="F:System.Threading.Timeout.Infinite" />。</exception>
      <returns>
        <see cref="T:System.Int32" /> 指定以毫秒为单位的时间量，表示写入操作失败前经过的时间。 默认值 <see cref="F:System.Threading.Timeout.Infinite" /> 指定写入操作未超时。</returns>
    </member>
    <member name="T:System.Net.Sockets.ProtocolFamily">
      <summary>指定 <see cref="T:System.Net.Sockets.Socket" /> 类的实例可以使用的协议类型。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.AppleTalk">
      <summary>AppleTalk 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Atm">
      <summary>本机 ATM 服务协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Banyan">
      <summary>Banyan 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ccitt">
      <summary>CCITT 协议，如 X.25。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Chaos">
      <summary>MIT CHAOS 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Cluster">
      <summary>Microsoft 群集产品协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ControllerAreaNetwork">
      <summary>控制器区域网络协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataKit">
      <summary>DataKit 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataLink">
      <summary>直接数据链接协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DecNet">
      <summary>DECNet 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ecma">
      <summary>欧洲计算机制造商协会 (ECMA) 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.FireFox">
      <summary>FireFox 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.HyperChannel">
      <summary>NSC HyperChannel 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ieee12844">
      <summary>IEEE 1284.4 工作组协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ImpLink">
      <summary>ARPANET IMP 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetwork">
      <summary>IP 版本 4 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetworkV6">
      <summary>IP 版本 6 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ipx">
      <summary>IPX 或 SPX 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Irda">
      <summary>IrDA 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Iso">
      <summary>ISO 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Lat">
      <summary>LAT 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Max">
      <summary>MAX 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetBios">
      <summary>NetBIOS 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetworkDesigners">
      <summary>支持网络设计器 OSI 网关的协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NS">
      <summary>Xerox NS 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Osi">
      <summary>OSI 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Packet">
      <summary>低级别数据包协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Pup">
      <summary>PUP 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Sna">
      <summary>IBM SNA 协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unix">
      <summary>Unix 本地到主机协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unknown">
      <summary>未知协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unspecified">
      <summary>未指定的协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.VoiceView">
      <summary>VoiceView 协议。</summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary>指定 <see cref="T:System.Net.Sockets.Socket" /> 类支持的协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ggp">
      <summary>网关到网关协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Icmp">
      <summary>网际消息控制协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IcmpV6">
      <summary>用于 IPv6 的 Internet 控制消息协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Idp">
      <summary>Internet 数据报协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Igmp">
      <summary>网际组管理协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IP">
      <summary>网际协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecAuthenticationHeader">
      <summary>IPv6 身份验证头。 有关详细信息，请参阅 https://www.ietf.org 上的 RFC 2292，第 2.2.1 节。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecEncapsulatingSecurityPayload">
      <summary>IPv6 封装式安全措施负载头。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv4">
      <summary>Internet 协议版本 4。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6">
      <summary>Internet 协议版本 6 (IPv6)。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6DestinationOptions">
      <summary>IPv6 目标选项头。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6FragmentHeader">
      <summary>IPv6 片段头。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6HopByHopOptions">
      <summary>IPv6 逐跳选项头。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6NoNextHeader">
      <summary>IPv6 No Next 头。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6RoutingHeader">
      <summary>IPv6 路由头。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ipx">
      <summary>Internet 数据包交换协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.ND">
      <summary>网络磁盘协议（非正式）。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Pup">
      <summary>PARC 通用数据包协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Raw">
      <summary>原始 IP 数据包协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Spx">
      <summary>顺序包交换协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.SpxII">
      <summary>顺序包交换协议第 2 版。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary>传输控制协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Udp">
      <summary>用户数据报协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary>未知协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary>未指定的协议。</summary>
    </member>
    <member name="T:System.Net.Sockets.SafeSocketHandle">
      <summary>表示套接字句柄的包装类。</summary>
    </member>
    <member name="M:System.Net.Sockets.SafeSocketHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>初始化 <see cref="T:System.Net.Sockets.SafeSocketHandle" /> 类的新实例。</summary>
      <param name="preexistingHandle">要使用的预先存在的句柄。</param>
      <param name="ownsHandle">若要在终止阶段可靠地释放此句柄，则为 <see langword="true" />；若要阻止可靠释放（不建议使用），则为 <see langword="false" />。</param>
    </member>
    <member name="T:System.Net.Sockets.SelectMode">
      <summary>为 <see cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" /> 方法定义轮询模式。</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectError">
      <summary>错误状态模式。</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectRead">
      <summary>读状态模式。</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectWrite">
      <summary>写状态模式。</summary>
    </member>
    <member name="T:System.Net.Sockets.SendPacketsElement">
      <summary>表示 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 数组中的一个元素。</summary>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])">
      <summary>使用指定的缓冲区初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
      <param name="buffer">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法发送的数据的字节数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 参数不能为 null</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>使用指定的缓冲区范围初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
      <param name="buffer">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法发送的数据的字节数组。</param>
      <param name="offset">以字节为单位表示的偏移量，该偏移量是指 <paramref name="buffer" /> 的起始位置与 <paramref name="buffer" /> 中开始发送 <paramref name="buffer" /> 参数中指定数据的位置之间的偏移。</param>
      <param name="count">从 <paramref name="offset" /> 参数开始发送的字节数。 如果 <paramref name="count" /> 为零，则不发送任何字节。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 参数不能为 null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。  
  
<paramref name="offset" /> 和 <paramref name="count" /> 必须小于缓冲区的大小</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>使用指定的缓冲区范围，以及一个用于将此元素与从套接字层到传输层的单一发送请求中的下一个元素进行合并的选项，来初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
      <param name="buffer">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法发送的数据的字节数组。</param>
      <param name="offset">以字节为单位表示的偏移量，该偏移量是指 <paramref name="buffer" /> 的起始位置与 <paramref name="buffer" /> 中开始发送 <paramref name="buffer" /> 参数中指定数据的位置之间的偏移。</param>
      <param name="count">从 <paramref name="offset" /> 参数开始发送的字节数。 如果 <paramref name="count" /> 为零，则不发送任何字节。</param>
      <param name="endOfPacket">一个布尔值，该值指定此元素不应与从套接字层到传输层的单一发送请求中的下一个元素合并。 此标志用于精细控制数据报或面向消息的套接字中每个消息的内容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 参数不能为 null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。  
  
<paramref name="offset" /> 和 <paramref name="count" /> 必须小于缓冲区的大小</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream)">
      <summary>使用指定的 <see cref="T:System.IO.FileStream" /> 对象初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
      <param name="fileStream">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileStream" /> 未针对异步读取和写入开放。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> 不能为 null。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32)">
      <summary>使用指定的 <see cref="T:System.IO.FileStream" /> 对象范围初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
      <param name="fileStream">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件。</param>
      <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送字节的文件位置之间的偏移。</param>
      <param name="count">从 <paramref name="offset" /> 开始发送的字节数。 如果 <paramref name="count" /> 为零，则发送整个文件。</param>
      <exception cref="T:System.ArgumentException">必须已针对异步读取和写入开放 <paramref name="fileStream" /> 参数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> 参数不能为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32,System.Boolean)">
      <summary>使用指定的 <see cref="T:System.IO.FileStream" /> 对象范围，以及一个用于将此元素与从套接字层到传输层的单一发送请求中的下一个元素进行合并的选项，来初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
      <param name="fileStream">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件。</param>
      <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送字节的文件位置之间的偏移。</param>
      <param name="count">从 offset 参数开始发送的字节数。 如果 count 为零，则发送整个文件。</param>
      <param name="endOfPacket">指定此元素不应与从套接字层到传输层的单一发送请求中的下一个元素合并。 此标志用于精细控制数据报或面向消息的套接字中每个消息的内容。</param>
      <exception cref="T:System.ArgumentException">必须已针对异步读取和写入开放 <paramref name="fileStream" /> 参数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> 参数不能为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)">
      <summary>使用指定的文件初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
      <param name="filepath">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件的文件名。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> 参数不能为 null</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)">
      <summary>使用指定的文件范围初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
      <param name="filepath">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件的文件名。</param>
      <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送 <paramref name="filepath" /> 参数中指定文件的位置之间的偏移。</param>
      <param name="count">从 <paramref name="offset" /> 参数开始发送的字节数。 如果 <paramref name="count" /> 为零，则发送整个文件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> 参数不能为 null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>使用指定的文件范围，以及一个用于将此元素与从套接字层到传输层的单一发送请求中的下一个元素进行合并的选项，来初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
      <param name="filepath">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件的文件名。</param>
      <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送 <paramref name="filepath" /> 参数中指定文件的位置之间的偏移。</param>
      <param name="count">从 <paramref name="offset" /> 参数开始发送的字节数。 如果 <paramref name="count" /> 为零，则发送整个文件。</param>
      <param name="endOfPacket">一个布尔值，该值指定此元素不应与从套接字层到传输层的单一发送请求中的下一个元素合并。 此标志用于精细控制数据报或面向消息的套接字中每个消息的内容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> 参数不能为 null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32)">
      <summary>使用指定的文件范围初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
      <param name="filepath">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件的文件名。</param>
      <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送 <paramref name="filepath" /> 参数中指定文件的位置之间的偏移。</param>
      <param name="count">从 <paramref name="offset" /> 开始发送的字节数。 如果 <paramref name="count" /> 为零，则发送整个文件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> 参数不能为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32,System.Boolean)">
      <summary>使用指定的文件范围，以及一个用于将此元素与从套接字层到传输层的单一发送请求中的下一个元素进行合并的选项，来初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
      <param name="filepath">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件的文件名。</param>
      <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送 <paramref name="filepath" /> 参数中指定文件的位置之间的偏移。</param>
      <param name="count">从 <paramref name="offset" /> 参数开始发送的字节数。 如果 <paramref name="count" /> 为零，则发送整个文件。</param>
      <param name="endOfPacket">指定此元素不应与从套接字层到传输层的单一发送请求中的下一个元素合并。 此标志用于精细控制数据报或面向消息的套接字中每个消息的内容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> 参数不能为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。</exception>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Buffer">
      <summary>获取在 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 对象使用 <paramref name="buffer" /> 参数初始化的情况下发送的缓冲区。</summary>
      <returns>如果 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 对象是用参数初始化的，则为要发送的字节缓冲区 <paramref name="buffer" /> 。</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Count">
      <summary>获取要发送的字节的计数。</summary>
      <returns>在 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类使用 <paramref name="count" /> 参数初始化的情况下发送的字节计数。</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.EndOfPacket">
      <summary>获取一个布尔值，该值指示此元素是否不应与从套接字层到传输层的单一发送请求中的下一个元素合并。</summary>
      <returns>一个布尔值，该值指示此元素是否不应当与单一发送请求中的下一个元素合并。</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FilePath">
      <summary>获取在 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 对象使用 <paramref name="filepath" /> 参数初始化的情况下发送的文件的文件名。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.SendPacketsElement" />用参数初始化对象时要发送的文件的文件名 <paramref name="filepath" /> 。</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FileStream">
      <summary>获取在 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 对象使用 <see cref="T:System.IO.FileStream" /> 参数初始化的情况下发送的文件的对象表示形式。</summary>
      <returns>如果 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 对象是用参数初始化的，则为要发送的文件的对象表示形式 <see cref="T:System.IO.FileStream" /> 。</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Offset">
      <summary>获取以字节为单位表示的偏移量，该偏移量是指数据缓冲区或文件的起始位置与该缓冲区或文件中开始发送数据的位置之间的偏移。</summary>
      <returns>以字节为单位表示的偏移量，该偏移量是指数据缓冲区或文件的起始位置与该缓冲区或文件中开始发送数据的位置之间的偏移。</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.OffsetLong">
      <summary>获取以字节为单位表示的偏移量，该偏移量是指数据缓冲区或文件的起始位置与该缓冲区或文件中开始发送数据的位置之间的偏移。</summary>
      <returns>以字节为单位表示的偏移量，该偏移量是指数据缓冲区或文件的起始位置与该缓冲区或文件中开始发送数据的位置之间的偏移。</returns>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary>实现 Berkeley 套接字接口。</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>使用指定的地址族、套接字类型和协议初始化 <see cref="T:System.Net.Sockets.Socket" /> 类的新实例。</summary>
      <param name="addressFamily">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 值之一。</param>
      <param name="socketType">
        <see cref="T:System.Net.Sockets.SocketType" /> 值之一。</param>
      <param name="protocolType">
        <see cref="T:System.Net.Sockets.ProtocolType" /> 值之一。</param>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="addressFamily" />、<paramref name="socketType" /> 和 <paramref name="protocolType" /> 的组合会导致无效套接字。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SafeSocketHandle)">
      <summary>为指定的套接字句柄初始化 <see cref="T:System.Net.Sockets.Socket" /> 类的新实例。</summary>
      <param name="handle">
        <see cref="T:System.Net.Sockets.Socket" /> 对象将封装的套接字的套接字句柄。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handle" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="handle" /> 无效。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="handle" /> 不是套接字，或者无法访问有关套接字的信息。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketInformation)">
      <summary>使用 <see cref="T:System.Net.Sockets.Socket" /> 返回的指定的值初始化 <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" /> 类的新实例。</summary>
      <param name="socketInformation">
        <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" /> 返回的套接字信息。</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>使用指定的地址族、套接字类型和协议初始化 <see cref="T:System.Net.Sockets.Socket" /> 类的新实例。</summary>
      <param name="socketType">
        <see cref="T:System.Net.Sockets.SocketType" /> 值之一。</param>
      <param name="protocolType">
        <see cref="T:System.Net.Sockets.ProtocolType" /> 值之一。</param>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketType" /> 和 <paramref name="protocolType" /> 组合将导致套接字无效。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Accept">
      <summary>为新建连接创建新的 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">正在接受的套接字不会侦听连接。 在调用 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 之前必须调用 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 和 <see cref="M:System.Net.Sockets.Socket.Accept" />。</exception>
      <returns>新建连接的 <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>开始一个异步操作来接受一个传入的连接尝试。</summary>
      <param name="e">要用于此异步套接字操作的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentException">自变量无效。 如果所提供的缓冲区不够大，将会发生此异常。 缓冲区必须至少为 2 * (sizeof(SOCKADDR_STORAGE + 16) 字节。  
  
如果指定了多个缓冲区，即 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 属性不为 null，也会发生此异常。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数超出范围。 如果 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> 小于 0，将会发生此异常。</exception>
      <exception cref="T:System.InvalidOperationException">请求了无效操作。 如果接收方 <see cref="T:System.Net.Sockets.Socket" /> 未侦听连接或者绑定了接受的套接字，将发生此异常。  
  
<see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 和 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 方法必须先于 <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法调用。  
  
如果套接字已连接或使用指定的 <paramref name="e" /> 参数的套接字操作已经在进行中，也会发生此异常。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows XP 或更高版本。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>如果 I/O 操作挂起，则为 <see langword="true" />。 操作完成时，将引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。  
  
 如果 I/O 操作同步完成，则为 <see langword="false" />。 将不会引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，并且可能在方法调用返回后立即检查作为参数传递的 <paramref name="e" /> 对象以检索操作的结果。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)">
      <summary>开始一个异步操作来接受一个传入的连接尝试。</summary>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此请求的状态信息的对象。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows NT。</exception>
      <exception cref="T:System.InvalidOperationException">正在接受的套接字不会侦听连接。 在调用 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 之前必须调用 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 和 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />。  
  
- 或 - 
已接受的套接字是绑定的。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> 小于 0。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <returns>一个 <see cref="T:System.IAsyncResult" />，它引用异步 <see cref="T:System.Net.Sockets.Socket" /> 创建。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接受传入的连接尝试并接收客户端应用程序发送的第一个数据块。</summary>
      <param name="receiveSize">要从发送方读取的字节数。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此请求的状态信息的对象。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows NT。</exception>
      <exception cref="T:System.InvalidOperationException">正在接受的套接字不会侦听连接。 在调用 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 之前必须调用 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 和 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />。  
  
- 或 - 
已接受的套接字是绑定的。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> 小于 0。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <returns>一个 <see cref="T:System.IAsyncResult" />，它引用异步 <see cref="T:System.Net.Sockets.Socket" /> 创建。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接受从指定套接字传入的连接尝试并接收客户端应用程序发送的第一个数据块。</summary>
      <param name="acceptSocket">接受的 <see cref="T:System.Net.Sockets.Socket" /> 对象。 此值可为 <see langword="null" />。</param>
      <param name="receiveSize">要接收的最大字节数。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此请求的状态信息的对象。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows NT。</exception>
      <exception cref="T:System.InvalidOperationException">正在接受的套接字不会侦听连接。 在调用 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 之前必须调用 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 和 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />。  
  
- 或 - 
已接受的套接字是绑定的。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> 小于 0。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <returns>一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步 <see cref="T:System.Net.Sockets.Socket" /> 对象创建。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>开始一个对远程主机连接的异步请求。</summary>
      <param name="remoteEP">表示远程主机的 <see cref="T:System.Net.EndPoint" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此请求的状态信息的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
      <exception cref="T:System.InvalidOperationException">已通过调用 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 将 <see cref="T:System.Net.Sockets.Socket" /> 置于侦听状态，或异步操作已在进行中。</exception>
      <returns>引用异步连接的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始一个对远程主机连接的异步请求。 主机由 <see cref="T:System.Net.IPAddress" /> 和端口号指定。</summary>
      <param name="address">远程主机的 <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">远程主机的端口号。</param>
      <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用连接操作完成时要调用的方法。</param>
      <param name="state">一个用户定义对象，其中包含连接操作的相关信息。 当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Net.Sockets.Socket" /> 不在套接字族中。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">端口号无效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> 的长度为零。</exception>
      <exception cref="T:System.InvalidOperationException">已通过调用 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 将 <see cref="T:System.Net.Sockets.Socket" /> 置于侦听状态，或异步操作已在进行中。</exception>
      <returns>引用异步连接的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始一个对远程主机连接的异步请求。 主机由 <see cref="T:System.Net.IPAddress" /> 数组和端口号指定。</summary>
      <param name="addresses">至少一个用于指定远程主机的 <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">远程主机的端口号。</param>
      <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用连接操作完成时要调用的方法。</param>
      <param name="state">一个用户定义对象，其中包含连接操作的相关信息。 当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.NotSupportedException">此方法对使用 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 的套接字有效。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">端口号无效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> 的长度为零。</exception>
      <exception cref="T:System.InvalidOperationException">已通过调用 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 将 <see cref="T:System.Net.Sockets.Socket" /> 置于侦听状态，或异步操作已在进行中。</exception>
      <returns>引用异步连接的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始一个对远程主机连接的异步请求。 主机由主机名和端口号指定。</summary>
      <param name="host">远程主机的名称。</param>
      <param name="port">远程主机的端口号。</param>
      <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用连接操作完成时要调用的方法。</param>
      <param name="state">一个用户定义对象，其中包含连接操作的相关信息。 当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.NotSupportedException">此方法对 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 系列中的套接字有效。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">端口号无效。</exception>
      <exception cref="T:System.InvalidOperationException">已通过调用 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 将 <see cref="T:System.Net.Sockets.Socket" /> 置于侦听状态，或异步操作已在进行中。</exception>
      <returns>引用异步连接的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)">
      <summary>开始异步请求从远程终结点断开连接。</summary>
      <param name="reuseSocket">如果关闭该连接后可以重用此套接字，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">一个对象，它包含此请求的状态信息。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <returns>一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步操作。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>开始从连接的 <see cref="T:System.Net.Sockets.Socket" /> 中异步接收数据。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 类型的数组，它是存储接收到的数据的位置。</param>
      <param name="offset">
        <paramref name="buffer" /> 参数中存储所接收数据的位置，该位置从零开始计数。</param>
      <param name="size">要接收的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="callback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">一个用户定义的对象，其中包含接收操作的相关信息。 当操作完成时，此对象会被传递给 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <returns>引用异步读的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>开始从连接的 <see cref="T:System.Net.Sockets.Socket" /> 中异步接收数据。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 类型的数组，它是存储接收到的数据的位置。</param>
      <param name="offset">
        <paramref name="buffer" /> 中存储所接收数据的位置。</param>
      <param name="size">要接收的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="errorCode">一个 <see cref="T:System.Net.Sockets.SocketError" /> 对象，它存储套接字错误。</param>
      <param name="callback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">一个用户定义的对象，其中包含接收操作的相关信息。 当操作完成时，此对象会被传递给 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <returns>引用异步读的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>开始从连接的 <see cref="T:System.Net.Sockets.Socket" /> 中异步接收数据。</summary>
      <param name="buffers">
        <see cref="T:System.Byte" /> 类型的数组，它是存储接收到的数据的位置。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="callback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">一个用户定义的对象，其中包含接收操作的相关信息。 当操作完成时，此对象会被传递给 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>引用异步读的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>开始从连接的 <see cref="T:System.Net.Sockets.Socket" /> 中异步接收数据。</summary>
      <param name="buffers">
        <see cref="T:System.Byte" /> 类型的数组，它是存储接收到的数据的位置。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="errorCode">一个 <see cref="T:System.Net.Sockets.SocketError" /> 对象，它存储套接字错误。</param>
      <param name="callback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">一个用户定义的对象，其中包含接收操作的相关信息。 当操作完成时，此对象会被传递给 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>引用异步读的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>开始从指定网络设备中异步接收数据。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 类型的数组，它是存储接收到的数据的位置。</param>
      <param name="offset">
        <paramref name="buffer" /> 参数中存储数据的位置，该位置从零开始计数。</param>
      <param name="size">要接收的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="remoteEP">一个 <see cref="T:System.Net.EndPoint" />，它表示数据的来源。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此请求的状态信息的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
      <returns>引用异步读的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>开始使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 将指定字节数的数据异步接收到数据缓冲区的指定位置，然后存储终结点和数据包信息。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 类型的数组，它是存储接收到的数据的位置。</param>
      <param name="offset">
        <paramref name="buffer" /> 参数中存储数据的位置，该位置从零开始计数。</param>
      <param name="size">要接收的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="remoteEP">一个 <see cref="T:System.Net.EndPoint" />，它表示数据的来源。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此请求的状态信息的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>引用异步读的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>将数据异步发送到连接的 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 类型的数组，它包含要发送的数据。</param>
      <param name="offset">
        <paramref name="buffer" /> 参数中开始发送数据的位置，该位置从零开始计数。</param>
      <param name="size">要发送的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此请求的状态信息的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。 请参见下面的备注部分。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 小于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>引用异步发送的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>将数据异步发送到连接的 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 类型的数组，它包含要发送的数据。</param>
      <param name="offset">
        <paramref name="buffer" /> 参数中开始发送数据的位置，该位置从零开始计数。</param>
      <param name="size">要发送的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="errorCode">一个 <see cref="T:System.Net.Sockets.SocketError" /> 对象，它存储套接字错误。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此请求的状态信息的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。 请参见下面的备注部分。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 小于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>引用异步发送的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>将数据异步发送到连接的 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <param name="buffers">
        <see cref="T:System.Byte" /> 类型的数组，它包含要发送的数据。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此请求的状态信息的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> 为空。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。 请参见下面的备注部分。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>引用异步发送的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>将数据异步发送到连接的 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <param name="buffers">
        <see cref="T:System.Byte" /> 类型的数组，它包含要发送的数据。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="errorCode">一个 <see cref="T:System.Net.Sockets.SocketError" /> 对象，它存储套接字错误。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此请求的状态信息的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> 为空。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。 请参见下面的备注部分。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>引用异步发送的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)">
      <summary>使用 <see cref="T:System.Net.Sockets.Socket" /> 标志，将文件 <paramref name="fileName" /> 发送到连接的 <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> 对象。</summary>
      <param name="fileName">一个字符串，它包含要发送的文件的路径和名称。 此参数可以为 <see langword="null" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此请求的状态信息的对象。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.NotSupportedException">套接字未连接到远程主机。</exception>
      <exception cref="T:System.IO.FileNotFoundException">未找到文件 <paramref name="fileName" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。 请参见下面的备注部分。</exception>
      <returns>一个 <see cref="T:System.IAsyncResult" /> 对象，它表示异步发送。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)">
      <summary>将文件和数据缓冲区异步发送到连接的 <see cref="T:System.Net.Sockets.Socket" /> 对象。</summary>
      <param name="fileName">一个字符串，它包含要发送的文件的路径和名称。 此参数可以为 <see langword="null" />。</param>
      <param name="preBuffer">一个 <see cref="T:System.Byte" /> 数组，它包含发送文件前要发送的数据。 此参数可以为 <see langword="null" />。</param>
      <param name="postBuffer">一个 <see cref="T:System.Byte" /> 数组，它包含发送文件后要发送的数据。 此参数可以为 <see langword="null" />。</param>
      <param name="flags">
        <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 值的按位组合。</param>
      <param name="callback">一个 <see cref="T:System.AsyncCallback" /> 委托，将在此操作完成时调用它。 此参数可以为 <see langword="null" />。</param>
      <param name="state">一个用户定义的对象，它包含此请求的状态信息。 此参数可以为 <see langword="null" />。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。 请参见下面的备注部分。</exception>
      <exception cref="T:System.NotSupportedException">操作系统不是 Windows NT 或更高版本。  
  
- 或 -
  
 套接字未连接到远程主机。</exception>
      <exception cref="T:System.IO.FileNotFoundException">未找到文件 <paramref name="fileName" />。</exception>
      <returns>一个 <see cref="T:System.IAsyncResult" /> 对象，它表示异步操作。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>以异步方式将数据发送到特定远程主机。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 类型的数组，它包含要发送的数据。</param>
      <param name="offset">
        <paramref name="buffer" /> 中的从其开始发送数据的、从零开始编排的位置。</param>
      <param name="size">要发送的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="remoteEP">表示远程设备的 <see cref="T:System.Net.EndPoint" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此请求的状态信息的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
      <returns>引用异步发送的 <see cref="T:System.IAsyncResult" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
      <summary>使 <see cref="T:System.Net.Sockets.Socket" /> 与一个本地终结点相关联。</summary>
      <param name="localEP">要与 <see cref="T:System.Net.EndPoint" /> 关联的本地 <see cref="T:System.Net.Sockets.Socket" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>取消一个对远程主机连接的异步请求。</summary>
      <param name="e">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象，该对象用于通过调用 <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" /> 方法之一，请求与远程主机的连接。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 参数不能为 null，并且 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 不能为空。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary>关闭 <see cref="T:System.Net.Sockets.Socket" /> 连接并释放所有关联的资源。</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary>关闭 <see cref="T:System.Net.Sockets.Socket" /> 连接并释放所有与指定超时关联的资源，以允许要发送的数据排队。</summary>
      <param name="timeout">等待最多 <paramref name="timeout" /> 秒钟后，即可发送任何剩余数据，然后关闭套接字。</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)">
      <summary>与远程主机建立连接。</summary>
      <param name="remoteEP">表示远程设备的 <see cref="T:System.Net.EndPoint" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
      <exception cref="T:System.InvalidOperationException">已通过调用 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 将 <see cref="T:System.Net.Sockets.Socket" /> 置于侦听状态。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)">
      <summary>与远程主机建立连接。 主机由 IP 地址和端口号指定。</summary>
      <param name="address">远程主机的 IP 地址。</param>
      <param name="port">远程主机的端口号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">端口号无效。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.NotSupportedException">此方法对 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 系列中的套接字有效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> 的长度为零。</exception>
      <exception cref="T:System.InvalidOperationException">已通过调用 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 将 <see cref="T:System.Net.Sockets.Socket" /> 置于侦听状态。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>与远程主机建立连接。 主机由 IP 地址数组和端口号指定。</summary>
      <param name="addresses">远程主机的 IP 地址。</param>
      <param name="port">远程主机的端口号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">端口号无效。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.NotSupportedException">此方法对 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 系列中的套接字有效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> 的长度为零。</exception>
      <exception cref="T:System.InvalidOperationException">已通过调用 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 将 <see cref="T:System.Net.Sockets.Socket" /> 置于侦听状态。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)">
      <summary>与远程主机建立连接。 主机由主机名和端口号指定。</summary>
      <param name="host">远程主机的名称。</param>
      <param name="port">远程主机的端口号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">端口号无效。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.NotSupportedException">此方法对 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 系列中的套接字有效。</exception>
      <exception cref="T:System.InvalidOperationException">已通过调用 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 将 <see cref="T:System.Net.Sockets.Socket" /> 置于侦听状态。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>开始一个对远程主机连接的异步请求。</summary>
      <param name="e">要用于此异步套接字操作的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentException">自变量无效。 如果指定了多个缓冲区，即 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 属性不为 null，将会发生此异常。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 参数不能为 null，并且 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 不能为空。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> 正在侦听或已经在使用 <paramref name="e" /> 参数中指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象执行套接字操作。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows XP 或更高版本。 如果本地终结点和 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 不是相同的地址族，也会发生此异常。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
      <returns>如果 I/O 操作挂起，则为 <see langword="true" />。 操作完成时，将引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。  
  
 如果 I/O 操作同步完成，则为 <see langword="false" />。 在这种情况下，将不会引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，并且可能在方法调用返回后立即检查作为参数传递的 <paramref name="e" /> 对象以检索操作的结果。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>开始一个对远程主机连接的异步请求。</summary>
      <param name="socketType">
        <see cref="T:System.Net.Sockets.SocketType" /> 值之一。</param>
      <param name="protocolType">
        <see cref="T:System.Net.Sockets.ProtocolType" /> 值之一。</param>
      <param name="e">要用于此异步套接字操作的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentException">自变量无效。 如果指定了多个缓冲区，即 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 属性不为 null，将会发生此异常。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 参数不能为 null，并且 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 不能为空。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> 正在侦听或已经在使用 <paramref name="e" /> 参数中指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象执行套接字操作。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows XP 或更高版本。 如果本地终结点和 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 不是相同的地址族，也会发生此异常。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
      <returns>如果 I/O 操作挂起，则为 <see langword="true" />。 操作完成时，将引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。  
  
 如果 I/O 操作同步完成，则为 <see langword="false" />。 在这种情况下，将不会引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，并且可能在方法调用返回后立即检查作为参数传递的 <paramref name="e" /> 对象以检索操作的结果。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Disconnect(System.Boolean)">
      <summary>关闭套接字连接并允许重用套接字。</summary>
      <param name="reuseSocket">如果关闭当前连接后可以重用此套接字，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>开始异步请求从远程终结点断开连接。</summary>
      <param name="e">要用于此异步套接字操作的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 参数不能为 NULL。</exception>
      <exception cref="T:System.InvalidOperationException">已经在使用 <paramref name="e" /> 参数中指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象执行套接字操作。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows XP 或更高版本。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <returns>如果 I/O 操作挂起，则为 <see langword="true" />。 操作完成时，将引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。  
  
 如果 I/O 操作同步完成，则为 <see langword="false" />。 在这种情况下，将不会引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，并且可能在方法调用返回后立即检查作为参数传递的 <paramref name="e" /> 对象以检索操作的结果。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary>释放 <see cref="T:System.Net.Sockets.Socket" /> 类的当前实例所使用的所有资源。</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Net.Sockets.Socket" /> 使用的非托管资源，并可根据需要释放托管资源。</summary>
      <param name="disposing">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)">
      <summary>重复目标进程的套接字引用，并关闭此进程的套接字。</summary>
      <param name="targetProcessId">从中创建重复套接字引用的目标进程的 ID。</param>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="targetProcessID" /> 不是有效的进程 ID。 
- 或 - 
套接字引用的复制失败。</exception>
      <returns>要传递到目标进程的套接字引用。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)">
      <summary>异步接受传入的连接尝试，并创建新的 <see cref="T:System.Net.Sockets.Socket" /> 对象来处理远程主机通信。 此方法返回包含所传输的初始数据的缓冲区。</summary>
      <param name="buffer">包含所传输字节的类型 <see cref="T:System.Byte" /> 的数组。</param>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 对象，它存储此异步操作的状态信息以及任何用户定义数据。</param>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows NT。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为空。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 并不是通过对 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> 的调用创建的。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> 方法以前被调用过。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问 <see cref="T:System.Net.Sockets.Socket" /> 时出错</exception>
      <returns>一个 <see cref="T:System.Net.Sockets.Socket" /> 对象，它处理与远程主机的通信。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)">
      <summary>异步接受传入的连接尝试，并创建新的 <see cref="T:System.Net.Sockets.Socket" /> 对象来处理远程主机通信。 此方法返回一个缓冲区，其中包含初始数据和传输的字节数。</summary>
      <param name="buffer">包含所传输字节的类型 <see cref="T:System.Byte" /> 的数组。</param>
      <param name="bytesTransferred">已传输的字节数。</param>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 对象，它存储此异步操作的状态信息以及任何用户定义数据。</param>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows NT。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为空。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 并不是通过对 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> 的调用创建的。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> 方法以前被调用过。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问 <see cref="T:System.Net.Sockets.Socket" /> 时出错。</exception>
      <returns>一个 <see cref="T:System.Net.Sockets.Socket" /> 对象，它处理与远程主机的通信。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)">
      <summary>异步接受传入的连接尝试，并创建新的 <see cref="T:System.Net.Sockets.Socket" /> 来处理远程主机通信。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" />，它存储此异步操作的状态信息以及任何用户定义数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 并不是通过对 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> 的调用创建的。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。 有关详细信息，请参阅备注部分。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> 方法以前被调用过。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows NT。</exception>
      <returns>一个 <see cref="T:System.Net.Sockets.Socket" />，它处理与远程主机的通信。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)">
      <summary>结束挂起的异步连接请求。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" />，它存储此异步操作的状态信息以及所有用户定义的数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">对 <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</exception>
      <exception cref="T:System.InvalidOperationException">先前曾为异步连接调用过 <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)">
      <summary>结束挂起的异步断开连接请求。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 对象，它存储此异步操作的状态信息以及所有用户定义数据。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">对 <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</exception>
      <exception cref="T:System.InvalidOperationException">先前曾为异步连接调用过 <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.Net.WebException">断开连接请求已超时。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)">
      <summary>结束挂起的异步读取。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" />，它存储此异步操作的状态信息以及所有用户定义的数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">对 <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</exception>
      <exception cref="T:System.InvalidOperationException">先前曾为异步读取调用过 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>结束挂起的异步读取。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" />，它存储此异步操作的状态信息以及所有用户定义的数据。</param>
      <param name="errorCode">一个 <see cref="T:System.Net.Sockets.SocketError" /> 对象，它存储套接字错误。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">对 <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</exception>
      <exception cref="T:System.InvalidOperationException">先前曾为异步读取调用过 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)">
      <summary>结束挂起的、从特定终结点进行异步读取。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" />，它存储此异步操作的状态信息以及所有用户定义的数据。</param>
      <param name="endPoint">源 <see cref="T:System.Net.EndPoint" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">对 <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</exception>
      <exception cref="T:System.InvalidOperationException">先前曾为异步读取调用过 <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>如果成功，则返回已接收的字节数。 如果不成功，则返回 0。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>结束挂起的、从特定终结点进行异步读取。 此方法还显示有关数据包而不是 <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> 的更多信息。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" />，它存储此异步操作的状态信息以及所有用户定义的数据。</param>
      <param name="socketFlags">所接收数据包的 <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="endPoint">源 <see cref="T:System.Net.EndPoint" />。</param>
      <param name="ipPacketInformation">所接收数据包的 <see cref="T:System.Net.IPAddress" /> 和接口。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />  
  
- 或 - 
 <paramref name="endPoint" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">对 <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</exception>
      <exception cref="T:System.InvalidOperationException">先前曾为异步读取调用过 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>如果成功，则返回已接收的字节数。 如果不成功，则返回 0。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)">
      <summary>结束挂起的异步发送。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" />，它存储此异步操作的状态信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">对 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</exception>
      <exception cref="T:System.InvalidOperationException">先前为异步发送已调用过 <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>如果成功，则将返回向 <see cref="T:System.Net.Sockets.Socket" /> 发送的字节数；否则会返回无效 <see cref="T:System.Net.Sockets.Socket" /> 错误。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>结束挂起的异步发送。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" />，它存储此异步操作的状态信息。</param>
      <param name="errorCode">一个 <see cref="T:System.Net.Sockets.SocketError" /> 对象，它存储套接字错误。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">对 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</exception>
      <exception cref="T:System.InvalidOperationException">先前为异步发送已调用过 <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>如果成功，则将返回向 <see cref="T:System.Net.Sockets.Socket" /> 发送的字节数；否则会返回无效 <see cref="T:System.Net.Sockets.Socket" /> 错误。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)">
      <summary>结束文件的挂起异步发送。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 对象，它存储此异步操作的状态信息。</param>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows NT。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为空。</exception>
      <exception cref="T:System.ArgumentException">对 <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</exception>
      <exception cref="T:System.InvalidOperationException">先前曾为异步 <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> 调用过 <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。 请参见下面的备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)">
      <summary>结束挂起的、向指定位置进行的异步发送。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" />，它存储此异步操作的状态信息以及所有用户定义的数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">对 <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</exception>
      <exception cref="T:System.InvalidOperationException">先前为异步发送已调用过 <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>如果成功，则返回已发送的字节数；否则会返回无效 <see cref="T:System.Net.Sockets.Socket" /> 错误。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary>释放 <see cref="T:System.Net.Sockets.Socket" /> 类使用的资源。</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetRawSocketOption(System.Int32,System.Int32,System.Span{System.Byte})">
      <summary>使用平台特定的级别和名称标识符获取套接字选项值。</summary>
      <param name="optionLevel">平台定义的选项级别。</param>
      <param name="optionName">平台定义的选项名称。</param>
      <param name="optionValue">检索到的选项值应存储到的范围。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <returns>已成功检索的值已写入 <paramref name="optionValue" /> 的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)">
      <summary>返回指定的 <see cref="T:System.Net.Sockets.Socket" /> 选项的值，表示为一个对象。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值之一。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 值之一。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。  
  
- 或 - 
 <paramref name="optionName" /> 设置为不支持的值 <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" />。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>一个对象，表示选项的值。 当将 <paramref name="optionName" /> 参数设置为 <see cref="F:System.Net.Sockets.SocketOptionName.Linger" /> 时，返回值为 <see cref="T:System.Net.Sockets.LingerOption" /> 类的一个实例。 当将 <paramref name="optionName" /> 设置为 <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> 或 <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" /> 时，返回值为 <see cref="T:System.Net.Sockets.MulticastOption" /> 类的一个实例。 当 <paramref name="optionName" /> 为其他任何值时，返回值为整数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>返回指定的 <see cref="T:System.Net.Sockets.Socket" /> 选项设置，表示为字节数组。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值之一。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 值之一。</param>
      <param name="optionValue">
        <see cref="T:System.Byte" /> 类型的数组，用于接收选项设置。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。  
  
- 或 - 
在 .NET Compact Framework 应用程序中，Windows CE 默认缓冲区的空间被设置为 32768 字节。 通过调用 <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />，可以更改每个套接字缓冲区的空间。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>返回数组中指定的 <see cref="T:System.Net.Sockets.Socket" /> 选项的值。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值之一。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 值之一。</param>
      <param name="optionLength">所需返回值的长度（以字节为单位）。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。  
  
- 或 - 
在 .NET Compact Framework 应用程序中，Windows CE 默认缓冲区的空间被设置为 32768 字节。 通过调用 <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />，可以更改每个套接字缓冲区的空间。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>
        <see cref="T:System.Byte" /> 类型的数组，它包含套接字选项的值。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])">
      <summary>使用数字控制代码，为 <see cref="T:System.Net.Sockets.Socket" /> 设置低级操作模式。</summary>
      <param name="ioControlCode">一个 <see cref="T:System.Int32" /> 值，该值指定要执行的操作的控制代码。</param>
      <param name="optionInValue">一个 <see cref="T:System.Byte" /> 数组，它包含操作需要的输入数据。</param>
      <param name="optionOutValue">一个 <see cref="T:System.Byte" /> 数组，它包含操作返回的输出数据。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">尝试不使用 <see cref="P:System.Net.Sockets.Socket.Blocking" /> 属性更改阻止模式。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的调用方没有所需的权限。</exception>
      <returns>
        <paramref name="optionOutValue" /> 参数中的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])">
      <summary>使用 <see cref="T:System.Net.Sockets.Socket" /> 枚举指定控制代码，为 <see cref="T:System.Net.Sockets.IOControlCode" /> 设置低级操作模式。</summary>
      <param name="ioControlCode">一个 <see cref="T:System.Net.Sockets.IOControlCode" /> 值，它指定要执行的操作的控制代码。</param>
      <param name="optionInValue">
        <see cref="T:System.Byte" /> 类型的数组，包含操作要求的输入数据。</param>
      <param name="optionOutValue">
        <see cref="T:System.Byte" /> 类型的数组，包含由操作返回的输出数据。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">尝试不使用 <see cref="P:System.Net.Sockets.Socket.Blocking" /> 属性更改阻止模式。</exception>
      <returns>
        <paramref name="optionOutValue" /> 参数中的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen">
      <summary>将 <see cref="T:System.Net.Sockets.Socket" /> 置于侦听状态。</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen(System.Int32)">
      <summary>将 <see cref="T:System.Net.Sockets.Socket" /> 置于侦听状态。</summary>
      <param name="backlog">挂起连接队列的最大长度。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)">
      <summary>确定 <see cref="T:System.Net.Sockets.Socket" /> 的状态。</summary>
      <param name="microSeconds">等待响应的时间（以微秒为单位）。</param>
      <param name="mode">
        <see cref="T:System.Net.Sockets.SelectMode" /> 值之一。</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="mode" /> 参数不是一个 <see cref="T:System.Net.Sockets.SelectMode" /> 值。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。 请参见下面的备注。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>基于 <paramref name="mode" /> 参数中传递的轮询模式值的 <see cref="T:System.Net.Sockets.Socket" /> 的状态。  
  
 <list type="table"><listheader><term> 模式</term><description> 返回值</description></listheader><item><term><see cref="F:System.Net.Sockets.SelectMode.SelectRead" /></term><description>如果已调用 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 并且有挂起的连接，则为 <see langword="true" />。 
- 或 - 
 如果有数据可供读取，则为 <see langword="true" />。 
- 或 - 
 如果连接已关闭、重置或终止，则返回 <see langword="true" />； 
否则，返回 <see langword="false" />。</description></item><item><term><see cref="F:System.Net.Sockets.SelectMode.SelectWrite" /></term><description>如果正在处理 <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> 并且连接已成功，则为 <see langword="true" />； 
- 或 - 
 如果可以发送数据，则返回 <see langword="true" />； 
否则，返回 <see langword="false" />。</description></item><item><term><see cref="F:System.Net.Sockets.SelectMode.SelectError" /></term><description>如果正在处理不阻止的 <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />，并且连接已失败，则为 <see langword="true" />； 
- 或 - 
 如果 <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> 未设置，并且带外数据可用，则为 <see langword="true" />； 
否则，返回 <see langword="false" />。</description></item></list></returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[])">
      <summary>从绑定的 <see cref="T:System.Net.Sockets.Socket" /> 套接字接收数据，将数据存入接收缓冲区。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 类型的数组，它是存储接收到的数据的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的调用方没有所需的权限。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" />，从绑定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 接收指定的字节数，存入接收缓冲区的指定偏移量位置。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，它是所接受的数据的存储位置。</param>
      <param name="offset">
        <paramref name="buffer" /> 中存储所接收数据的位置。</param>
      <param name="size">要接收的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> 不是有效的值组合。  
  
- 或 - 
未设置 <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 属性。  
  
- 或 - 
访问 <see cref="T:System.Net.Sockets.Socket" /> 时出现操作系统错误。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的调用方没有所需的权限。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" />，从绑定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 接收数据，将数据存入接收缓冲区。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 类型的数组，它是存储接收到的数据的位置。</param>
      <param name="offset">
        <paramref name="buffer" /> 参数中的位置，用于存储所接收的数据。</param>
      <param name="size">要接收的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="errorCode">一个 <see cref="T:System.Net.Sockets.SocketError" /> 对象，它存储套接字错误。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> 不是有效的值组合。  
  
- 或 - 
未设置 <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 属性。  
  
- 或 - 
访问 <see cref="T:System.Net.Sockets.Socket" /> 时出现操作系统错误。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的调用方没有所需的权限。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" />，从绑定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 接收指定字节数的数据，并将数据存入接收缓冲区。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 类型的数组，它是存储接收到的数据的位置。</param>
      <param name="size">要接收的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> 超出了 <paramref name="buffer" /> 的大小。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的调用方没有所需的权限。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" />，从绑定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 接收数据，将数据存入接收缓冲区。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 类型的数组，它是存储接收到的数据的位置。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的调用方没有所需的权限。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>从绑定的 <see cref="T:System.Net.Sockets.Socket" /> 接收数据，将数据存入接收缓冲区列表中。</summary>
      <param name="buffers">
        <see cref="T:System.ArraySegment`1" /> 类型的一个 <see cref="T:System.Byte" /> 列表，包含接收的数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" />，从绑定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 接收数据，将数据存入接收缓冲区列表中。</summary>
      <param name="buffers">
        <see cref="T:System.ArraySegment`1" /> 类型的一个 <see cref="T:System.Byte" /> 列表，包含接收的数据。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="buffers" />.Count 是零。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" />，从绑定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 接收数据，将数据存入接收缓冲区列表中。</summary>
      <param name="buffers">
        <see cref="T:System.ArraySegment`1" /> 类型的一个 <see cref="T:System.Byte" /> 列表，包含接收的数据。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="errorCode">一个 <see cref="T:System.Net.Sockets.SocketError" /> 对象，它存储套接字错误。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="buffers" />.Count 是零。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte})">
      <summary>从绑定的 <see cref="T:System.Net.Sockets.Socket" /> 套接字接收数据，将数据存入接收缓冲区。</summary>
      <param name="buffer">一个字节范围，它是所接收的数据的存储位置。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的调用方没有所需的权限。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" />，从绑定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 接收数据，将数据存入接收缓冲区。</summary>
      <param name="buffer">一个字节范围，它是所接收的数据的存储位置。</param>
      <param name="socketFlags">枚举值的按位组合，它用于指定发送和接收行为。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的调用方没有所需的权限。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" />，从绑定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 接收数据，将数据存入接收缓冲区。</summary>
      <param name="buffer">一个字节范围，它是所接收的数据的存储位置。</param>
      <param name="socketFlags">枚举值的按位组合，它用于指定发送和接收行为。</param>
      <param name="errorCode">当此方法返回时，将包含定义套接字错误代码的枚举值之一。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的调用方没有所需的权限。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>开始一个异步请求以便从连接的 <see cref="T:System.Net.Sockets.Socket" /> 对象中接收数据。</summary>
      <param name="e">要用于此异步套接字操作的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentException">参数无效。 <paramref name="e" /> 参数的 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 或 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 属性必须引用有效的缓冲区。 可以设置这两个属性中的某一个，但不能同时设置这两个属性。</exception>
      <exception cref="T:System.InvalidOperationException">已经在使用 <paramref name="e" /> 参数中指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象执行套接字操作。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows XP 或更高版本。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <returns>如果 I/O 操作挂起，则为 <see langword="true" />。 操作完成时，将引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。  
  
 如果 I/O 操作同步完成，则为 <see langword="false" />。 在这种情况下，将不会引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，并且可能在方法调用返回后立即检查作为参数传递的 <paramref name="e" /> 对象以检索操作的结果。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 将指定的数据字节数接收到数据缓冲区的指定位置，并存储终结点。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，它是所接受的数据的存储位置。</param>
      <param name="offset">
        <paramref name="buffer" /> 参数中的位置，用于存储所接收的数据。</param>
      <param name="size">要接收的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="remoteEP">通过引用传递的 <see cref="T:System.Net.EndPoint" />，表示远程服务器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去偏移量参数的值。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> 不是有效的值组合。  
  
- 或 - 
未设置 <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 属性。  
  
- 或 - 
尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 将指定的字节数接收到数据缓冲区并存储终结点。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，它是所接受的数据的存储位置。</param>
      <param name="size">要接收的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="remoteEP">通过引用传递的 <see cref="T:System.Net.EndPoint" />，表示远程服务器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" />的长度。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> 不是有效的值组合。  
  
- 或 - 
未设置 <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 属性。  
  
- 或 - 
访问 <see cref="T:System.Net.Sockets.Socket" /> 时出现操作系统错误。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的调用方没有所需的权限。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)">
      <summary>将数据报接收到数据缓冲区并存储终结点。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，它是所接受的数据的存储位置。</param>
      <param name="remoteEP">通过引用传递的 <see cref="T:System.Net.EndPoint" />，表示远程服务器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的调用方没有所需的权限。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 将数据报接收到数据缓冲区并存储终结点。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 类型的数组，它是存储接收到的数据的位置。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="remoteEP">通过引用传递的 <see cref="T:System.Net.EndPoint" />，表示远程服务器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的调用方没有所需的权限。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>开始从指定网络设备中异步接收数据。</summary>
      <param name="e">要用于此异步套接字操作的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 不能为 null。</exception>
      <exception cref="T:System.InvalidOperationException">已经在使用 <paramref name="e" /> 参数中指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象执行套接字操作。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows XP 或更高版本。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <returns>如果 I/O 操作挂起，则为 <see langword="true" />。 操作完成时，将引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。  
  
 如果 I/O 操作同步完成，则为 <see langword="false" />。 在这种情况下，将不会引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，并且可能在方法调用返回后立即检查作为参数传递的 <paramref name="e" /> 对象以检索操作的结果。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 将指定字节数的数据接收到指定的数据缓冲区位置，并存储终结点和数据包信息。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，它是所接受的数据的存储位置。</param>
      <param name="offset">
        <paramref name="buffer" /> 参数中的位置，用于存储所接收的数据。</param>
      <param name="size">要接收的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="remoteEP">通过引用传递的 <see cref="T:System.Net.EndPoint" />，表示远程服务器。</param>
      <param name="ipPacketInformation">保存地址和接口信息的 <see cref="T:System.Net.Sockets.IPPacketInformation" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去偏移量参数的值。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> 不是有效的值组合。  
  
- 或 - 
未设置 <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 属性。  
  
- 或 - 
.NET Framework 运行在 AMD 64 位处理器上。  
  
- 或 - 
尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>收到的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>开始使用指定的 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" /> 将指定字节数的数据异步接收到数据缓冲区的指定位置，并存储终结点和数据包信息。</summary>
      <param name="e">要用于此异步套接字操作的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 不能为 null。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows XP 或更高版本。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <returns>如果 I/O 操作挂起，则为 <see langword="true" />。 操作完成时，将引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。  
  
 如果 I/O 操作同步完成，则为 <see langword="false" />。 在这种情况下，将不会引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，并且可能在方法调用返回后立即检查作为参数传递的 <paramref name="e" /> 对象以检索操作的结果。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary>确定一个或多个套接字的状态。</summary>
      <param name="checkRead">用于检查可读性的 <see cref="T:System.Net.Sockets.Socket" /> 实例的 <see cref="T:System.Collections.IList" />。</param>
      <param name="checkWrite">用于检查可写性的 <see cref="T:System.Net.Sockets.Socket" /> 实例的 <see cref="T:System.Collections.IList" />。</param>
      <param name="checkError">用于检查错误的 <see cref="T:System.Net.Sockets.Socket" /> 实例的 <see cref="T:System.Collections.IList" />。</param>
      <param name="microSeconds">超时值（以微秒为单位）。 值 -1 指示无限超时。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="checkRead" /> 参数为 <see langword="null" /> 或为空。  
  
－和－ 
<paramref name="checkWrite" /> 参数为 <see langword="null" /> 或为空 
－和－ 
<paramref name="checkError" /> 参数为 <see langword="null" /> 或为空。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">.NET 5.0 及更高版本：释放一个或多个套接字。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[])">
      <summary>将数据发送到连接的 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，其中包含要发送的数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>发送到 <see cref="T:System.Net.Sockets.Socket" /> 的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>从指定偏移量开始，使用指定 <see cref="T:System.Net.Sockets.SocketFlags" />，将指定的数据字节数发送到已连接的 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，其中包含要发送的数据。</param>
      <param name="offset">开始发送数据的缓冲区中的位置。</param>
      <param name="size">要发送的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> 不是有效的值组合。  
  
- 或 - 
访问 <see cref="T:System.Net.Sockets.Socket" /> 时出现操作系统错误。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>发送到 <see cref="T:System.Net.Sockets.Socket" /> 的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>从指定的偏移量开始使用指定的 <see cref="T:System.Net.Sockets.Socket" /> 将指定字节数的数据发送到连接的 <see cref="T:System.Net.Sockets.SocketFlags" />。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，其中包含要发送的数据。</param>
      <param name="offset">开始发送数据的缓冲区中的位置。</param>
      <param name="size">要发送的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="errorCode">一个 <see cref="T:System.Net.Sockets.SocketError" /> 对象，它存储套接字错误。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> 不是有效的值组合。  
  
- 或 - 
访问 <see cref="T:System.Net.Sockets.Socket" /> 时出现操作系统错误。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>发送到 <see cref="T:System.Net.Sockets.Socket" /> 的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" />，将指定字节数的数据发送到已连接的 <see cref="T:System.Net.Sockets.SocketFlags" />。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，其中包含要发送的数据。</param>
      <param name="size">要发送的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> 小于 0 或超过缓冲区的大小。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> 不是有效的值组合。  
  
- 或 - 
访问套接字时发生操作系统错误。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>发送到 <see cref="T:System.Net.Sockets.Socket" /> 的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" /> 将数据发送到连接的 <see cref="T:System.Net.Sockets.SocketFlags" />。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，其中包含要发送的数据。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>发送到 <see cref="T:System.Net.Sockets.Socket" /> 的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>将列表中的一组缓冲区发送到连接的 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <param name="buffers">
        <see cref="T:System.ArraySegment`1" /> 类型的 <see cref="T:System.Byte" /> 的列表，它包含要发送的数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> 为空。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。 请参见下面的备注部分。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>发送到 <see cref="T:System.Net.Sockets.Socket" /> 的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" />，将列表中的一组缓冲区发送到连接的 <see cref="T:System.Net.Sockets.SocketFlags" />。</summary>
      <param name="buffers">
        <see cref="T:System.ArraySegment`1" /> 类型的 <see cref="T:System.Byte" /> 的列表，它包含要发送的数据。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> 为空。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>发送到 <see cref="T:System.Net.Sockets.Socket" /> 的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" />，将列表中的一组缓冲区发送到连接的 <see cref="T:System.Net.Sockets.SocketFlags" />。</summary>
      <param name="buffers">
        <see cref="T:System.ArraySegment`1" /> 类型的 <see cref="T:System.Byte" /> 的列表，它包含要发送的数据。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="errorCode">一个 <see cref="T:System.Net.Sockets.SocketError" /> 对象，它存储套接字错误。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> 为空。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>发送到 <see cref="T:System.Net.Sockets.Socket" /> 的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte})">
      <summary>将数据发送到连接的 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <param name="buffer">一个字符范围，其中包含要发送的数据。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>发送到 <see cref="T:System.Net.Sockets.Socket" /> 的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" /> 将数据发送到连接的 <see cref="T:System.Net.Sockets.SocketFlags" />。</summary>
      <param name="buffer">一个字符范围，其中包含要发送的数据。</param>
      <param name="socketFlags">枚举值的按位组合，它用于指定发送和接收行为。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>发送到 <see cref="T:System.Net.Sockets.Socket" /> 的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.Socket" /> 将数据发送到连接的 <see cref="T:System.Net.Sockets.SocketFlags" />。</summary>
      <param name="buffer">一个字符范围，其中包含要发送的数据。</param>
      <param name="socketFlags">枚举值的按位组合，它用于指定发送和接收行为。</param>
      <param name="errorCode">当此方法返回时，将包含定义套接字错误代码的枚举值之一。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>发送到 <see cref="T:System.Net.Sockets.Socket" /> 的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>将数据异步发送到连接的 <see cref="T:System.Net.Sockets.Socket" /> 对象。</summary>
      <param name="e">要用于此异步套接字操作的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 参数的 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 或 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 属性必须引用有效的缓冲区。 可以设置这两个属性中的某一个，但不能同时设置这两个属性。</exception>
      <exception cref="T:System.InvalidOperationException">已经在使用 <paramref name="e" /> 参数中指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象执行套接字操作。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows XP 或更高版本。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="T:System.Net.Sockets.Socket" /> 尚未连接或者尚未通过 <see cref="M:System.Net.Sockets.Socket.Accept" />、<see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 或 <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" /> 方法获得。</exception>
      <returns>如果 I/O 操作挂起，则为 <see langword="true" />。 操作完成时，将引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。  
  
 如果 I/O 操作同步完成，则为 <see langword="false" />。 在这种情况下，将不会引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，并且可能在方法调用返回后立即检查作为参数传递的 <paramref name="e" /> 对象以检索操作的结果。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String)">
      <summary>使用 <see cref="T:System.Net.Sockets.Socket" /> 传输标志，将文件 <paramref name="fileName" /> 发送到连接的 <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> 对象。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，它包含要发送的文件的路径和名称。 此参数可以为 <see langword="null" />。</param>
      <exception cref="T:System.NotSupportedException">套接字未连接到远程主机。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象未处于阻止模式，无法接受此同步调用。</exception>
      <exception cref="T:System.IO.FileNotFoundException">未找到文件 <paramref name="fileName" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions)">
      <summary>通过指定的 <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 值，将文件 <paramref name="fileName" /> 和数据缓冲区发送到连接的 <see cref="T:System.Net.Sockets.Socket" /> 对象。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，它包含要发送的文件的路径和名称。 此参数可以为 <see langword="null" />。</param>
      <param name="preBuffer">一个 <see cref="T:System.Byte" /> 数组，它包含发送文件前要发送的数据。 此参数可以为 <see langword="null" />。</param>
      <param name="postBuffer">一个 <see cref="T:System.Byte" /> 数组，它包含发送文件后要发送的数据。 此参数可以为 <see langword="null" />。</param>
      <param name="flags">一个或多个 <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 值。</param>
      <exception cref="T:System.NotSupportedException">操作系统不是 Windows NT 或更高版本。  
  
- 或 -
  
 套接字未连接到远程主机。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象未处于阻止模式，无法接受此同步调用。</exception>
      <exception cref="T:System.IO.FileNotFoundException">未找到文件 <paramref name="fileName" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>将文件集合或者内存中的数据缓冲区以异步方法发送给连接的 <see cref="T:System.Net.Sockets.Socket" /> 对象。</summary>
      <param name="e">要用于此异步套接字操作的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象。</param>
      <exception cref="T:System.IO.FileNotFoundException">未找到在 <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" /> 属性中指定的文件。</exception>
      <exception cref="T:System.InvalidOperationException">已经在使用 <paramref name="e" /> 参数中指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象执行套接字操作。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows XP 或更高版本。 如果 <see cref="T:System.Net.Sockets.Socket" /> 未连接到远程主机，也会发生此异常。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">使用的是无连接 <see cref="T:System.Net.Sockets.Socket" />，并且所发送的文件超过了基础传输的最大数据包大小。</exception>
      <returns>如果 I/O 操作挂起，则为 <see langword="true" />。 操作完成时，将引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。  
  
 如果 I/O 操作同步完成，则为 <see langword="false" />。 在这种情况下，将不会引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，并且可能在方法调用返回后立即检查作为参数传递的 <paramref name="e" /> 对象以检索操作的结果。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" />，将指定字节数的数据发送到指定终结点（从缓冲区中的指定位置开始）。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，其中包含要发送的数据。</param>
      <param name="offset">开始发送数据的缓冲区中的位置。</param>
      <param name="size">要发送的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" />，它表示数据的目标位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="size" /> 小于 0。  
  
- 或 - 
 <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> 不是有效的值组合。  
  
- 或 - 
访问 <see cref="T:System.Net.Sockets.Socket" /> 时出现操作系统错误。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的调用方没有所需的权限。</exception>
      <returns>已发送的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" />，将指定字节数的数据发送到指定的终结点。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，其中包含要发送的数据。</param>
      <param name="size">要发送的字节数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" />，它表示数据的目标位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的 <paramref name="size" /> 超出 <paramref name="buffer" /> 的大小。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>已发送的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)">
      <summary>将数据发送到指定的终结点。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，其中包含要发送的数据。</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" />，它表示数据的目标位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>已发送的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" />，将数据发送到特定的终结点。</summary>
      <param name="buffer">类型 <see cref="T:System.Byte" /> 的数组，其中包含要发送的数据。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" />，它表示数据的目标位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="remoteEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>已发送的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>以异步方式将数据发送到特定远程主机。</summary>
      <param name="e">要用于此异步套接字操作的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 不能为 null。</exception>
      <exception cref="T:System.InvalidOperationException">已经在使用 <paramref name="e" /> 参数中指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 对象执行套接字操作。</exception>
      <exception cref="T:System.NotSupportedException">此方法需要 Windows XP 或更高版本。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">指定的协议是面向连接的，但 <see cref="T:System.Net.Sockets.Socket" /> 尚未连接。</exception>
      <returns>如果 I/O 操作挂起，则为 <see langword="true" />。 操作完成时，将引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。  
  
 如果 I/O 操作同步完成，则为 <see langword="false" />。 在这种情况下，将不会引发 <paramref name="e" /> 参数的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，并且可能在方法调用返回后立即检查作为参数传递的 <paramref name="e" /> 对象以检索操作的结果。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)">
      <summary>设置套接字的 IP 保护级别。</summary>
      <param name="level">要为此套接字设置的 IP 保护级别。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="level" /> 参数不能为 <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" />。 IP 保护级别不能设置为未指定。</exception>
      <exception cref="T:System.NotSupportedException">套接字的 <see cref="T:System.Net.Sockets.AddressFamily" /> 必须为 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetRawSocketOption(System.Int32,System.Int32,System.ReadOnlySpan{System.Byte})">
      <summary>使用平台特定的级别和名称标识符设置套接字选项值。</summary>
      <param name="optionLevel">平台定义的选项级别。</param>
      <param name="optionName">平台定义的选项名称。</param>
      <param name="optionValue">选项应设置的值。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)">
      <summary>将指定的 <see cref="T:System.Net.Sockets.Socket" /> 选项设置为指定的 <see cref="T:System.Boolean" /> 值。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值之一。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 值之一。</param>
      <param name="optionValue">选项的值，表示为 <see cref="T:System.Boolean" />。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 对象已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>将指定的 <see cref="T:System.Net.Sockets.Socket" /> 选项设置为指定的值，表示为字节数组。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值之一。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 值之一。</param>
      <param name="optionValue">
        <see cref="T:System.Byte" /> 类型的数组，表示选项值。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>将指定的 <see cref="T:System.Net.Sockets.Socket" /> 选项设置为指定的整数值。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值之一。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 值之一。</param>
      <param name="optionValue">该选项的值。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)">
      <summary>将指定的 <see cref="T:System.Net.Sockets.Socket" /> 选项设置为指定值，表示为对象。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值之一。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 值之一。</param>
      <param name="optionValue">一个 <see cref="T:System.Net.Sockets.LingerOption" /> 或 <see cref="T:System.Net.Sockets.MulticastOption" />，它包含该选项的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="optionValue" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary>禁用某 <see cref="T:System.Net.Sockets.Socket" /> 上的发送和接收。</summary>
      <param name="how">
        <see cref="T:System.Net.Sockets.SocketShutdown" /> 值之一，它指定不再允许执行的操作。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary>获取 <see cref="T:System.Net.Sockets.Socket" /> 的地址族。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.AddressFamily" /> 值之一。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Available">
      <summary>获取已经从网络接收且可供读取的数据量。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>从网络接收的、可供读取的数据的字节数。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Blocking">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Net.Sockets.Socket" /> 是否处于阻止模式。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>如果 <see cref="T:System.Net.Sockets.Socket" /> 将阻止，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary>获取一个值，该值指示 <see cref="T:System.Net.Sockets.Socket" /> 是在上次 <see cref="Overload:System.Net.Sockets.Socket.Send" /> 还是 <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 操作时连接到远程主机。</summary>
      <returns>如果 <see cref="T:System.Net.Sockets.Socket" /> 在最近操作时连接到远程资源，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.DontFragment">
      <summary>获取或设置 <see cref="T:System.Boolean" /> 值，该值指定 <see cref="T:System.Net.Sockets.Socket" /> 是否允许将 Internet 协议 (IP) 数据报分段。</summary>
      <exception cref="T:System.NotSupportedException">只有对于在 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 族中的套接字，才可以设置此属性。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>如果 <see cref="T:System.Net.Sockets.Socket" /> 允许数据报分段，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.DualMode">
      <summary>获取或设置一个 <see cref="T:System.Boolean" /> 值，该值指定 <see cref="T:System.Net.Sockets.Socket" /> 是否是用于 IPv4 和 IPv6 的双模式套接字。</summary>
      <returns>如果 <see cref="T:System.Net.Sockets.Socket" /> 是双模式套接字，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.EnableBroadcast">
      <summary>获取或设置一个 <see cref="T:System.Boolean" /> 值，该值指定 <see cref="T:System.Net.Sockets.Socket" /> 是否可以发送或接收广播数据包。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">此选项仅对数据报套接字有效。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>如果 <see cref="T:System.Net.Sockets.Socket" /> 允许广播数据包，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.ExclusiveAddressUse">
      <summary>获取或设置 <see cref="T:System.Boolean" /> 值，该值指定 <see cref="T:System.Net.Sockets.Socket" /> 是否仅允许一个进程绑定到端口。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">已为此 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 调用了 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <returns>如果 <see cref="T:System.Net.Sockets.Socket" /> 仅允许一个套接字绑定到特定端口，则为 <see langword="true" />；否则为 <see langword="false" />。 <see langword="true" />对于 Windows Server 2003 和 WINDOWS XP Service Pack 2 以及所有其他版本，默认值为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Handle">
      <summary>获取 <see cref="T:System.Net.Sockets.Socket" /> 的操作系统句柄。</summary>
      <returns>一个 <see cref="T:System.IntPtr" />，它表示 <see cref="T:System.Net.Sockets.Socket" /> 的操作系统句柄。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.IsBound">
      <summary>获取一个值，该值指示 <see cref="T:System.Net.Sockets.Socket" /> 是否绑定到特定本地端口。</summary>
      <returns>如果 <see cref="T:System.Net.Sockets.Socket" /> 绑定到本地端口，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.LingerState">
      <summary>获取或设置一个值，该值指定 <see cref="T:System.Net.Sockets.Socket" /> 在尝试发送所有挂起数据时是否延迟关闭套接字。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>一个 <see cref="T:System.Net.Sockets.LingerOption" />，它指定关闭套接字时如何逗留。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.LocalEndPoint">
      <summary>获取本地终结点。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>
        <see cref="T:System.Net.EndPoint" /> 当前用以进行通信的 <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.MulticastLoopback">
      <summary>获取或设置一个值，该值指定传出的多路广播数据包是否传递到发送应用程序。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>如果 <see cref="T:System.Net.Sockets.Socket" /> 接收传出的多路广播数据包，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary>获取或设置 <see cref="T:System.Boolean" /> 值，该值指定流 <see cref="T:System.Net.Sockets.Socket" /> 是否正在使用 Nagle 算法。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问 <see cref="T:System.Net.Sockets.Socket" /> 时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>如果 <see cref="T:System.Net.Sockets.Socket" /> 使用 Nagle 算法，则为 <see langword="false" />；否则为 <see langword="true" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary>指示基础操作系统和网络适配器是否支持 Internet 协议第 4 版 (IPv4)。</summary>
      <returns>如果操作系统和网络适配器支持 IPv4 协议，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary>指示基础操作系统和网络适配器是否支持 Internet 协议第 6 版 (IPv6)。</summary>
      <returns>如果操作系统和网络适配器支持 IPv6 协议，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsUnixDomainSockets">
      <summary>指示基础操作系统是否支持 Unix 域套接字。</summary>
      <returns>
        <see langword="true" /> 如果操作系统支持 Unix 域套接字，则为;否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary>获取 <see cref="T:System.Net.Sockets.Socket" /> 的协议类型。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.ProtocolType" /> 值之一。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary>获取或设置一个值，它指定 <see cref="T:System.Net.Sockets.Socket" /> 接收缓冲区的大小。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">为设置操作指定的值小于 0。</exception>
      <returns>
        <see cref="T:System.Int32" />，它包含接收缓冲区的大小（以字节为单位）。 默认值为 8192。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveTimeout">
      <summary>获取或设置一个值，该值指定之后同步 <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 调用将超时的时间长度。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">为设置操作指定的值小于 1。</exception>
      <returns>超时值（以毫秒为单位）。 默认值为 0，指示超时期限无限大。 指定 -1 还会指示超时期限无限大。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary>获取远程终结点。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>当前和 <see cref="T:System.Net.EndPoint" /> 通信的 <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SafeHandle">
      <summary>获取一个 <see cref="T:System.Net.Sockets.SafeSocketHandle" />，它表示当前 <see cref="T:System.Net.Sockets.Socket" /> 对象封装的套接字句柄。</summary>
      <returns>以安全方式公开当前对象封装的套接字的套接字句柄 <see cref="T:System.Net.Sockets.Socket" /> 。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary>获取或设置一个值，该值指定 <see cref="T:System.Net.Sockets.Socket" /> 发送缓冲区的大小。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">为设置操作指定的值小于 0。</exception>
      <returns>
        <see cref="T:System.Int32" />，它包含发送缓冲区的大小（以字节为单位）。 默认值为 8192。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendTimeout">
      <summary>获取或设置一个值，该值指定之后同步 <see cref="Overload:System.Net.Sockets.Socket.Send" /> 调用将超时的时间长度。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">为设置操作指定的值小于 1。</exception>
      <returns>超时值（以毫秒为单位）。 如果将该属性设置为 1 到 499 之间的值，该值将被更改为 500。 默认值为 0，指示超时期限无限大。 指定 -1 还会指示超时期限无限大。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SocketType">
      <summary>获取 <see cref="T:System.Net.Sockets.Socket" /> 的类型。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.SocketType" /> 值之一。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv4">
      <summary>获取一个值，该值指示在当前主机上 IPv4 支持是否可用并且已启用。</summary>
      <returns>如果当前主机支持 IPv4 协议，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv6">
      <summary>获取一个值，该值指示 Framework 对某些已过时的 <see cref="T:System.Net.Dns" /> 成员是否支持 IPv6。</summary>
      <returns>如果 Framework 对某些已过时的 <see cref="T:System.Net.Dns" /> 方法支持 IPv6，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary>获取或设置一个值，指定 <see cref="T:System.Net.Sockets.Socket" /> 发送的 Internet 协议 (IP) 数据包的生存时间 (TTL) 值。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">TTL 值不能设置为负数。</exception>
      <exception cref="T:System.NotSupportedException">只有对于在 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 族中的套接字，才可以设置此属性。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。 在尝试将 TTL 设置为大于 255 的值时，也将返回此错误。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>TTL 值。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.UseOnlyOverlappedIO">
      <summary>指定套接字是否应仅使用重叠 I/O 模式。</summary>
      <exception cref="T:System.InvalidOperationException">套接字已绑定到完成端口。</exception>
      <returns>如果 <see cref="T:System.Net.Sockets.Socket" /> 仅使用重叠 I/O，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary>表示异步套接字操作。</summary>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary>用于完成异步操作的事件。</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary>创建一个空的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 实例。</summary>
      <exception cref="T:System.NotSupportedException">该平台不受支持。</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />。</summary>
      <param name="unsafeSuppressExecutionContextFlow">是否禁用执行上下文的捕获和流。 仅当执行上下文流由较高层进行处理时，才应将其禁用。</param>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary>释放由 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 实例使用的非托管资源，并可选择释放托管资源。</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary>释放 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 类使用的资源。</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>表示异步操作完成时调用的方法。</summary>
      <param name="e">终止的事件。</param>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary>设置要用于异步套接字方法的数据缓冲区。</summary>
      <param name="buffer">要用于异步套接字方法的数据缓冲区。</param>
      <param name="offset">数据缓冲区中操作开始位置处的偏移量，以字节为单位。</param>
      <param name="count">可在缓冲区中发送或接收的最大数据量（以字节为单位）。</param>
      <exception cref="T:System.ArgumentException">指定的缓冲区不明确。 如果 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 属性不为 null，<see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 属性也不为 null，将发生此异常。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数超出范围。 如果 <paramref name="offset" /> 参数小于零或大于 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 属性中的数组长度，将发生此异常。 如果 <paramref name="count" /> 参数小于零或大于 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 属性中的数组长度减去 <paramref name="offset" /> 参数的值，也会发生此异常。</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary>设置要用于异步套接字方法的数据缓冲区。</summary>
      <param name="offset">数据缓冲区中操作开始位置处的偏移量，以字节为单位。</param>
      <param name="count">可在缓冲区中发送或接收的最大数据量（以字节为单位）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">参数超出范围。 如果 <paramref name="offset" /> 参数小于零或大于 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 属性中的数组长度，将发生此异常。 如果 <paramref name="count" /> 参数小于零或大于 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 属性中的数组长度减去 <paramref name="offset" /> 参数的值，也会发生此异常。</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Memory{System.Byte})">
      <summary>使用异步套接字方法设置要用作缓冲区的内存区域。</summary>
      <param name="buffer">通过异步套接字方法用作缓冲区的内存区域。</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
      <summary>获取或设置要使用的套接字或创建用于接受与异步套接字方法的连接的套接字。</summary>
      <returns>要使用的 <see cref="T:System.Net.Sockets.Socket" /> 或者创建用于接受与异步套接字方法的连接的套接字。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary>获取要用于异步套接字方法的数据缓冲区。</summary>
      <returns>一个 <see cref="T:System.Byte" /> 数组，表示要用于异步套接字方法的数据缓冲区。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary>获取或设置一个要用于异步套接字方法的数据缓冲区数组。</summary>
      <exception cref="T:System.ArgumentException">存在不明确的缓冲区，这些缓冲区是在 set 操作上指定的。 如果 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 属性已设置为非空值并且尝试将 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 属性设置为非空值，将引发此异常。</exception>
      <returns>一个 <see cref="T:System.Collections.IList" />，表示要用于异步套接字方法的数据缓冲区数组。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary>获取在套接字操作中传输的字节数。</summary>
      <returns>一个 <see cref="T:System.Int32" />，包含在套接字操作中传输的字节数。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary>当使用 <see cref="T:System.Net.DnsEndPoint" /> 时，在出现连接故障的情况下获取异常。</summary>
      <returns>一个 <see cref="T:System.Exception" />，指示在为 <see cref="T:System.Net.DnsEndPoint" /> 属性指定 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 时发生连接错误的原因。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary>成功完成 <see cref="T:System.Net.Sockets.Socket" /> 方法后创建和连接的 <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /> 对象。</summary>
      <returns>连接的 <see cref="T:System.Net.Sockets.Socket" /> 对象。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary>获取可在异步操作中发送或接收的最大数据量（以字节为单位）。</summary>
      <returns>一个 <see cref="T:System.Int32" />，包含可发送或接收的最大数据量（以字节为单位）。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
      <summary>获取或设置一个值，该值指定套接字能否在断开操作之后重用。</summary>
      <returns>一个 <see cref="T:System.Boolean" />，指定套接字能否在断开操作之后重用。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary>获取最近使用此上下文对象执行的套接字操作类型。</summary>
      <returns>一个 <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> 实例，指示最近使用此上下文对象执行的套接字操作类型。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer">
      <summary>使用异步套接字方法获取要用作缓冲区的内存区域。</summary>
      <returns>表示要用于异步套接字方法的数据缓冲区的内存区域。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary>获取 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 属性引用的数据缓冲区的偏移量（以字节为单位）。</summary>
      <returns>一个 <see cref="T:System.Int32" />，包含 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 属性引用的数据缓冲区的偏移量（以字节为单位）。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
      <summary>获取接收的数据包的 IP 地址和接口。</summary>
      <returns>一个 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 实例，该实例包含接收的数据包的目标 IP 地址和接口。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary>获取或设置异步操作的远程 IP 终结点。</summary>
      <returns>一个 <see cref="T:System.Net.EndPoint" />，表示异步操作的远程 IP 终结点。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
      <summary>获取或设置要为 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法使用的异步操作发送的缓冲区数组。</summary>
      <returns>表示要发送的缓冲区数组的 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 对象数组。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
      <summary>为 <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 方法使用的异步操作获取或设置 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 值的按位组合。</summary>
      <returns>一个 <see cref="T:System.Net.Sockets.TransmitFileOptions" />，包含用于异步操作的值的按位组合。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
      <summary>获取或设置发送操作中使用的数据块的大小（以字节为单位）。</summary>
      <returns>一个 <see cref="T:System.Int32" />，包含在发送操作中使用的数据块的大小（以字节为单位）。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary>获取或设置异步套接字操作的结果。</summary>
      <returns>一个 <see cref="T:System.Net.Sockets.SocketError" />，表示异步套接字操作的结果。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
      <summary>获取异步套接字操作的结果或设置异步操作的行为。</summary>
      <returns>一个 <see cref="T:System.Net.Sockets.SocketFlags" />，表示异步套接字操作的结果。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary>获取或设置与此异步套接字操作关联的用户或应用程序对象。</summary>
      <returns>一个对象，表示与此异步套接字操作关联的用户或应用程序对象。</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary>最近使用此上下文对象执行的异步套接字操作的类型。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Accept">
      <summary>一个套接字 Accept 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary>一个套接字 Connect 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Disconnect">
      <summary>一个套接字 Disconnect 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary>没有套接字操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary>一个套接字 Receive 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveFrom">
      <summary>一个套接字 ReceiveFrom 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveMessageFrom">
      <summary>一个套接字 ReceiveMessageFrom 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary>一个套接字 Send 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendPackets">
      <summary>一个套接字 SendPackets 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendTo">
      <summary>一个套接字 SendTo 操作。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketFlags">
      <summary>指定套接字发送和接收行为。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Broadcast">
      <summary>指示广播数据包。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.ControlDataTruncated">
      <summary>指示控制数据无法放入 64 KB 的内部缓冲区且已被截断。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.DontRoute">
      <summary>不使用路由表进行发送。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Multicast">
      <summary>指示多播数据包。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.None">
      <summary>不对此调用使用任何标志。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.OutOfBand">
      <summary>处理带外数据。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Partial">
      <summary>部分发送或接收消息。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Peek">
      <summary>快速查看传入消息。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Truncated">
      <summary>消息太大，无法放入指定的缓冲区，并且已被截断。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketInformation">
      <summary>对复制 <see cref="T:System.Net.Sockets.Socket" /> 时所需的信息进行封装。</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.Options">
      <summary>获取或设置 <see cref="T:System.Net.Sockets.Socket" /> 的选项。</summary>
      <returns>一个 <see cref="T:System.Net.Sockets.SocketInformationOptions" /> 实例。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.ProtocolInformation">
      <summary>获取或设置 <see cref="T:System.Net.Sockets.Socket" /> 的协议信息。</summary>
      <returns>
        <see cref="T:System.Byte" /> 类型的数组。</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketInformationOptions">
      <summary>描述 <see cref="T:System.Net.Sockets.Socket" /> 的状态。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Connected">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 已连接。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Listening">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 正在侦听新连接。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.NonBlocking">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 处于非阻止状态。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.UseOnlyOverlappedIO">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 使用重叠 I/O。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionLevel">
      <summary>为 <see cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" /> 和 <see cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" /> 方法定义套接字选项级别。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IP">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 选项仅适用于 IP 套接字。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IPv6">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 选项仅适用于 IPv6 套接字。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Socket">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 选项适用于所有套接字。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Tcp">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 选项仅适用于 TCP 套接字。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Udp">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 选项仅适用于 UDP 套接字。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionName">
      <summary>定义配置选项名称。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AcceptConnection">
      <summary>套接字正在侦听。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddMembership">
      <summary>添加一个 IP 组成员。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddSourceMembership">
      <summary>联接源组。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BlockSource">
      <summary>阻止源中的数据。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Broadcast">
      <summary>允许在套接字上发送广播消息。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BsdUrgent">
      <summary>使用 RFC-1222 中定义的紧急数据。 此选项只能设置一次，而且设置以后就不能关闭。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ChecksumCoverage">
      <summary>设置或获取 UDP 校验和覆盖。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Debug">
      <summary>记录调试信息。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontFragment">
      <summary>不对 IP 数据报进行分段。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontLinger">
      <summary>完全关闭套接字，不做逗留。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontRoute">
      <summary>不路由，将数据包直接发送到接口地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropMembership">
      <summary>放置一个 IP 组成员。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropSourceMembership">
      <summary>放置一个源组。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Error">
      <summary>获取错误状态并清除。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ExclusiveAddressUse">
      <summary>使套接字能够为独占访问进行绑定。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Expedited">
      <summary>使用 RFC-1222 中定义的加急数据。 此选项只能设置一次，而且设置以后就不能关闭。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HeaderIncluded">
      <summary>指示应用程序为输出数据报提供 IP 头。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HopLimit">
      <summary>指定 Internet 协议版本 6 (IPv6) 数据包的最大路由器跃点数目。 这类似于 Internet 协议版本 4 的生存时间 (TTL)。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPOptions">
      <summary>指定要插入到输出数据报中的 IP 选项。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel">
      <summary>允许将 IPv6 套接字限制为指定的作用域，如具有相同的链接本地或站点本地前缀的地址。 此套接字选项使应用程序可以对 IPv6 套接字设置访问限制。 通过应用此类限制，可让在专用局域网上运行的应用程序能够通过简单的方式很好地增强自身的安全性，以便防范外部攻击。 此套接字选项可以扩大或缩小侦听套接字的范围，从而使得公共用户和私人用户可以在适当情况下对站点进行无限制的访问，或者可以根据需要对同一站点进行有限制的访问。 此套接字选项具有 <see cref="T:System.Net.Sockets.IPProtectionLevel" /> 枚举中指定的已定义保护级别。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IpTimeToLive">
      <summary>设置 IP 头生存时间字段。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPv6Only">
      <summary>指示为 AF_INET6 地址族创建的套接字是否仅适用于 IPv6 通信。 为 AF_INET6 地址族创建的套接字可用于 IPv6 和 IPv4 通信。 一些应用程序可能需要将为 AF_INET6 地址族创建的套接字限制为仅用于 IPv6 通信。 当此值不为零（Windows 上的默认值）时，为 AF_INET6 地址族创建的套接字只可用于发送和接收 IPv6 数据包。 当此值为零时，为 AF_INET6 地址族创建的套接字可用于向 IPv6 地址或 IPv4 地址发送数据包以及从 IPv6 地址或 IPv4 地址接收数据包。 请注意，需要使用 IPv4 映射地址才能与 IPv4 地址进行交互。 Windows Vista 或更高版本上支持此套接字选项。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.KeepAlive">
      <summary>使用 keep-alive。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Linger">
      <summary>如果存在未发送的数据，则在关闭时逗留。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MaxConnections">
      <summary>不受支持；如果使用，将引发 <see cref="T:System.Net.Sockets.SocketException" />。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastInterface">
      <summary>为输出的多路广播数据包设置接口。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastLoopback">
      <summary>IP 多路广播环回。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastTimeToLive">
      <summary>IP 多路广播生存时间。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoChecksum">
      <summary>发送校验和设置为零的 UDP 数据报。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoDelay">
      <summary>为发送合并禁用 Nagle 算法。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.OutOfBandInline">
      <summary>接收正常数据流中的带外数据。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.PacketInformation">
      <summary>返回有关接收到的数据包的信息。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveBuffer">
      <summary>指定为接收保留的每个套接字缓冲区空间的总量。 这与最大消息大小或 TCP 窗口的大小无关。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveLowWater">
      <summary>为 <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 操作指定低水印。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveTimeout">
      <summary>接收超时。此选项仅适用于同步方法;它对异步方法（如方法）不起作用 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseAddress">
      <summary>允许将套接字绑定到已在使用中的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseUnicastPort">
      <summary>指示系统应延迟出站连接的临时端口分配。 这等效于使用 Winsock2 SO_REUSE_UNICASTPORT 套接字选项。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendBuffer">
      <summary>指定为发送保留的每个套接字缓冲区空间的总量。 这与最大消息大小或 TCP 窗口的大小无关。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendLowWater">
      <summary>为 <see cref="Overload:System.Net.Sockets.Socket.Send" /> 操作指定低水印。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendTimeout">
      <summary>发送超时。此选项仅适用于同步方法;它对异步方法（如方法）不起作用 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveInterval">
      <summary>在发送另一个 keepalive 探测之前，一个 TCP 连接等待某 keepalive 响应的秒数。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveRetryCount">
      <summary>在终止连接之前将发送的 TCP keepalive 探测数。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveTime">
      <summary>将 keepalive 探测发送到远程设备之前，一个 TCP 连接将保持活动/空闲的秒数。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Type">
      <summary>获取套接字类型。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TypeOfService">
      <summary>更改服务字段的 IP 头类型。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UnblockSource">
      <summary>取消阻止先前被阻止的源。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateAcceptContext">
      <summary>使用现有套接字的属性更新已接受套接字的属性。 这等效于使用 Winsock2 SO_UPDATE_ACCEPT_CONTEXT 套接字选项，并且仅在面向连接的套接字上受支持。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateConnectContext">
      <summary>使用现有套接字的属性更新已连接套接字的属性。 这等效于使用 Winsock2 SO_UPDATE_CONNECT_CONTEXT 套接字选项，并且仅在面向连接的套接字上受支持。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UseLoopback">
      <summary>可能时避开硬件。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveFromResult">
      <summary>
        <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 操作的结果。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.ReceivedBytes">
      <summary>收到的字节数。 如果 <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 操作不成功，则为 0。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.RemoteEndPoint">
      <summary>源 <see cref="T:System.Net.EndPoint" />。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveMessageFromResult">
      <summary>
        <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 操作的结果。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.PacketInformation">
      <summary>保存地址和接口信息的 <see cref="T:System.Net.Sockets.IPPacketInformation" />。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.ReceivedBytes">
      <summary>收到的字节数。 如果 <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 操作不成功，此值将为 0。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.RemoteEndPoint">
      <summary>源 <see cref="T:System.Net.EndPoint" />。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.SocketFlags">
      <summary>所接收数据包的 <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary>定义 <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" /> 方法使用的常量。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary>为发送和接收禁用 <see cref="T:System.Net.Sockets.Socket" />。 此字段为常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary>禁用接收的 <see cref="T:System.Net.Sockets.Socket" />。 此字段为常数。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary>禁用发送的 <see cref="T:System.Net.Sockets.Socket" />。 此字段为常数。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketTaskExtensions">
      <summary>此类包含 <see cref="T:System.Net.Sockets.Socket" /> 类的扩展方法。</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)">
      <summary>执行异步操作，接受套接字上的传入连接尝试。</summary>
      <param name="socket">将侦听连接的套接字。</param>
      <returns>一个异步任务，完成时 <see cref="T:System.Net.Sockets.Socket" /> 会处理与远程主机的通信。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
      <summary>执行异步操作，接受套接字上的传入连接尝试。</summary>
      <param name="socket">将侦听传入连接的套接字。</param>
      <param name="acceptSocket">接受的 <see cref="T:System.Net.Sockets.Socket" /> 对象。 此值可为 <see langword="null" />。</param>
      <returns>一个异步任务，完成时 <see cref="T:System.Net.Sockets.Socket" /> 会处理与远程主机的通信。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
      <summary>与远程主机建立连接。</summary>
      <param name="socket">用于建立连接的套接字。</param>
      <param name="remoteEP">表示远程设备的终结点。</param>
      <returns>异步任务。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint,System.Threading.CancellationToken)">
      <summary>与远程主机建立连接。</summary>
      <param name="socket">用于建立连接的套接字。</param>
      <param name="remoteEP">表示远程设备的终结点。</param>
      <param name="cancellationToken">应取消可用于指示异步操作的取消令牌。</param>
      <returns>表示异步连接操作的任务。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
      <summary>与远程主机建立连接。 主机由 IP 地址和端口号指定。</summary>
      <param name="socket">要对其执行连接操作的套接字。</param>
      <param name="address">远程主机的 IP 地址。</param>
      <param name="port">远程主机的端口号。</param>
      <returns>表示异步连接操作的任务。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32,System.Threading.CancellationToken)">
      <summary>建立与远程主机的连接，该连接由 IP 地址和端口号指定。</summary>
      <param name="socket">要对其执行连接操作的套接字。</param>
      <param name="address">远程主机的 IP 地址。</param>
      <param name="port">远程主机的端口号。</param>
      <param name="cancellationToken">应取消可用于指示异步操作的取消令牌。</param>
      <returns>表示异步连接操作的任务。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
      <summary>与远程主机建立连接。 主机由 IP 地址数组和端口号指定。</summary>
      <param name="socket">对其执行连接操作的套接字。</param>
      <param name="addresses">远程主机的 IP 地址。</param>
      <param name="port">远程主机的端口号。</param>
      <returns>表示异步连接操作的任务。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32,System.Threading.CancellationToken)">
      <summary>建立与远程主机的连接，该连接由 IP 地址数组和端口号指定。</summary>
      <param name="socket">对其执行连接操作的套接字。</param>
      <param name="addresses">远程主机的 IP 地址。</param>
      <param name="port">远程主机的端口号。</param>
      <param name="cancellationToken">应取消可用于指示异步操作的取消令牌。</param>
      <returns>表示异步连接操作的任务。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
      <summary>与远程主机建立连接。 主机由主机名和端口号指定。</summary>
      <param name="socket">要对其执行连接操作的套接字。</param>
      <param name="host">远程主机的名称。</param>
      <param name="port">远程主机的端口号。</param>
      <returns>异步任务。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32,System.Threading.CancellationToken)">
      <summary>建立与远程主机的连接，该连接由主机名和端口号指定。</summary>
      <param name="socket">要对其执行连接操作的套接字。</param>
      <param name="host">远程主机的名称。</param>
      <param name="port">远程主机的端口号。</param>
      <param name="cancellationToken">应取消可用于指示异步操作的取消令牌。</param>
      <returns>表示异步连接操作的任务。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>接收连接的套接字发出的数据。</summary>
      <param name="socket">要对其执行 Receive 操作的套接字。</param>
      <param name="buffer">一个数组，它是接收的数据的存储位置。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <returns>表示异步接收操作的任务。 <paramref name="TResult" /> 参数的值包含接收的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>接收连接的套接字发出的数据。</summary>
      <param name="socket">要对其执行 Receive 操作的套接字。</param>
      <param name="buffers">一个数组，它是接收的数据的存储位置。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <returns>表示异步接收操作的任务。 <paramref name="TResult" /> 参数的值包含接收的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Memory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <summary>接收连接的套接字发出的数据。</summary>
      <param name="socket">要对其执行 Receive 操作的套接字。</param>
      <param name="buffer">内存中的一个区域，它是所接收的数据的存储位置。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="cancellationToken">应取消可用于指示异步操作的取消令牌。</param>
      <returns>完成并显示所接收的字节数的任务；如果已到达流的末尾，则字节数为 0。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>接收来自指定网络设备的数据。</summary>
      <param name="socket">要对其执行 ReceiveFrom 操作的套接字。</param>
      <param name="buffer">Byte 类型的数组，它是接收的数据的存储位置。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="remoteEndPoint">表示数据源的终结点。</param>
      <returns>一个异步任务，完成时具有 SocketReceiveFromResult 结构。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" /> 将指定字节数的数据接收到指定的数据缓冲区位置，并存储终结点和数据包信息。</summary>
      <param name="socket">要对其执行操作的套接字。</param>
      <param name="buffer">一个数组，它是接收的数据的存储位置。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="remoteEndPoint">表示远程服务器的 <see cref="T:System.Net.EndPoint" />。</param>
      <returns>一个异步任务，完成时具有 <see cref="T:System.Net.Sockets.SocketReceiveMessageFromResult" /> 结构。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>将数据发送到连接的套接字。</summary>
      <param name="socket">要对其执行操作的套接字。</param>
      <param name="buffer">Byte 类型的数组，其中包含要发送的数据。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <returns>一个异步任务，如果操作成功，任务完成时将向套接字发送字节数。 否则，任务完成时会出现无效的套接字错误。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>将数据发送到连接的套接字。</summary>
      <param name="socket">要对其执行操作的套接字。</param>
      <param name="buffers">包含要发送的数据的数组。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <returns>一个异步任务，如果操作成功，任务完成时将向套接字发送字节数。 否则，任务完成时会出现无效的套接字错误。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ReadOnlyMemory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <summary>将数据发送到连接的套接字。</summary>
      <param name="socket">要对其执行操作的套接字。</param>
      <param name="buffer">内存的一个区域，它包含要发送的数据。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="cancellationToken">应取消可用于指示异步操作的取消令牌。</param>
      <returns>一个任务，如果操作成功，则任务完成并向套接字发送字节数。 否则，任务完成时会出现无效的套接字错误。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>以异步方式将数据发送到特定远程主机。</summary>
      <param name="socket">要对其执行操作的套接字。</param>
      <param name="buffer">包含要发送的数据的数组。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 值的按位组合。</param>
      <param name="remoteEP">表示远程设备的 <see cref="T:System.Net.EndPoint" />。</param>
      <returns>一个异步任务，如果操作成功，任务完成时将发送字节数。 否则，任务完成时会出现无效的套接字错误。</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary>指定 <see cref="T:System.Net.Sockets.Socket" /> 类的实例表示的套接字类型。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Dgram">
      <summary>支持数据报，即最大长度固定（通常很小）的无连接、不可靠消息。 消息可能会丢失或重复并可能在到达时不按顺序排列。 <see cref="T:System.Net.Sockets.Socket" /> 类型的 <see cref="F:System.Net.Sockets.SocketType.Dgram" /> 在发送和接收数据之前不需要任何连接，并且可以与多个对方主机进行通信。 <see cref="F:System.Net.Sockets.SocketType.Dgram" /> 使用数据报协议 (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) 和 <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 地址族。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Raw">
      <summary>支持对基础传输协议的访问。 通过使用 <see cref="F:System.Net.Sockets.SocketType.Raw" />，可以使用 Internet 控制消息协议 (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) 和 Internet 组管理协议 (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />) 这样的协议来进行通信。 在发送时，您的应用程序必须提供完整的 IP 标头。 所接收的数据报在返回时会保持其 IP 标头和选项不变。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Rdm">
      <summary>支持无连接、面向消息、以可靠方式发送的消息，并保留数据中的消息边界。 RDM（以可靠方式发送的消息）消息会依次到达，不会重复。 此外，如果消息丢失，将会通知发送方。 如果使用 <see cref="F:System.Net.Sockets.SocketType.Rdm" /> 初始化 <see cref="T:System.Net.Sockets.Socket" />，则在发送和接收数据之前无需建立远程主机连接。 利用 <see cref="F:System.Net.Sockets.SocketType.Rdm" />，您可以与多个对方主机进行通信。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Seqpacket">
      <summary>在网络上提供排序字节流的面向连接且可靠的双向传输。 <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> 不重复数据，它在数据流中保留边界。 <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> 类型的 <see cref="T:System.Net.Sockets.Socket" /> 与单个对方主机通信，并且在通信开始之前需要建立远程主机连接。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary>支持可靠、双向、基于连接的字节流，而不重复数据，也不保留边界。 此类型的 <see cref="T:System.Net.Sockets.Socket" /> 与单个对方主机通信，并且在通信开始之前需要建立远程主机连接。 <see cref="F:System.Net.Sockets.SocketType.Stream" /> 使用传输控制协议 (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) 和 <see langword="AddressFamily" />。<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 地址族。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary>指定未知的 <see cref="T:System.Net.Sockets.Socket" /> 类型。</summary>
    </member>
    <member name="T:System.Net.Sockets.TcpClient">
      <summary>为 TCP 网络服务提供客户端连接。</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor">
      <summary>初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
      <summary>初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 类的新实例，并将其绑定到指定的本地终结点。</summary>
      <param name="localEP">要将 TCP <see cref="T:System.Net.Sockets.Socket" /> 绑定到的 <see cref="T:System.Net.IPEndPoint" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>使用指定的族初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 类的新实例。</summary>
      <param name="family">IP 协议的 <see cref="P:System.Net.IPAddress.AddressFamily" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> 参数不等于 AddressFamily.InterNetwork 
- 或 - 
<paramref name="family" /> 参数不等于 AddressFamily.InterNetworkV6</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
      <summary>初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 类的新实例并连接到指定主机上的指定端口。</summary>
      <param name="hostname">要连接到的远程主机的 DNS 名。</param>
      <param name="port">要连接到的远程主机的端口号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 参数不介于 <see cref="F:System.Net.IPEndPoint.MinPort" /> 与 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始一个对远程主机连接的异步请求。 远程主机由 <see cref="T:System.Net.IPAddress" /> 和端口号 (<see cref="T:System.Int32" />) 指定。</summary>
      <param name="address">远程主机的 <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">远程主机的端口号。</param>
      <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">一个用户定义对象，其中包含连接操作的相关信息。 当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">端口号无效。</exception>
      <returns>一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步连接。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始一个对远程主机连接的异步请求。 远程主机由 <see cref="T:System.Net.IPAddress" /> 数组和端口号 (<see cref="T:System.Int32" />) 指定。</summary>
      <param name="addresses">至少一个指定远程主机的 <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">远程主机的端口号。</param>
      <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">一个用户定义对象，其中包含连接操作的相关信息。 当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">端口号无效。</exception>
      <returns>一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步连接。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始一个对远程主机连接的异步请求。 远程主机由主机名 (<see cref="T:System.String" />) 和端口号 (<see cref="T:System.Int32" />) 指定。</summary>
      <param name="host">远程主机的名称。</param>
      <param name="port">远程主机的端口号。</param>
      <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">一个用户定义对象，其中包含连接操作的相关信息。 当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">端口号无效。</exception>
      <returns>一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步连接。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Close">
      <summary>释放此 <see cref="T:System.Net.Sockets.TcpClient" /> 实例，并请求关闭基础 TCP 连接。</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>使用指定的 IP 地址和端口号将客户端连接到 TCP 主机。</summary>
      <param name="address">您打算连接到的主机的 <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">要连接到的端口号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> 已关闭。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>使用指定的 IP 地址和端口号将客户端连接到远程 TCP 主机。</summary>
      <param name="ipAddresses">要连接到的主机的 <see cref="T:System.Net.IPAddress" /> 数组。</param>
      <param name="port">要连接到的端口号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ipAddresses" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">端口号无效。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
      <exception cref="T:System.NotSupportedException">此方法对于使用 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 标志或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 标志的套接字有效。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
      <summary>使用指定的远程网络终结点将客户端连接到远程 TCP 主机。</summary>
      <param name="remoteEP">您打算连接到的 <see cref="T:System.Net.IPEndPoint" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEp" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> 是关闭的。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
      <summary>将客户端连接到指定主机上的指定端口。</summary>
      <param name="hostname">要连接到的远程主机的 DNS 名。</param>
      <param name="port">要连接到的远程主机的端口号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 参数不介于 <see cref="F:System.Net.IPEndPoint.MinPort" /> 与 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> 已关闭。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
      <summary>使用指定的 IP 地址和端口号将客户端连接到远程 TCP 主机以作为异步操作。</summary>
      <param name="address">你打算连接到的主机的 <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">要连接到的端口号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> 已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32,System.Threading.CancellationToken)">
      <summary>使用指定的 IP 地址和端口号将客户端连接到远程 TCP 主机以作为异步操作。</summary>
      <param name="address">远程主机的 IP 地址。</param>
      <param name="port">远程主机的端口号。</param>
      <param name="cancellationToken">应取消可用于指示异步操作的取消令牌。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> 已关闭。</exception>
      <returns>表示异步连接操作的任务。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
      <summary>使用指定的 IP 地址和端口号将客户端连接到远程 TCP 主机以作为异步操作。</summary>
      <param name="addresses">要连接到的主机的 <see cref="T:System.Net.IPAddress" /> 数组。</param>
      <param name="port">要连接到的端口号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ipAddresses" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">端口号无效。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
      <exception cref="T:System.NotSupportedException">此方法对于使用 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 标志或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 标志的套接字有效。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32,System.Threading.CancellationToken)">
      <summary>使用指定的 IP 地址和端口号将客户端连接到远程 TCP 主机以作为异步操作。</summary>
      <param name="addresses">远程主机的 IP 地址数组。</param>
      <param name="port">远程主机的端口号。</param>
      <param name="cancellationToken">应取消可用于指示异步操作的取消令牌。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ipAddresses" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">端口号无效。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <exception cref="T:System.Security.SecurityException">调用堆栈中的较高调用方无权执行所请求的操作。</exception>
      <exception cref="T:System.NotSupportedException">此方法对于使用 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 标志或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 标志的套接字有效。</exception>
      <returns>表示异步连接操作的任务。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
      <summary>将客户端连接到指定主机上的指定 TCP 端口以作为异步操作。</summary>
      <param name="host">要连接到的远程主机的 DNS 名。</param>
      <param name="port">要连接到的远程主机的端口号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 参数不介于 <see cref="F:System.Net.IPEndPoint.MinPort" /> 与 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> 已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32,System.Threading.CancellationToken)">
      <summary>将客户端连接到指定主机上的指定 TCP 端口以作为异步操作。</summary>
      <param name="host">远程主机的 DNS 名称。</param>
      <param name="port">远程主机的端口号。</param>
      <param name="cancellationToken">应取消可用于指示异步操作的取消令牌。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 参数不介于 <see cref="F:System.Net.IPEndPoint.MinPort" /> 与 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> 已关闭。</exception>
      <returns>表示异步连接操作的任务。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose">
      <summary>释放由 <see cref="T:System.Net.Sockets.TcpClient" /> 占用的托管和非托管资源。</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Net.Sockets.TcpClient" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">设置为 <see langword="true" /> 可释放托管资源和非托管资源；设置为 <see langword="false" /> 只能释放非托管资源。</param>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
      <summary>结束挂起的异步连接尝试。</summary>
      <param name="asyncResult">调用 <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> 后返回的 <see cref="T:System.IAsyncResult" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">调用 <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> 方法后，未返回 <paramref name="asyncResult" /> 参数。</exception>
      <exception cref="T:System.InvalidOperationException">先前曾为异步连接调用过 <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> 方法。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问 <see cref="T:System.Net.Sockets.Socket" /> 时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Finalize">
      <summary>释放 <see cref="T:System.Net.Sockets.TcpClient" /> 类使用的资源。</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.GetStream">
      <summary>返回用于发送和接收数据的 <see cref="T:System.Net.Sockets.NetworkStream" />。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.TcpClient" /> 未连接到远程主机。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> 已关闭。</exception>
      <returns>基础 <see cref="T:System.Net.Sockets.NetworkStream" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Active">
      <summary>获取或设置一个值，它指示是否已建立连接。</summary>
      <returns>如果已建立连接，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Available">
      <summary>获取已经从网络接收且可供读取的数据量。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>从网络接收的、可供读取的数据的字节数。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Client">
      <summary>获取或设置基础 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <returns>基础网络 <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Connected">
      <summary>获取一个值，该值指示 <see cref="T:System.Net.Sockets.Socket" /> 的基础 <see cref="T:System.Net.Sockets.TcpClient" /> 是否已连接到远程主机。</summary>
      <returns>如果 <see cref="P:System.Net.Sockets.TcpClient.Client" /> 套接字与截止到最近的操作时的远程资源连接，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
      <summary>获取或设置 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Net.Sockets.TcpClient" /> 是否只允许一个客户端使用端口。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问基础套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <returns>如果 <see cref="T:System.Net.Sockets.TcpClient" /> 只允许一个客户端使用特定端口，则为 <see langword="true" />；否则为 <see langword="false" />。 在 Windows Server 2003、Windows XP Service Pack 2 及更高版本中，默认为 <see langword="true" />；在所有其他版本中，默认为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.LingerState">
      <summary>获取或设置有关关联的套接字的延迟状态的信息。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.LingerOption" />。 默认情况下，禁用逗留。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.NoDelay">
      <summary>获取或设置一个值，该值在发送或接收缓冲区未满时禁用延迟。</summary>
      <returns>
        <see langword="true" /> 如果禁用延迟，则为;否则为 <see langword="false" /> 。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
      <summary>获取或设置接收缓冲区的大小。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">设置缓冲区大小时出错。  
  
 - 或 -  
  
 在 .NET Compact Framework 应用程序中，无法设置此属性。 有关解决方法，请参阅“备注”中的“平台说明”。</exception>
      <returns>接收缓冲区的大小（以字节为单位）。 默认值为 8192 字节。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
      <summary>获取或设置在初始化一个读取操作以后 <see cref="T:System.Net.Sockets.TcpClient" /> 等待接收数据的时间量。</summary>
      <returns>连接的超时值（以毫秒为单位）。 默认值为 0。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendBufferSize">
      <summary>获取或设置发送缓冲区的大小。</summary>
      <returns>发送缓冲区的大小（以字节为单位）。 默认值为 8192 字节。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendTimeout">
      <summary>获取或设置 <see cref="T:System.Net.Sockets.TcpClient" /> 等待发送操作成功完成的时间量。</summary>
      <returns>发送超时值（以毫秒为单位）。 默认值为 0。</returns>
    </member>
    <member name="T:System.Net.Sockets.TcpListener">
      <summary>侦听来自 TCP 网络客户端的连接。</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
      <summary>初始化在指定端口上侦听的 <see cref="T:System.Net.Sockets.TcpListener" /> 类的新实例。</summary>
      <param name="port">用来侦听传入的连接尝试的端口。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>初始化 <see cref="T:System.Net.Sockets.TcpListener" /> 类的新实例，该类在指定的本地 IP 地址和端口号上侦听是否有传入的连接尝试。</summary>
      <param name="localaddr">一个 <see cref="T:System.Net.IPAddress" />，它表示本地 IP 地址。</param>
      <param name="port">用来侦听传入的连接尝试的端口。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localaddr" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
      <summary>使用指定的本地终结点初始化 <see cref="T:System.Net.Sockets.TcpListener" /> 类的新实例。</summary>
      <param name="localEP">一个 <see cref="T:System.Net.IPEndPoint" />，它表示将侦听器 <see cref="T:System.Net.Sockets.Socket" /> 绑定到的本地终结点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocket">
      <summary>接受挂起的连接请求。</summary>
      <exception cref="T:System.InvalidOperationException">尚未通过调用 <see cref="M:System.Net.Sockets.TcpListener.Start" /> 来启动该侦听器。</exception>
      <returns>用于发送和接收数据的 <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
      <summary>接受挂起的连接请求以作为异步操作。</summary>
      <exception cref="T:System.InvalidOperationException">尚未通过调用 <see cref="M:System.Net.Sockets.TcpListener.Start" /> 来启动该侦听器。</exception>
      <returns>表示异步操作的任务对象。 任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回了用于发送和接收数据的 <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
      <summary>接受挂起的连接请求。</summary>
      <exception cref="T:System.InvalidOperationException">尚未通过调用 <see cref="M:System.Net.Sockets.TcpListener.Start" /> 来启动该侦听器。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">使用 <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 属性获取指定的错误代码。 获取此代码后，可以参考 Windows Sockets 版本 2 API 错误代码文档，获取有关错误的详细说明。</exception>
      <returns>用于发送和接收数据的 <see cref="T:System.Net.Sockets.TcpClient" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
      <summary>接受挂起的连接请求以作为异步操作。</summary>
      <exception cref="T:System.InvalidOperationException">尚未通过调用 <see cref="M:System.Net.Sockets.TcpListener.Start" /> 来启动该侦听器。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">使用 <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 属性获取指定的错误代码。 获取此代码后，可以参考 Windows Sockets 版本 2 API 错误代码文档，获取有关错误的详细说明。</exception>
      <returns>表示异步操作的任务对象。 任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回了用于发送和接收数据的 <see cref="T:System.Net.Sockets.TcpClient" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
      <summary>启用或禁用针对 <see cref="T:System.Net.Sockets.TcpListener" /> 实例的网络地址转换 (NAT) 遍历。</summary>
      <param name="allowed">一个布尔值，该值指定是启用还是禁用 NAT 遍历。</param>
      <exception cref="T:System.InvalidOperationException">在调用 <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> 方法之后调用 <see cref="M:System.Net.Sockets.TcpListener.Start" /> 方法</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
      <summary>开始一个异步操作来接受一个传入的连接尝试。</summary>
      <param name="callback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">一个用户定义对象，其中包含接收操作的相关信息。 当操作完成时，此对象会被传递给 <paramref name="callback" /> 委托。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>一个 <see cref="T:System.IAsyncResult" />，它引用 <see cref="T:System.Net.Sockets.Socket" /> 的异步创建。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
      <summary>开始一个异步操作来接受一个传入的连接尝试。</summary>
      <param name="callback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">一个用户定义对象，其中包含接收操作的相关信息。 当操作完成时，此对象会被传递给 <paramref name="callback" /> 委托。</param>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>一个 <see cref="T:System.IAsyncResult" />，它引用 <see cref="T:System.Net.Sockets.TcpClient" /> 的异步创建。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
      <summary>创建一个新的侦听指定端口的 <see cref="T:System.Net.Sockets.TcpListener" /> 实例。</summary>
      <param name="port">用来侦听传入的连接尝试的端口。</param>
      <returns>一个新的用于侦听指定端口的 <see cref="T:System.Net.Sockets.TcpListener" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
      <summary>异步接受传入的连接尝试，并创建新的 <see cref="T:System.Net.Sockets.Socket" /> 来处理远程主机通信。</summary>
      <param name="asyncResult">通过调用 <see cref="T:System.IAsyncResult" /> 方法返回 <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />。</param>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">调用 <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> 方法后，未创建 <paramref name="asyncResult" /> 参数。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> 方法以前被调用过。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问 <see cref="T:System.Net.Sockets.Socket" /> 时发生错误。</exception>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />。  
  
用于发送和接收数据的 <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
      <summary>异步接受传入的连接尝试，并创建新的 <see cref="T:System.Net.Sockets.TcpClient" /> 来处理远程主机通信。</summary>
      <param name="asyncResult">通过调用 <see cref="T:System.IAsyncResult" /> 方法返回 <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />。</param>
      <returns>
        <see cref="T:System.Net.Sockets.TcpClient" />。  
  
用于发送和接收数据的 <see cref="T:System.Net.Sockets.TcpClient" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Pending">
      <summary>确定是否有挂起的连接请求。</summary>
      <exception cref="T:System.InvalidOperationException">尚未通过调用 <see cref="M:System.Net.Sockets.TcpListener.Start" /> 来启动该侦听器。</exception>
      <returns>如果连接正挂起，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start">
      <summary>开始侦听传入的连接请求。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">使用 <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 属性获取指定的错误代码。 获取此代码后，可以参考 Windows Sockets 版本 2 API 错误代码文档，获取有关错误的详细说明。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
      <summary>启动对具有最大挂起连接数的传入连接请求的侦听。</summary>
      <param name="backlog">挂起连接队列的最大长度。</param>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="backlog" /> 参数小于零或超出允许的最大连接数。</exception>
      <exception cref="T:System.InvalidOperationException">基础 <see cref="T:System.Net.Sockets.Socket" /> 为空。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Stop">
      <summary>关闭侦听器。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">使用 <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 属性获取指定的错误代码。 获取此代码后，可以参考 Windows Sockets 版本 2 API 错误代码文档，获取有关错误的详细说明。</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Active">
      <summary>获取一个值，该值指示 <see cref="T:System.Net.Sockets.TcpListener" /> 是否正主动侦听客户端连接。</summary>
      <returns>如果 <see cref="T:System.Net.Sockets.TcpListener" /> 正主动侦听，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
      <summary>获取或设置一个 <see cref="T:System.Boolean" /> 值，该值指定 <see cref="T:System.Net.Sockets.TcpListener" /> 是否只允许一个基础套接字来侦听特定端口。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.TcpListener" /> 已经启动。 调用 <see cref="M:System.Net.Sockets.TcpListener.Stop" /> 方法，然后设置 <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> 属性。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问基础套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <returns>如果 <see cref="T:System.Net.Sockets.TcpListener" /> 只允许一个 <see cref="T:System.Net.Sockets.TcpListener" /> 来侦听特定端口，则为 <see langword="true" />；否则为 <see langword="false" />。 在 Windows Server 2003、Windows XP Service Pack 2 及更高版本中，默认为 <see langword="true" />；在所有其他版本中，默认为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.LocalEndpoint">
      <summary>获取当前 <see cref="T:System.Net.EndPoint" /> 的基础 <see cref="T:System.Net.Sockets.TcpListener" />。</summary>
      <returns>
        <see cref="T:System.Net.EndPoint" /> 绑定到的 <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Server">
      <summary>获取基础网络 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <returns>基础 <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="T:System.Net.Sockets.TransmitFileOptions">
      <summary>
        <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 枚举定义文件传输请求中使用的值。</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.Disconnect">
      <summary>所有要传输的数据文件完成排队后，启动传输层断开连接。 如果与 <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" /> 一起使用，这些标志将在完成文件传输后使套接字返回到断开连接的可重用状态。</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket">
      <summary>完成请求后，可以重用套接字句柄。 此标志仅在同时指定了 <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> 时才有效。 如果与 <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> 一起使用，这些标志将在完成文件传输后使套接字返回到断开连接的可重用状态。</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread">
      <summary>使用默认线程处理长文件传输请求。</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseKernelApc">
      <summary>使用内核异步过程调用 (APC) 而不是辅助线程来处理长文件传输请求。 长请求定义为要求从文件或缓存中进行多次读取的请求，因此请求取决于文件的大小和发送数据包的指定长度。</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseSystemThread">
      <summary>使用系统线程处理长文件传输请求。</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.WriteBehind">
      <summary>立即完成文件传输请求，而不挂起。 如果指定了此标志并且文件传输成功，则表明系统已接受数据，但远端并不一定识别该数据。 请勿将此标志与 <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> 和 <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" /> 标志一起使用。</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpClient">
      <summary>提供用户数据报协议 (UDP) 网络服务。</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor">
      <summary>初始化 <see cref="T:System.Net.Sockets.UdpClient" /> 类的新实例。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Net.Sockets.UdpClient" /> 类的新实例，并将它绑定到所提供的本地端口号。</summary>
      <param name="port">要通过其进行通信的本地端口号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 参数大于 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 或小于 <see cref="F:System.Net.IPEndPoint.MinPort" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
      <summary>初始化 <see cref="T:System.Net.Sockets.UdpClient" /> 类的新实例，并将它绑定到所提供的本地端口号。</summary>
      <param name="port">用来侦听传入的连接尝试的端口。</param>
      <param name="family">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 值之一，它指定套接字的寻址方案。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> 不是 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 大于 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 或小于 <see cref="F:System.Net.IPEndPoint.MinPort" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
      <summary>初始化 <see cref="T:System.Net.Sockets.UdpClient" /> 类的新实例，并将其绑定到指定的本地终结点。</summary>
      <param name="localEP">一个 <see cref="T:System.Net.IPEndPoint" />，表示将 UDP 连接绑定到的本地终结点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>初始化 <see cref="T:System.Net.Sockets.UdpClient" /> 类的新实例。</summary>
      <param name="family">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 值之一，它指定套接字的寻址方案。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> 不是 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
      <summary>初始化 <see cref="T:System.Net.Sockets.UdpClient" /> 类的新实例，并建立默认远程主机。</summary>
      <param name="hostname">要连接到的远程 DNS 主机的名称。</param>
      <param name="port">要连接到的远程端口号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
      <summary>启用或禁用针对 <see cref="T:System.Net.Sockets.UdpClient" /> 实例的网络地址转换 (NAT) 遍历。</summary>
      <param name="allowed">一个布尔值，该值指定是启用还是禁用 NAT 遍历。</param>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>从远程主机异步接收数据报。</summary>
      <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">一个用户定义的对象，其中包含接收操作的相关信息。 当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</param>
      <returns>一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步接收。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>将数据报异步发送到远程主机。 先前已通过调用 <see cref="Overload:System.Net.Sockets.UdpClient.Connect" /> 指定目标。</summary>
      <param name="datagram">一个 <see cref="T:System.Byte" /> 数组，其中包含要发送的数据。</param>
      <param name="bytes">要发送的字节数。</param>
      <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">一个用户定义的对象，其中包含该发送操作的信息。 当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</param>
      <returns>一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步发送。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>将数据报异步发送到目标。 目标由 <see cref="T:System.Net.EndPoint" /> 指定。</summary>
      <param name="datagram">一个 <see cref="T:System.Byte" /> 数组，其中包含要发送的数据。</param>
      <param name="bytes">要发送的字节数。</param>
      <param name="endPoint">
        <see cref="T:System.Net.EndPoint" />，它表示数据的目标位置。</param>
      <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">一个用户定义的对象，其中包含该发送操作的信息。 当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</param>
      <returns>一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步发送。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>将数据报异步发送到目标。 目标由主机名和端口号指定。</summary>
      <param name="datagram">一个 <see cref="T:System.Byte" /> 数组，其中包含要发送的数据。</param>
      <param name="bytes">要发送的字节数。</param>
      <param name="hostname">目标主机。</param>
      <param name="port">目标端口号。</param>
      <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">一个用户定义的对象，其中包含该发送操作的信息。 当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</param>
      <returns>一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步发送。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Close">
      <summary>关闭 UDP 连接。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>使用指定的 IP 地址和端口号建立默认远程主机。</summary>
      <param name="addr">要将数据发送到的远程主机的 <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">要将数据发送到的端口号。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 已关闭。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addr" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
      <summary>使用指定的网络终结点建立默认远程主机。</summary>
      <param name="endPoint">一个 <see cref="T:System.Net.IPEndPoint" />，它指定要将数据发送到的网络终结点。</param>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endPoint" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 是关闭的。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
      <summary>使用指定的主机名和端口号建立默认远程主机。</summary>
      <param name="hostname">要将数据发送到的远程主机的 DNS 名称。</param>
      <param name="port">要将数据发送到的远程主机上的端口号。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 是关闭的。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose">
      <summary>释放由 <see cref="T:System.Net.Sockets.UdpClient" /> 占用的托管和非托管资源。</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Net.Sockets.UdpClient" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
      <summary>退出多播组。</summary>
      <param name="multicastAddr">要退出的多播组的 <see cref="T:System.Net.IPAddress" />。</param>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <exception cref="T:System.ArgumentException">IP 地址与定义套接字的寻址方案所用的 <see cref="T:System.Net.Sockets.AddressFamily" /> 值不相符。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>退出多播组。</summary>
      <param name="multicastAddr">要退出的多播组的 <see cref="T:System.Net.IPAddress" />。</param>
      <param name="ifindex">要退出的多播组的本地地址。</param>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <exception cref="T:System.ArgumentException">IP 地址与定义套接字的寻址方案所用的 <see cref="T:System.Net.Sockets.AddressFamily" /> 值不相符。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>结束挂起的异步接收。</summary>
      <param name="asyncResult">调用 <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 对象。</param>
      <param name="remoteEP">指定的远程终结点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">对 <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</exception>
      <exception cref="T:System.InvalidOperationException">先前曾为异步读取调用过 <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问基础 <see cref="T:System.Net.Sockets.Socket" /> 时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <returns>如果成功，则返回包含数据报数据的字节数组。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
      <summary>结束挂起的异步发送。</summary>
      <param name="asyncResult">调用 <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /> 后返回的 <see cref="T:System.IAsyncResult" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">对 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</exception>
      <exception cref="T:System.InvalidOperationException">先前曾为异步读取调用过 <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问基础套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <returns>如果成功，则返回已发送到 <see cref="T:System.Net.Sockets.UdpClient" /> 的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
      <summary>将 <see cref="T:System.Net.Sockets.UdpClient" /> 添加到多播组。</summary>
      <param name="ifindex">与在其上加入多播组的本地 IP 地址关联的接口索引。</param>
      <param name="multicastAddr">要加入的组的多播 <see cref="T:System.Net.IPAddress" />。</param>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
      <summary>将 <see cref="T:System.Net.Sockets.UdpClient" /> 添加到多播组。</summary>
      <param name="multicastAddr">要加入的组的多播 <see cref="T:System.Net.IPAddress" />。</param>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <exception cref="T:System.ArgumentException">IP 地址与定义套接字的寻址方案所用的 <see cref="T:System.Net.Sockets.AddressFamily" /> 值不相符。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>将 <see cref="T:System.Net.Sockets.UdpClient" /> 添加到具有指定生存时间 (TTL) 的多播组。</summary>
      <param name="multicastAddr">要加入的多播组的 <see cref="T:System.Net.IPAddress" />。</param>
      <param name="timeToLive">生存时间 (TTL)，以路由器跃点数为单位。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">所提供的 TTL 不在 0 和 255 之间</exception>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">IP 地址与定义套接字的寻址方案所用的 <see cref="T:System.Net.Sockets.AddressFamily" /> 值不相符。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>将 <see cref="T:System.Net.Sockets.UdpClient" /> 添加到多播组。</summary>
      <param name="multicastAddr">要加入的组的多播 <see cref="T:System.Net.IPAddress" />。</param>
      <param name="localAddress">本地 <see cref="T:System.Net.IPAddress" />。</param>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
      <summary>返回由远程主机发送的 UDP 数据报。</summary>
      <param name="remoteEP">一个 <see cref="T:System.Net.IPEndPoint" />，它表示从其发送数据的远程主机。</param>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <returns>一个 <see cref="T:System.Byte" /> 类型的数组，它包含数据报数据。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.ReceiveAsync">
      <summary>异步返回由远程主机发送的 UDP 数据报。</summary>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
      <summary>将 UDP 数据报发送到远程主机。</summary>
      <param name="dgram">一个 <see cref="T:System.Byte" /> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</param>
      <param name="bytes">数据报中的字节数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 已建立默认远程主机。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 是关闭的。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <returns>已发送的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>将 UDP 数据报发送到位于指定远程终结点的主机。</summary>
      <param name="dgram">一个 <see cref="T:System.Byte" /> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</param>
      <param name="bytes">数据报中的字节数。</param>
      <param name="endPoint">一个 <see cref="T:System.Net.IPEndPoint" />，表示要将数据报发送到的主机和端口。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 已建立默认远程主机。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <returns>已发送的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>将 UDP 数据报发送到指定远程主机上的指定端口。</summary>
      <param name="dgram">一个 <see cref="T:System.Byte" /> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</param>
      <param name="bytes">数据报中的字节数。</param>
      <param name="hostname">要向其发送数据报的远程主机的名称。</param>
      <param name="port">要与之通信的远程端口号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 已建立默认远程主机。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 是关闭的。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <returns>已发送的字节数。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
      <summary>将 UDP 数据报异步发送到远程主机。</summary>
      <param name="datagram">一个 <see cref="T:System.Byte" /> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</param>
      <param name="bytes">数据报中的字节数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 已建立默认远程主机。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 是关闭的。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <returns>返回 <see cref="T:System.Threading.Tasks.Task`1" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>将 UDP 数据报异步发送到远程主机。</summary>
      <param name="datagram">一个 <see cref="T:System.Byte" /> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</param>
      <param name="bytes">数据报中的字节数。</param>
      <param name="endPoint">一个 <see cref="T:System.Net.IPEndPoint" />，表示要将数据报发送到的主机和端口。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 已建立默认远程主机。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 已关闭。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <returns>返回 <see cref="T:System.Threading.Tasks.Task`1" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>将 UDP 数据报异步发送到远程主机。</summary>
      <param name="datagram">一个 <see cref="T:System.Byte" /> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</param>
      <param name="bytes">数据报中的字节数。</param>
      <param name="hostname">要向其发送数据报的远程主机的名称。</param>
      <param name="port">要与之通信的远程端口号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 已建立默认远程主机。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> 是关闭的。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">访问套接字时出错。</exception>
      <returns>返回 <see cref="T:System.Threading.Tasks.Task`1" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Active">
      <summary>获取或设置一个值，该值指示是否已建立默认远程主机。</summary>
      <returns>如果连接处于活动状态，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Available">
      <summary>获取从网络接收的可读取的数据量。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</exception>
      <returns>从网络接收的数据字节数。</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Client">
      <summary>获取或设置基础网络 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <returns>基础网络 <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.DontFragment">
      <summary>获取或设置 <see cref="T:System.Boolean" /> 值，该值指定 <see cref="T:System.Net.Sockets.UdpClient" /> 是否允许将 Internet 协议 (IP) 数据报分段。</summary>
      <exception cref="T:System.NotSupportedException">只能为使用 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 标志或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 标志的套接字设置该属性。</exception>
      <returns>如果 <see cref="T:System.Net.Sockets.UdpClient" /> 允许数据报分段，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.EnableBroadcast">
      <summary>获取或设置 <see cref="T:System.Boolean" /> 值，该值指定 <see cref="T:System.Net.Sockets.UdpClient" /> 是否可以发送或接收广播数据包。</summary>
      <returns>如果 <see cref="T:System.Net.Sockets.UdpClient" /> 允许广播数据包，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
      <summary>获取或设置 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Net.Sockets.UdpClient" /> 是否只允许一个客户端使用端口。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">尝试访问基础套接字时出错。</exception>
      <exception cref="T:System.ObjectDisposedException">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</exception>
      <returns>如果 <see cref="T:System.Net.Sockets.UdpClient" /> 只允许一个客户端使用特定端口，则为 <see langword="true" />；否则为 <see langword="false" />。 在 Windows Server 2003、Windows XP Service Pack 2 及更高版本中，默认为 <see langword="true" />；在所有其他版本中，默认为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.MulticastLoopback">
      <summary>获取或设置 <see cref="T:System.Boolean" /> 值，该值指定是否将输出多播数据包传递给发送应用程序。</summary>
      <returns>如果 <see cref="T:System.Net.Sockets.UdpClient" /> 接收传出的多路广播数据包，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Ttl">
      <summary>获取或设置一个值，它指定由 <see cref="T:System.Net.Sockets.UdpClient" /> 发送的 Internet 协议 (IP) 数据包的生存时间 (TTL)。</summary>
      <returns>TTL 值。</returns>
    </member>
    <member name="T:System.Net.Sockets.UdpReceiveResult">
      <summary>呈现 UDP 从对 <see cref="M:System.Net.Sockets.UdpClient.ReceiveAsync" /> 方法的调用接收结果信息。</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)">
      <summary>初始化 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 类的新实例。</summary>
      <param name="buffer">用于缓冲 UDP 数据包中所接收数据的缓冲区。</param>
      <param name="remoteEndPoint">UDP 数据包的远程终结点。</param>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)">
      <summary>返回一个值，该值指示此实例是否与指定的对象相等。</summary>
      <param name="other">与该实例进行比较的对象。</param>
      <returns>如果 <paramref name="other" /> 是 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 的实例并且等于此实例的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Object)">
      <summary>返回一个值，该值指示此实例是否与指定的对象相等。</summary>
      <param name="obj">与该实例进行比较的对象。</param>
      <returns>如果 <paramref name="obj" /> 是 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 的实例并且等于此实例的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>哈希代码。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>测试两个指定的 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 实例是否相等。</summary>
      <param name="left">相等运算符左侧的 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 实例。</param>
      <param name="right">相等运算符右侧的 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 实例。</param>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>测试两个指定的 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 实例是否不相等。</summary>
      <param name="left">不相等运算符左侧的 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 实例。</param>
      <param name="right">不相等运算符右侧的 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 实例。</param>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.Buffer">
      <summary>获取包含 UDP 数据包中所接收数据的缓冲区。</summary>
      <returns>一个包含 UDP 数据包中所接收数据的 <see cref="T:System.Byte" /> 数组。</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.RemoteEndPoint">
      <summary>获取通过其接收 UDP 数据包的远程终结点。</summary>
      <returns>从中接收 UDP 数据包的远程终结点。</returns>
    </member>
    <member name="T:System.Net.Sockets.UnixDomainSocketEndPoint">
      <summary>以路径形式表示 Unix 域套接字终结点。</summary>
    </member>
    <member name="M:System.Net.Sockets.UnixDomainSocketEndPoint.#ctor(System.String)">
      <summary>通过用于连接 unix 域套接字的文件路径初始化 <see cref="T:System.Net.Sockets.UnixDomainSocketEndPoint" /> 的新实例。</summary>
      <param name="path">用于连接 unix 域套接字的路径。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="path" /> 的长度无效，无法在此平台上与域套接字一起使用。 长度必须介于 1 与允许的本机路径长度之间。</exception>
      <exception cref="T:System.PlatformNotSupportedException">当前操作系统不支持 Unix 域套接字。</exception>
    </member>
  </members>
</doc>