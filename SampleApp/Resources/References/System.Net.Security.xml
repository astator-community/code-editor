<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Security</name>
  </assembly>
  <members>
    <member name="T:System.Net.Security.AuthenticatedStream">
      <summary>提供通过流传递凭据的方法，以及为客户端/服务器应用程序请求或执行身份验证的方法。</summary>
    </member>
    <member name="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>初始化 <see cref="T:System.Net.Security.AuthenticatedStream" /> 类的新实例。</summary>
      <param name="innerStream">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.AuthenticatedStream" /> 使用此对象发送和接收数据。</param>
      <param name="leaveInnerStreamOpen">
        <see cref="T:System.Boolean" />，指示关闭此 <see cref="T:System.Net.Security.AuthenticatedStream" /> 对象时是否同时关闭 <paramref name="innerStream" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</exception>
    </member>
    <member name="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Net.Security.AuthenticatedStream" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Security.AuthenticatedStream.DisposeAsync">
      <summary>异步释放 <see cref="T:System.Net.Security.AuthenticatedStream" /> 使用的非托管资源和受管理资源。</summary>
      <returns>一个表示异步释放操作的任务。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.InnerStream">
      <summary>获取此 <see cref="T:System.Net.Security.AuthenticatedStream" /> 用来发送和接收数据的流。</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> 对象。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示身份验证是否成功。</summary>
      <returns>如果身份验证成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示使用此 <see cref="T:System.Net.Security.AuthenticatedStream" /> 发送的数据是否加密。</summary>
      <returns>如果在通过网络传输数据前将其加密，并在数据到达远程终结点后将其解密，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示服务器和客户端是否均已进行身份验证。</summary>
      <returns>如果客户端和服务器都已经过身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsServer">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示连接的本地端是否已作为服务器经过了身份验证。</summary>
      <returns>如果本地终结点作为经过身份验证的客户端/服务器连接的服务器端进行了身份验证，则为 <see langword="true" />；如果本地终结点作为客户端进行了身份验证，则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsSigned">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示使用此流发送的数据是否进行签名。</summary>
      <returns>如果在传输数据前对其进行签名，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
      <summary>获取此 <see cref="T:System.Net.Security.AuthenticatedStream" /> 用来发送和接收数据的流是否保持打开。</summary>
      <returns>如果内部流一直保持打开，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Security.CipherSuitesPolicy">
      <summary>指定允许的密码套件。</summary>
    </member>
    <member name="M:System.Net.Security.CipherSuitesPolicy.#ctor(System.Collections.Generic.IEnumerable{System.Net.Security.TlsCipherSuite})">
      <summary>初始化可用于客户端或服务器身份验证的 <see cref="T:System.Net.Security.CipherSuitesPolicy" /> 类的新实例。</summary>
      <param name="allowedCipherSuites">此策略中允许用于协商的密码套件集合。</param>
      <exception cref="T:System.PlatformNotSupportedException">平台不是具有 OpenSSL 1.1.1 或更高版本的 Linux 系统或 macOS。</exception>
    </member>
    <member name="P:System.Net.Security.CipherSuitesPolicy.AllowedCipherSuites">
      <summary>获取作为此策略中允许用于协商的密码套件集合传入 <see cref="M:System.Net.Security.CipherSuitesPolicy.#ctor(System.Collections.Generic.IEnumerable{System.Net.Security.TlsCipherSuite})" /> 构造函数的有效密码套件的子集。</summary>
      <returns>此策略中允许用于协商的密码套件集合。</returns>
    </member>
    <member name="T:System.Net.Security.EncryptionPolicy">
      <summary>要使用的 EncryptionPolicy。</summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.AllowNoEncryption">
      <summary>虽然优先考虑使用完全加密，但若获得服务器同意，也可以使用 NULL 密码（不加密）。</summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.NoEncryption">
      <summary>允许不加密，并请求在另一个终结点可以处理 NULL 密码的情况下使用 NULL 密码。</summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.RequireEncryption">
      <summary>要求加密，并且绝不允许使用 NULL 密码。</summary>
    </member>
    <member name="T:System.Net.Security.LocalCertificateSelectionCallback">
      <summary>选择用于身份验证的本地安全套接字层 (SSL) 证书。</summary>
      <param name="sender">一个对象，它包含此验证的状态信息。</param>
      <param name="targetHost">客户端指定的主机服务器。</param>
      <param name="localCertificates">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 包含本地证书。</param>
      <param name="remoteCertificate">用于对远程方进行身份验证的证书。</param>
      <param name="acceptableIssuers">远程方可接受的证书颁发者的 <see cref="T:System.String" /> 数组。</param>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 用于建立 SSL 连接。</returns>
    </member>
    <member name="T:System.Net.Security.NegotiateStream">
      <summary>提供一个使用协商安全协议的流，以便对客户端-服务器通信中的客户端及服务器（可选）进行身份验证。</summary>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
      <summary>使用指定的 <see cref="T:System.Net.Security.NegotiateStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</summary>
      <param name="innerStream">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.NegotiateStream" /> 使用此对象发送和接收数据。</param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>使用指定的 <see cref="T:System.Net.Security.NegotiateStream" /> 和流封闭行为初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</summary>
      <param name="innerStream">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.NegotiateStream" /> 使用此对象发送和接收数据。</param>
      <param name="leaveInnerStreamOpen">如果为 <see langword="true" />，表示关闭此 <see cref="T:System.Net.Security.NegotiateStream" /> 不影响 <paramref name="innerStream" />；若为 <see langword="false" />，则表示关闭此 <see cref="T:System.Net.Security.NegotiateStream" /> 也会同时关闭 <paramref name="innerStream" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
      <summary>客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
      <summary>客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的客户端凭据和通道绑定。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="credential" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的凭据、身份验证选项和通道绑定。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</param>
      <param name="requiredProtectionLevel">
        <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</param>
      <param name="allowedImpersonationLevel">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="credential" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> 不是有效值。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
      <summary>客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的客户端凭据。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的凭据和身份验证选项。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</param>
      <param name="requiredProtectionLevel">
        <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</param>
      <param name="allowedImpersonationLevel">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> 不是有效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 null。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
      <summary>客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
      <summary>客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。 身份验证过程使用指定的客户端凭据和通道绑定。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="credential" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。 身份验证过程使用指定的凭据、身份验证选项和通道绑定。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</param>
      <param name="requiredProtectionLevel">
        <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</param>
      <param name="allowedImpersonationLevel">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="credential" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> 不是有效值。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
      <summary>客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。 身份验证过程使用指定的客户端凭据。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 <see langword="null" />。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。 身份验证过程使用指定的凭据和身份验证选项。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</param>
      <param name="requiredProtectionLevel">
        <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</param>
      <param name="allowedImpersonationLevel">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> 不是有效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 null。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
      <summary>服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.NotSupportedException">不支持 windows 95 和 Windows 98。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的服务器凭据和身份验证选项。</summary>
      <param name="credential">用于确立服务器身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="requiredProtectionLevel">
        <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</param>
      <param name="requiredImpersonationLevel">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被用作客户端尝试进行身份验证。 不能尝试将该流作为服务器重新进行身份验证。</exception>
      <exception cref="T:System.NotSupportedException">不支持 windows 95 和 Windows 98。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="policy">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <param name="requiredProtectionLevel">
        <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</param>
      <param name="requiredImpersonationLevel">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</param>
      <exception cref="T:System.ArgumentException">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被用作客户端尝试进行身份验证。 不能尝试将该流作为服务器重新进行身份验证。</exception>
      <exception cref="T:System.NotSupportedException">不支持 windows 95 和 Windows 98。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
      <summary>服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的扩展保护策略。</summary>
      <param name="policy">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <exception cref="T:System.ArgumentException">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.NotSupportedException">不支持 windows 95 和 Windows 98。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
      <summary>服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.NotSupportedException">不支持 windows 95 和 Windows 98。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。 身份验证过程使用指定的服务器凭据和身份验证选项。</summary>
      <param name="credential">用于确立服务器身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="requiredProtectionLevel">
        <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</param>
      <param name="requiredImpersonationLevel">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被用作客户端尝试进行身份验证。 不能尝试将该流作为服务器重新进行身份验证。</exception>
      <exception cref="T:System.NotSupportedException">不支持 windows 95 和 Windows 98。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。 身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="policy">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <param name="requiredProtectionLevel">
        <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</param>
      <param name="requiredImpersonationLevel">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</param>
      <exception cref="T:System.ArgumentException">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被用作客户端尝试进行身份验证。 不能尝试将该流作为服务器重新进行身份验证。</exception>
      <exception cref="T:System.NotSupportedException">不支持 windows 95 和 Windows 98。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
      <summary>服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。 身份验证过程使用指定的扩展保护策略。</summary>
      <param name="policy">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <exception cref="T:System.ArgumentException">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.NotSupportedException">不支持 windows 95 和 Windows 98。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
      <summary>客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。 此方法不会进入阻止状态。</summary>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含该操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
      <summary>客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的凭据和通道绑定。 此方法不会进入阻止状态。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</param>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含写操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="targetName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的凭据、身份验证选项和通道绑定。 此方法不会进入阻止状态。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</param>
      <param name="requiredProtectionLevel">
        <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</param>
      <param name="allowedImpersonationLevel">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</param>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含写操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="targetName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
      <summary>客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的凭据。 此方法不会进入阻止状态。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</param>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含写操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="targetName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的凭据和身份验证选项。 此方法不会进入阻止状态。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</param>
      <param name="requiredProtectionLevel">
        <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</param>
      <param name="allowedImpersonationLevel">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</param>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含写操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="targetName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被尝试作为服务器进行身份验证。 不能尝试将该流作为客户端重新进行身份验证。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
      <summary>服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。 此方法不会进入阻止状态。</summary>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含该操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.NotSupportedException">不支持 windows 95 和 Windows 98。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的服务器凭据和身份验证选项。 此方法不会进入阻止状态。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="requiredProtectionLevel">
        <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</param>
      <param name="requiredImpersonationLevel">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</param>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含该操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被用作客户端尝试进行身份验证。 不能尝试将该流作为服务器重新进行身份验证。</exception>
      <exception cref="T:System.NotSupportedException">不支持 windows 95 和 Windows 98。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。 此方法不会进入阻止状态。</summary>
      <param name="credential">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="policy">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <param name="requiredProtectionLevel">
        <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</param>
      <param name="requiredImpersonationLevel">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</param>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含写操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentException">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 -
  
 此流先前被用作客户端尝试进行身份验证。 不能尝试将该流作为服务器重新进行身份验证。</exception>
      <exception cref="T:System.NotSupportedException">不支持 windows 95 和 Windows 98。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
      <summary>服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。 身份验证过程使用指定的扩展保护策略。 此方法不会进入阻止状态。</summary>
      <param name="policy">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含写操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentException">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.NotSupportedException">不支持 windows 95 和 Windows 98。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始一个异步读操作，此操作读取流中的数据并将其存储在指定的数组中。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</param>
      <param name="offset">
        <paramref name="buffer" /> 中从零开始的位置，从此处开始存储从此流中读取的数据。</param>
      <param name="count">要从流中读取的最大字节数。</param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 委托，该委托引用读操作完成时要调用的方法。</param>
      <param name="asyncState">用户定义的对象，其中包含读操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="offset" /> 加上 <paramref name="count" /> 大于 <paramref name="buffer" /> 的长度。</exception>
      <exception cref="T:System.IO.IOException">读操作失败。  
  
- 或 -
  
 使用了加密服务，但未能解密该数据。</exception>
      <exception cref="T:System.NotSupportedException">已存在一个正在执行的读取操作。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始一个异步写操作，此操作将指定缓冲区中的 <see cref="T:System.Byte" /> 写入到流中。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</param>
      <param name="offset">
        <paramref name="buffer" /> 中从零开始的位置，从此处开始读取要写入到流中的字节。</param>
      <param name="count">
        <see cref="T:System.Int32" /> 值，该值指定要从 <paramref name="buffer" /> 中读取的字节数。</param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 委托，它引用写操作完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含写操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset is less than 0" />。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</exception>
      <exception cref="T:System.IO.IOException">写操作失败。  
  
- 或 -
  
 正在使用加密，但未能加密该数据。</exception>
      <exception cref="T:System.NotSupportedException">已存在一个正在执行的写操作。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Net.Security.NegotiateStream" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.DisposeAsync">
      <summary>异步释放 <see cref="T:System.Net.Security.NegotiateStream" /> 使用的非托管资源和受管理资源。</summary>
      <returns>一个表示异步释放操作的任务。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <summary>结束通过调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 而启动的、正处于挂起状态的异步客户端身份验证操作。</summary>
      <param name="asyncResult">调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 的调用创建的。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.InvalidOperationException">没有需要完成的处于挂起状态的客户端身份验证。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <summary>结束通过调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 而启动的、正处于挂起状态的异步客户端身份验证操作。</summary>
      <param name="asyncResult">调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 的调用创建的。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">身份验证失败。 可以使用此对象尝试重新进行身份验证。</exception>
      <exception cref="T:System.InvalidOperationException">没有要完成的处于挂起状态的身份验证。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
      <summary>结束通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步读操作。</summary>
      <param name="asyncResult">调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">asyncResult 并不是通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而创建的。</exception>
      <exception cref="T:System.InvalidOperationException">没有处于挂起状态的读操作要完成。

- 或 -

未进行身份验证。</exception>
      <exception cref="T:System.IO.IOException">读操作失败。</exception>
      <returns>
        <see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
      <summary>结束通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步写操作。</summary>
      <param name="asyncResult">调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">asyncResult 并不是通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而创建的。</exception>
      <exception cref="T:System.InvalidOperationException">没有处于挂起状态的写操作要完成。

- 或 -

未进行身份验证。</exception>
      <exception cref="T:System.IO.IOException">写操作失败。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Flush">
      <summary>导致所有缓冲数据都要写入基础设备。</summary>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>将所有缓冲数据异步写入基础设备。</summary>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <returns>表示异步刷新操作的任务。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>读取此流中的数据并将其存储在指定的数组中。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</param>
      <param name="offset">
        <see cref="T:System.Int32" />，其中包含 <paramref name="buffer" /> 中从零开始的位置，从此处开始存储从流中读取的数据。</param>
      <param name="count">
        <see cref="T:System.Int32" />，包含要从流中读取的最大字节数。</param>
      <exception cref="T:System.IO.IOException">读操作失败。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
      <exception cref="T:System.NotSupportedException">已在进行 <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 操作。</exception>
      <returns>
        <see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。 如果再也没有要读取的数据，将返回 0。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>异步读取此流中的数据并将其存储在指定的数组中。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</param>
      <param name="offset">
        <see cref="T:System.Int32" />，其中包含 <paramref name="buffer" /> 中从零开始的位置，从此处开始存储从流中读取的数据。</param>
      <param name="count">
        <see cref="T:System.Int32" />，包含要从流中读取的最大字节数。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.IO.IOException">读操作失败。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
      <exception cref="T:System.NotSupportedException">已在进行 <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 操作。</exception>
      <returns>
        <see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。 如果再也没有要读取的数据，将返回 0。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>以异步操作形式，从 <see cref="T:System.Net.Security.NegotiateStream" /> 读取数据，并将其存储在字节内存范围内。</summary>
      <param name="buffer">要写入数据的缓冲区。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.IO.IOException">读操作失败。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
      <returns>表示异步读取操作的 <see cref="T:System.Threading.Tasks.ValueTask`1" />。 其 <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> 属性的值包含读入 <paramref name="buffer" /> 的总字节数。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="offset">忽略此值。</param>
      <param name="origin">忽略此值。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Net.Security.NegotiateStream" /> 上不支持查找。</exception>
      <returns>总是引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)">
      <summary>设置基础流的长度。</summary>
      <param name="value">
        <see cref="T:System.Int64" /> 值，该值指定流的长度。</param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>使用指定的缓冲区和偏移将指定数目的 <see cref="T:System.Byte" /> 写入基础流。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</param>
      <param name="offset">包含 <paramref name="buffer" /> 中从零开始的位置的 <see cref="T:System.Int32" />，将从此位置开始读取要写入到流中的字节。</param>
      <param name="count">
        <see cref="T:System.Int32" />，其中包含要从 <paramref name="buffer" /> 读取的字节数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset is less than 0" />。  
  
- 或 - 
 <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</exception>
      <exception cref="T:System.IO.IOException">写操作失败。  
  
- 或 -
  
 正在使用加密，但未能加密该数据。</exception>
      <exception cref="T:System.NotSupportedException">已存在一个正在执行的写操作。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>将指定数量的 <see cref="T:System.Byte" /> 异步写入基础流。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</param>
      <param name="offset">包含 <paramref name="buffer" /> 中从零开始的位置的 <see cref="T:System.Int32" />，将从此位置开始读取要写入到流中的字节。</param>
      <param name="count">
        <see cref="T:System.Int32" />，其中包含要从 <paramref name="buffer" /> 读取的字节数。</param>
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.Security.NegotiateStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>将指定数量的 <see cref="T:System.Byte" /> 异步写入基础流。</summary>
      <param name="buffer">一个包含要写入 <see cref="T:System.Net.Security.NegotiateStream" /> 的数据的内存区域。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanRead">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可读。</summary>
      <returns>如果已进行身份验证且基础流为可读，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanSeek">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可查找。</summary>
      <returns>此属性始终返回 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanTimeout">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否支持超时。</summary>
      <returns>如果基础流支持超时，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanWrite">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可写。</summary>
      <returns>如果已进行身份验证且基础流可写，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
      <summary>获取一个值，该值指示服务器使用客户端凭据的方法。</summary>
      <exception cref="T:System.InvalidOperationException">身份验证失败或没有进行身份验证。</exception>
      <returns>
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsAuthenticated">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示身份验证是否成功。</summary>
      <returns>如果身份验证成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsEncrypted">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.NegotiateStream" /> 是否使用数据加密。</summary>
      <returns>如果在通过网络传输数据前将其加密，并在数据到达远程终结点后将其解密，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示服务器和客户端是否均已进行身份验证。</summary>
      <returns>如果服务器已进行身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsServer">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.NegotiateStream" /> 使用的连接的本地端是否作为服务器进行了身份验证。</summary>
      <returns>如果本地终结点作为经过身份验证的连接的服务器端成功地经过了身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsSigned">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示使用此流发送的数据是否进行签名。</summary>
      <returns>如果在传输数据前对其进行签名，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.Length">
      <summary>获取基础流的长度。</summary>
      <exception cref="T:System.NotSupportedException">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</exception>
      <returns>
        <see cref="T:System.Int64" />，指定基础流的长度。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.Position">
      <summary>获取或设置基础流中的当前位置。</summary>
      <exception cref="T:System.NotSupportedException">不支持设置此属性。  
  
- 或 - 
当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</exception>
      <returns>
        <see cref="T:System.Int64" />，指定基础流中的当前位置。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.ReadTimeout">
      <summary>获取或设置读操作阻止等待数据的时间。</summary>
      <returns>
        <see cref="T:System.Int32" />，指定读操作失败前经过的时间。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.RemoteIdentity">
      <summary>获取有关共享此已验证身份的流的远程方的身份信息。</summary>
      <exception cref="T:System.InvalidOperationException">身份验证失败或没有进行身份验证。</exception>
      <returns>
        <see cref="T:System.Security.Principal.IIdentity" /> 对象，介绍远程端点的标识。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.WriteTimeout">
      <summary>获取或设置写操作阻止等待数据的时间。</summary>
      <returns>
        <see cref="T:System.Int32" />，指定写操作失败前经过的时间。</returns>
    </member>
    <member name="T:System.Net.Security.ProtectionLevel">
      <summary>指示是否为已经过身份验证的流请求安全服务。</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.EncryptAndSign">
      <summary>对数据进行加密和签名可帮助确保所传输数据的保密性和完整性。</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.None">
      <summary>仅身份验证。</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.Sign">
      <summary>对数据签名可帮助确保所传输数据的完整性。</summary>
    </member>
    <member name="T:System.Net.Security.RemoteCertificateValidationCallback">
      <summary>验证用于身份验证的远程安全套接字层 (SSL) 证书。</summary>
      <param name="sender">一个对象，它包含此验证的状态信息。</param>
      <param name="certificate">用于对远程方进行身份验证的证书。</param>
      <param name="chain">与远程证书关联的证书颁发机构链。</param>
      <param name="sslPolicyErrors">与远程证书关联的一个或多个错误。</param>
      <returns>
        <see cref="T:System.Boolean" /> 值，它确定是否接受指定证书进行身份验证。</returns>
    </member>
    <member name="T:System.Net.Security.ServerCertificateSelectionCallback">
      <summary>选择服务器安全套接字层 (SSL) 证书。</summary>
      <param name="sender">
        <see cref="T:System.Net.Security.SslStream" /> 对象。</param>
      <param name="hostName">客户端请求的主机名。 如果客户端不使用 host_name TLS 扩展，则 <paramref name="hostName" /> 为空字符串。</param>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 用于建立 SSL 连接。</returns>
    </member>
    <member name="T:System.Net.Security.ServerOptionsSelectionCallback">
      <summary>表示将根据客户端请求的名称选择会话属性的异步回调方法。</summary>
      <param name="stream">执行身份验证的 TLS 流。</param>
      <param name="clientHelloInfo">客户端呼叫消息中的信息。</param>
      <param name="state">注册回叫时传递的信息。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <returns>服务器身份验证属性包。</returns>
    </member>
    <member name="T:System.Net.Security.SslApplicationProtocol">
      <summary>表示 TLS 应用程序协议的值。</summary>
    </member>
    <member name="F:System.Net.Security.SslApplicationProtocol.Http11">
      <summary>获取表示 HTTP/1.1 TLS 应用程序协议的 <see cref="T:System.Net.Security.SslApplicationProtocol" />。</summary>
    </member>
    <member name="F:System.Net.Security.SslApplicationProtocol.Http2">
      <summary>获取表示 HTTP/2 TLS 应用程序协议的 <see cref="T:System.Net.Security.SslApplicationProtocol" />。</summary>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.#ctor(System.Byte[])">
      <summary>初始化 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 的新实例。</summary>
      <param name="protocol">TLS 应用程序协议。</param>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 的新实例。</summary>
      <param name="protocol">TLS 应用程序协议。</param>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.Equals(System.Net.Security.SslApplicationProtocol)">
      <summary>将 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 与指定的 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 实例进行比较。</summary>
      <param name="other">要进行相等性测试的 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 实例。</param>
      <returns>如果提供的 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 实例具有匹配的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.Equals(System.Object)">
      <summary>将 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 与指定的对象进行比较。</summary>
      <param name="obj">要测试相等的对象。</param>
      <returns>如果 <paramref name="obj" /> 是 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 实例，且 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 实例具有匹配的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.GetHashCode">
      <summary>返回 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 实例的哈希代码。</summary>
      <returns>一个 32 位的有符号整数哈希代码，用于比较此类型的实例。</returns>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.op_Equality(System.Net.Security.SslApplicationProtocol,System.Net.Security.SslApplicationProtocol)">
      <summary>用于比较两个 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 对象的相等运算符。</summary>
      <param name="left">相等运算符左侧的 <see cref="T:System.Net.Security.SslApplicationProtocol" />。</param>
      <param name="right">相等运算符右侧的 <see cref="T:System.Net.Security.SslApplicationProtocol" />。</param>
      <returns>如果指定的 <paramref name="left" /> 和 <paramref name="right" /> 参数相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.op_Inequality(System.Net.Security.SslApplicationProtocol,System.Net.Security.SslApplicationProtocol)">
      <summary>用于比较两个 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 对象的不相等运算符。</summary>
      <param name="left">不相等运算符左侧的 <see cref="T:System.Net.Security.SslApplicationProtocol" />。</param>
      <param name="right">不相等运算符右侧的 <see cref="T:System.Net.Security.SslApplicationProtocol" />。</param>
      <returns>如果指定的 <paramref name="left" /> 和 <paramref name="right" /> 参数不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.ToString">
      <summary>重写 <see cref="M:System.Object.ToString" /> 方法。</summary>
      <returns>返回此 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 对象的字符串表示形式。</returns>
    </member>
    <member name="P:System.Net.Security.SslApplicationProtocol.Protocol">
      <summary>获取此 <see cref="T:System.Net.Security.SslApplicationProtocol" /> 表示的当前的 TLS 应用程序协议。</summary>
      <returns>表示 TLS 应用程序协议的只读字节内存。</returns>
    </member>
    <member name="T:System.Net.Security.SslClientAuthenticationOptions">
      <summary>表示的客户端身份验证属性包 <see cref="T:System.Net.Security.SslStream" /> 。</summary>
    </member>
    <member name="M:System.Net.Security.SslClientAuthenticationOptions.#ctor">
      <summary>初始化 <see cref="T:System.Net.Security.SslClientAuthenticationOptions" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.AllowRenegotiation">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Net.Security.SslStream" /> 是否应允许 SSL 重新协商。</summary>
      <returns>
        <see langword="true" /> 如果指示 <see cref="T:System.Net.Security.SslStream" /> 允许 SSL 重新协商，则为; 否则为 <see langword="false" /> 。 默认值是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.ApplicationProtocols">
      <summary>获取或设置 ALPN 协议的列表。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.CertificateRevocationCheckMode">
      <summary>获取或设置证书验证的证书吊销模式。</summary>
      <exception cref="T:System.ArgumentNullException">此值包含无效枚举值。</exception>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> 中的值之一：<see langword="NoCheck" />、<see langword="Online" /> 或 <see langword="Offline" />。 默认值为 <see langword="Online" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.CipherSuitesPolicy">
      <summary>指定可用于 TLS 的密码套件。 如果设置为 <see langword="null" />，则使用操作系统默认值。 更改此设置时，请格外小心。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.ClientCertificates">
      <summary>将客户端身份验证到服务器时要考虑的证书的集合。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.EnabledSslProtocols">
      <summary>获取或设置一个值，该值表示在身份验证期间客户端向服务器提供的协议版本。</summary>
      <returns>默认值为 <see cref="F:System.Security.Authentication.SslProtocols.None" /> ，这是建议的值。 有关详细信息，请参阅 <see cref="T:System.Security.Authentication.SslProtocols" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.EncryptionPolicy">
      <summary>获取或设置加密策略。</summary>
      <returns>默认值是 <see cref="F:System.Net.Security.EncryptionPolicy.RequireEncryption" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.LocalCertificateSelectionCallback">
      <summary>获取或设置一个 <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> 委托，该委托负责选择用于身份验证的客户端身份验证证书。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.RemoteCertificateValidationCallback">
      <summary>获取或设置一个 <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，该委托负责验证远程方提供的证书。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.TargetHost">
      <summary>获取或设置客户端正在尝试连接到的服务器的名称。 该名称用于服务器证书验证。 它可以是 DNS 名称或 IP 地址。</summary>
    </member>
    <member name="T:System.Net.Security.SslClientHelloInfo">
      <summary>此结构包含接收到的 TLS Client Hello 帧中的信息。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientHelloInfo.ServerName">
      <summary>获取客户端指定的主机服务器。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientHelloInfo.SslProtocols">
      <summary>获取客户端提供的 TLS/SSL 协议。</summary>
      <returns>枚举值的按位组合，用于指定 TLS 或 SSL 协议。</returns>
    </member>
    <member name="T:System.Net.Security.SslServerAuthenticationOptions">
      <summary>此结构表示 <see cref="T:System.Net.Security.SslStream" /> 的服务器身份验证属性包。</summary>
    </member>
    <member name="M:System.Net.Security.SslServerAuthenticationOptions.#ctor">
      <summary>初始化 <see cref="T:System.Net.Security.SslServerAuthenticationOptions" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.AllowRenegotiation">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Net.Security.SslStream" /> 是否应允许 SSL 重新协商。</summary>
      <returns>
        <see langword="true" /> 如果指示 <see cref="T:System.Net.Security.SslStream" /> 允许 SSL 重新协商，则为; 否则为 <see langword="false" /> 。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ApplicationProtocols">
      <summary>获取或设置 ALPN 协议的列表。</summary>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.CertificateRevocationCheckMode">
      <summary>获取或设置证书验证的证书吊销模式。</summary>
      <exception cref="T:System.ArgumentException">此值包含无效枚举值。</exception>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> 中的值之一：<see langword="NoCheck" />、<see langword="Online" /> 或 <see langword="Offline" />。 默认值为 <see langword="Online" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.CipherSuitesPolicy">
      <summary>指定可用于 TLS 的密码套件。 如果设置为 <see langword="null" />，则使用操作系统默认值。 更改此设置时，请格外小心。</summary>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ClientCertificateRequired">
      <summary>获取或设置一个值，该值指定是否向客户端请求证书用于进行身份验证。 请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</summary>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.EnabledSslProtocols">
      <summary>获取或设置一个值，该值表示在身份验证过程中服务器用于匹配客户端协议版本的协议版本。</summary>
      <returns>默认值为 <see cref="F:System.Security.Authentication.SslProtocols.None" /> ，这是建议的值。 有关详细信息，请参见 <see cref="T:System.Security.Authentication.SslProtocols" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.EncryptionPolicy">
      <summary>获取或设置 <see cref="T:System.Net.Security.EncryptionPolicy" />。</summary>
      <exception cref="T:System.ArgumentException">此值包含无效枚举值。</exception>
      <returns>默认值为 <see cref="F:System.Net.Security.EncryptionPolicy.RequireEncryption" /></returns>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.RemoteCertificateValidationCallback">
      <summary>获取或设置 <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责对远程方提供的证书进行自定义验证。</summary>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificate">
      <summary>获取或设置服务器证书。</summary>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateContext">
      <summary>获取或设置服务器证书上下文。</summary>
      <returns>服务器证书上下文。</returns>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateSelectionCallback">
      <summary>获取或设置负责服务器证书选择的 <see cref="T:System.Net.Security.ServerCertificateSelectionCallback" /> 委托。</summary>
    </member>
    <member name="T:System.Net.Security.SslStream">
      <summary>提供一个用于客户端-服务器通信的流，该流使用安全套接字层 (SSL) 安全协议对服务器和（可选）客户端进行身份验证。</summary>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
      <summary>使用指定的 <see cref="T:System.Net.Security.SslStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</summary>
      <param name="innerStream">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> 不可读。  
  
- 或 - 
 <paramref name="innerStream" /> 不可写。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>使用指定的 <see cref="T:System.Net.Security.SslStream" /> 和流封闭行为初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</summary>
      <param name="innerStream">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</param>
      <param name="leaveInnerStreamOpen">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。 此参数指示内部流是否保持打开状态。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> 不可读。  
  
- 或 - 
 <paramref name="innerStream" /> 不可写。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
      <summary>使用指定的 <see cref="T:System.Net.Security.SslStream" />、流关闭行为和证书验证委托初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</summary>
      <param name="innerStream">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</param>
      <param name="leaveInnerStreamOpen">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。 此参数指示内部流是否保持打开状态。</param>
      <param name="userCertificateValidationCallback">
        <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> 不可读。  
  
- 或 - 
 <paramref name="innerStream" /> 不可写。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
      <summary>使用指定的 <see cref="T:System.Net.Security.SslStream" />、流关闭行为、证书验证委托和证书选择委托初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</summary>
      <param name="innerStream">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</param>
      <param name="leaveInnerStreamOpen">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。 此参数指示内部流是否保持打开状态。</param>
      <param name="userCertificateValidationCallback">
        <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。</param>
      <param name="userCertificateSelectionCallback">
        <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> 委托，负责选择用于身份验证的证书。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> 不可读。  
  
- 或 - 
 <paramref name="innerStream" /> 不可写。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
      <summary>使用指定的 <see cref="T:System.Net.Security.SslStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例</summary>
      <param name="innerStream">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</param>
      <param name="leaveInnerStreamOpen">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。 此参数指示内部流是否保持打开状态。</param>
      <param name="userCertificateValidationCallback">
        <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。</param>
      <param name="userCertificateSelectionCallback">
        <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> 委托，负责选择用于身份验证的证书。</param>
      <param name="encryptionPolicy">要使用的 <see cref="T:System.Net.Security.EncryptionPolicy" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> 不可读。  
  
- 或 - 
 <paramref name="innerStream" /> 不可写。  
  
- 或 - 
 <paramref name="encryptionPolicy" /> 无效。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.Net.Security.SslClientAuthenticationOptions)">
      <summary>由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。</summary>
      <param name="sslClientAuthenticationOptions">SSL 连接的属性包。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。

- 或 -

之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。

- 或 -

身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
      <summary>由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。</summary>
      <param name="targetHost">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
      <summary>由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。 身份验证过程使用指定的证书集合和系统默认的 SSL 协议。</summary>
      <param name="targetHost">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</param>
      <param name="clientCertificates">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="checkCertificateRevocation">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</param>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。 身份验证过程使用指定的证书集合和 SSL 协议。</summary>
      <param name="targetHost">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</param>
      <param name="clientCertificates">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="enabledSslProtocols">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示进行身份验证所使用的协议。</param>
      <param name="checkCertificateRevocation">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</param>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.Net.Security.SslClientAuthenticationOptions,System.Threading.CancellationToken)">
      <summary>由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。 身份验证过程使用 <paramref name="sslClientAuthenticationOptions" /> 属性包中指定的信息。</summary>
      <param name="sslClientAuthenticationOptions">SSL 连接的属性包。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sslClientAuthenticationOptions" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
      <summary>由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。</summary>
      <param name="targetHost">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
      <summary>由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。 身份验证过程使用指定的证书集合和系统默认的 SSL 协议。</summary>
      <param name="targetHost">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</param>
      <param name="clientCertificates">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="checkCertificateRevocation">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。 身份验证过程使用指定的证书集合和 SSL 协议。</summary>
      <param name="targetHost">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</param>
      <param name="clientCertificates">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="enabledSslProtocols">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示进行身份验证所使用的协议。</param>
      <param name="checkCertificateRevocation">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Net.Security.SslServerAuthenticationOptions)">
      <summary>服务器调用此方法，以便使用指定的证书对客户端-服务器连接中的服务器及客户端（可选）进行身份验证。</summary>
      <param name="sslServerAuthenticationOptions">SSL 连接的属性包。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>服务器调用此方法，以便使用指定的证书对客户端-服务器连接中的服务器及客户端（可选）进行身份验证。</summary>
      <param name="serverCertificate">用于对服务器进行身份验证的证书。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
      <summary>由服务器调用，以使用指定的证书、要求和系统默认安全协议在客户端 - 服务器连接中对服务器和客户端（可选）进行身份验证。</summary>
      <param name="serverCertificate">用于对服务器进行身份验证的 X509Certificate 。</param>
      <param name="clientCertificateRequired">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。 请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</param>
      <param name="checkCertificateRevocation">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>由服务器调用，以使用指定的证书、要求和安全协议在客户端 - 服务器连接中对服务器和客户端（可选）进行身份验证。</summary>
      <param name="serverCertificate">用于对服务器进行身份验证的 X509Certificate 。</param>
      <param name="clientCertificateRequired">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。 请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</param>
      <param name="enabledSslProtocols">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示进行身份验证所使用的协议。</param>
      <param name="checkCertificateRevocation">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Net.Security.ServerOptionsSelectionCallback,System.Object,System.Threading.CancellationToken)">
      <summary>服务器调用此方法，对客户端-服务器连接中的服务器及客户端（可选）进行身份验证以作为异步操作。 身份验证过程使用 <paramref name="optionsCallback" /> 返回的信息。</summary>
      <param name="optionsCallback">回调委托。</param>
      <param name="state">要在调用回调时传递给 <paramref name="optionsCallback" /> 的状态对象。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateSelectionCallback" /> 或 <see cref="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificate" /> 或 <see cref="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateContext" /> 为 <see langword="null" />，并且未在 <see langword="SslStream" /> 构造函数中设置 <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Net.Security.SslServerAuthenticationOptions,System.Threading.CancellationToken)">
      <summary>服务器调用此方法，对客户端-服务器连接中的服务器及客户端（可选）进行身份验证以作为异步操作。 身份验证过程使用 <paramref name="sslClientAuthenticationOptions" /> 属性包中指定的信息。</summary>
      <param name="sslServerAuthenticationOptions">SSL 连接的属性包。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateSelectionCallback" /> 或 <see cref="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificate" /> 或 <see cref="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateContext" /> 为 <see langword="null" />，并且未在 <see langword="SslStream" /> 构造函数中设置 <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sslServerAuthenticationOptions" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>服务器调用此方法，使用指定的证书对客户端-服务器连接中的服务器及客户端（可选）进行身份验证以作为异步操作。</summary>
      <param name="serverCertificate">用于对服务器进行身份验证的证书。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> 方法。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
      <summary>由服务器调用，以通过异步操作的形式使用指定的证书、要求和安全协议对客户端 - 服务器连接中的服务器和客户端（可选）进行身份验证。</summary>
      <param name="serverCertificate">用于对服务器进行身份验证的 X509Certificate 。</param>
      <param name="clientCertificateRequired">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。 请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</param>
      <param name="checkCertificateRevocation">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>由服务器调用，以通过异步操作的形式使用指定的证书、要求和安全协议对客户端 - 服务器连接中的服务器和客户端（可选）进行身份验证。</summary>
      <param name="serverCertificate">用于对服务器进行身份验证的 X509Certificate 。</param>
      <param name="clientCertificateRequired">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。 请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</param>
      <param name="enabledSslProtocols">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示进行身份验证所使用的协议。</param>
      <param name="checkCertificateRevocation">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
      <summary>客户端调用此方法，以便开始一个异步操作，对服务器及客户端（可选）进行身份验证。</summary>
      <param name="targetHost">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</param>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>由客户端调用，以使用指定的证书和系统默认安全协议开始对服务器和客户端（可选）异步进行身份验证。</summary>
      <param name="targetHost">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</param>
      <param name="clientCertificates">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 包含客户端证书。</param>
      <param name="checkCertificateRevocation">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</param>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>客户端调用此方法，以便开始一个异步操作，使用指定的证书和安全协议对服务器及客户端（可选）进行身份验证。</summary>
      <param name="targetHost">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</param>
      <param name="clientCertificates">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 包含客户端证书。</param>
      <param name="enabledSslProtocols">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示进行身份验证所使用的协议。</param>
      <param name="checkCertificateRevocation">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</param>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
      <summary>服务器调用此方法，以便开始一个异步操作，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</summary>
      <param name="serverCertificate">用于对服务器进行身份验证的 X509Certificate 。</param>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>由服务器调用，以使用指定的证书、要求和系统默认安全协议开始对服务器和客户端（可选）异步进行身份验证。</summary>
      <param name="serverCertificate">用于对服务器进行身份验证的 X509Certificate 。</param>
      <param name="clientCertificateRequired">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。 请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</param>
      <param name="checkCertificateRevocation">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</param>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>由服务器调用，以使用指定的证书、要求和安全协议开始对服务器和客户端（可选）异步进行身份验证。</summary>
      <param name="serverCertificate">用于对服务器进行身份验证的 X509Certificate 。</param>
      <param name="clientCertificateRequired">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。 请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</param>
      <param name="enabledSslProtocols">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示进行身份验证所使用的协议。</param>
      <param name="checkCertificateRevocation">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</param>
      <param name="asyncCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义对象，其中包含操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">已进行了身份验证。  
  
- 或 - 
之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。  
  
- 或 - 
身份验证已在进行中。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始一个异步读操作，此操作读取流中的数据并将其存储在指定的数组中。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</param>
      <param name="offset">
        <paramref name="buffer" /> 中从零开始的位置，从此处开始存储从此流中读取的数据。</param>
      <param name="count">要从流中读取的最大字节数。</param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 委托，该委托引用读操作完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义的对象，其中包含读操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> 小于零。

- 或 -

<paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  

- 或 - 
 <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</exception>
      <exception cref="T:System.IO.IOException">读操作失败。  
  
 - 或 -  
  
 使用了加密服务，但未能解密该数据。</exception>
      <exception cref="T:System.NotSupportedException">已存在一个正在执行的读取操作。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始一个异步写操作，此操作将指定缓冲区中的 <see cref="T:System.Byte" /> 写入到流中。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</param>
      <param name="offset">
        <paramref name="buffer" /> 中从零开始的位置，从此处开始读取要写入到流中的字节。</param>
      <param name="count">
        <see cref="T:System.Int32" /> 值，该值指定要从 <paramref name="buffer" /> 中读取的字节数。</param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 委托，它引用写操作完成时要调用的方法。</param>
      <param name="asyncState">一个用户定义的对象，其中包含写操作的相关信息。 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> 小于零。
  
- 或 - 
<paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</exception>
      <exception cref="T:System.IO.IOException">写操作失败。</exception>
      <exception cref="T:System.NotSupportedException">已存在一个正在执行的写操作。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
      <returns>一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Net.Security.SslStream" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Security.SslStream.DisposeAsync">
      <summary>异步释放 <see cref="T:System.Net.Security.SslStream" /> 使用的非托管资源和受管理资源。</summary>
      <returns>一个表示异步释放操作的任务。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <summary>结束通过以前调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 而启动的、处于挂起状态的异步服务器身份验证操作。</summary>
      <param name="asyncResult">调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 的调用创建的。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">没有处于挂起状态的服务器身份验证要完成。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <summary>结束通过以前调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 而启动的、处于挂起状态的异步客户端身份验证操作。</summary>
      <param name="asyncResult">调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 的调用创建的。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">身份验证失败，并使此对象处于不可用的状态。</exception>
      <exception cref="T:System.InvalidOperationException">没有需要完成的处于挂起状态的客户端身份验证。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
      <summary>结束通过以前调用 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步读操作。</summary>
      <param name="asyncResult">调用 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 并不是通过对 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的调用创建的。</exception>
      <exception cref="T:System.InvalidOperationException">没有处于挂起状态的读操作要完成。

- 或 -

未进行身份验证。</exception>
      <exception cref="T:System.IO.IOException">读操作失败。</exception>
      <returns>
        <see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
      <summary>结束通过以前调用 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步写操作。</summary>
      <param name="asyncResult">调用 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 并不是通过对 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的调用创建的。</exception>
      <exception cref="T:System.InvalidOperationException">没有处于挂起状态的写操作要完成。

- 或 -

未进行身份验证。</exception>
      <exception cref="T:System.IO.IOException">写操作失败。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Finalize">
      <summary>释放由 <see cref="T:System.Net.Security.SslStream" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Net.Security.SslStream.Flush">
      <summary>导致所有缓冲数据都要写入基础设备。</summary>
    </member>
    <member name="M:System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>将所有缓冲数据异步写入基础设备。</summary>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <returns>表示异步刷新操作的任务。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>读取此流中的数据并将其存储在指定的数组中。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 数组，该数组接收从此流读取的字节。</param>
      <param name="offset">
        <see cref="T:System.Int32" />，它包含 <paramref name="buffer" /> 中从零开始的位置，从此处开始存储从此流读取的数据。</param>
      <param name="count">
        <see cref="T:System.Int32" />，包含要从此流读取的最大字节数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> 小于零。
  
- 或 -

<paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  

- 或 -

 <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</exception>
      <exception cref="T:System.IO.IOException">读操作失败。 检查内部异常（如果存在）以确定失败的原因。</exception>
      <exception cref="T:System.NotSupportedException">已存在一个正在执行的读取操作。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
      <returns>
        <see cref="T:System.Int32" /> 值，该值指定读取的字节数。 如果再也没有要读取的数据，将返回 0。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>从此流中异步读取数据，并将其存储在字节数组的指定范围中。</summary>
      <param name="buffer">接收从此流读取的字节的缓冲区。</param>
      <param name="offset">
        <paramref name="buffer" /> 中从零开始的位置，从此处开始存储从此流中读取的数据。</param>
      <param name="count">要从此流中读取的最大字节数。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="count" /> 小于 0。
  
- 或 - 
 <paramref name="count" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" />。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
      <exception cref="T:System.IO.IOException">读操作失败。 检查内部异常（如果存在）以确定失败的原因。</exception>
      <exception cref="T:System.NotSupportedException">已存在一个正在执行的读取操作。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步读取操作的任务。 其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性的值包含读入 <paramref name="buffer" /> 的总字节数。 如果再也没有要读取的数据，将返回 0。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>从此流中异步读取数据，并将其存储在指定的内存范围内。</summary>
      <param name="buffer">接收从此流读取的字节的缓冲区。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
      <exception cref="T:System.IO.IOException">读操作失败。 检查内部异常（如果存在）以确定失败的原因。</exception>
      <exception cref="T:System.NotSupportedException">已存在一个正在执行的读取操作。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步读取操作的任务。 其 <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> 属性的值包含读入 <paramref name="buffer" /> 的总字节数。 如果再也没有要读取的数据，将返回 0。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.ReadByte">
      <summary>从 <see cref="T:System.Net.Security.SslStream" /> 中读取一个字节，并将流内的位置向前提升一个字节，或者如果已到达流结尾，则返回 -1。</summary>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
      <exception cref="T:System.IO.IOException">读操作失败。 检查内部异常（如果存在）以确定失败的原因。</exception>
      <exception cref="T:System.NotSupportedException">已存在一个正在执行的读取操作。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>强制转换为 <see cref="T:System.Int32" /> 的无符号字节，如果到达流的末尾，则为 -1。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="offset">忽略此值。</param>
      <param name="origin">忽略此值。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Net.Security.SslStream" /> 对象不支持查找。</exception>
      <returns>总是引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.SetLength(System.Int64)">
      <summary>设置基础流的长度。</summary>
      <param name="value">
        <see cref="T:System.Int64" /> 值，该值指定流的长度。</param>
    </member>
    <member name="M:System.Net.Security.SslStream.ShutdownAsync">
      <summary>关闭此 SslStream。</summary>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[])">
      <summary>将指定的数据写入此流。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">写操作失败。</exception>
      <exception cref="T:System.NotSupportedException">已存在一个正在执行的写操作。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>使用指定的缓冲区和偏移将指定数目的 <see cref="T:System.Byte" /> 写入基础流。</summary>
      <param name="buffer">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</param>
      <param name="offset">
        <see cref="T:System.Int32" />，它包含 <paramref name="buffer" /> 中从零开始的位置，将从此位置开始读取要写入流中的字节。</param>
      <param name="count">
        <see cref="T:System.Int32" />，包含要从 <paramref name="buffer" /> 中读取的字节数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> 小于零。

- 或 -

<paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。  
  
- 或 - 
 <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</exception>
      <exception cref="T:System.IO.IOException">写操作失败。</exception>
      <exception cref="T:System.NotSupportedException">已存在一个正在执行的写操作。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>从字节数组的指定范围将数据异步写入基础流。</summary>
      <param name="buffer">要写入基础流中的数据。</param>
      <param name="offset">
        <paramref name="buffer" /> 中开始写入数据的位置。</param>
      <param name="count">要写入基础流的字节数。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。  
  
- 或 - 
 <paramref name="count" /> 小于 0。
  
- 或 - 
 <paramref name="count" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" />。</exception>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
      <exception cref="T:System.IO.IOException">写操作失败。</exception>
      <exception cref="T:System.NotSupportedException">已存在一个正在执行的写操作。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步写入操作的任务。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>将数据从只读字节内存范围异步写入基础流。</summary>
      <param name="buffer">要写入基础流中的数据。</param>
      <param name="cancellationToken">要监视取消请求的标记。</param>
      <exception cref="T:System.InvalidOperationException">未进行身份验证。</exception>
      <exception cref="T:System.IO.IOException">写操作失败。</exception>
      <exception cref="T:System.NotSupportedException">已存在一个正在执行的写操作。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已关闭。</exception>
      <returns>表示异步写入操作的任务。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanRead">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可读。</summary>
      <returns>如果已进行身份验证且基础流可读，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanSeek">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可查找。</summary>
      <returns>此属性始终返回 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanTimeout">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否支持超时。</summary>
      <returns>如果基础流支持超时，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanWrite">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可写。</summary>
      <returns>如果已进行身份验证且基础流可写，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示在证书验证过程中是否检查证书吊销列表。</summary>
      <returns>如果检查证书吊销列表，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherAlgorithm">
      <summary>获取一个值，该值确定此 <see cref="T:System.Net.Security.SslStream" /> 使用的批量加密算法。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> 属性是在身份验证过程未完成时访问的或者身份验证过程失败。</exception>
      <returns>一个值，该值标识此使用的批量加密算法 <see cref="T:System.Net.Security.SslStream" /> 。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherStrength">
      <summary>获取一个值，该值确定此 <see cref="T:System.Net.Security.SslStream" /> 使用的密码算法的强度。</summary>
      <returns>
        <see cref="T:System.Int32" /> 值，该值指定算法的强度（以位为单位）。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.HashAlgorithm">
      <summary>获取用于生成消息身份验证代码 (MAC) 的算法。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> 属性是在身份验证过程未完成时访问的或者身份验证过程失败。</exception>
      <returns>用于 (Mac) 生成消息身份验证代码的算法。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.HashStrength">
      <summary>获取一个值，该值标识此实例使用的哈希算法的强度。</summary>
      <returns>一个 <see cref="T:System.Int32" /> 值，指定 <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 算法的强度（以位为单位）。 有效值为 128 或 160。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsAuthenticated">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示身份验证是否成功。</summary>
      <returns>如果身份验证成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsEncrypted">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.SslStream" /> 是否使用数据加密。</summary>
      <returns>如果在通过网络传输数据前将其加密，并在数据到达远程终结点后将其解密，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsMutuallyAuthenticated">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示服务器和客户端是否均已进行身份验证。</summary>
      <returns>如果服务器已经过身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsServer">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.SslStream" /> 使用的连接的本地端是否作为服务器进行了身份验证。</summary>
      <returns>如果本地终结点作为经过身份验证的连接的服务器端成功地进行了身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsSigned">
      <summary>获取一个 <see cref="T:System.Boolean" /> 值，该值指示使用此流发送的数据是否进行签名。</summary>
      <returns>如果在传输数据前对其签名，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
      <summary>获取此 <see cref="T:System.Net.Security.SslStream" /> 使用的密钥交换算法。</summary>
      <returns>一个 <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 值。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeStrength">
      <summary>获取一个值，该值指示此实例使用的密钥交换算法的强度。</summary>
      <returns>一个 <see cref="T:System.Int32" /> 值，指定 <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 算法的强度（以位为单位）。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.Length">
      <summary>获取基础流的长度。</summary>
      <exception cref="T:System.NotSupportedException">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</exception>
      <returns>基础流的长度。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.LocalCertificate">
      <summary>获取用于对本地终结点进行身份验证的证书。</summary>
      <exception cref="T:System.InvalidOperationException">身份验证失败或没有进行身份验证。</exception>
      <returns>一个 X509Certificate 对象，它表示为身份验证提供的证书；或者，如果没有提供证书，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.NegotiatedApplicationProtocol">
      <summary>TLS 握手中的协商应用程序协议。</summary>
    </member>
    <member name="P:System.Net.Security.SslStream.NegotiatedCipherSuite">
      <summary>获取此连接的已协商密码套件。</summary>
      <exception cref="T:System.InvalidOperationException">该属性是在身份验证过程未完成时访问的或者身份验证过程失败。</exception>
      <returns>枚举值之一，用于标识在此连接上协商的密码套件。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.Position">
      <summary>获取或设置基础流中的当前位置。</summary>
      <exception cref="T:System.NotSupportedException">不支持设置此属性。  
  
- 或 - 
当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</exception>
      <returns>基础流中的当前位置。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.ReadTimeout">
      <summary>获取或设置读取操作阻止等待数据的时间（以毫秒为单位）。</summary>
      <returns>同步读取操作失败前经过的时间（以毫秒为单位）。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.RemoteCertificate">
      <summary>获取用于对远程终结点进行身份验证的证书。</summary>
      <exception cref="T:System.InvalidOperationException">身份验证失败或没有进行身份验证。</exception>
      <returns>一个 X509Certificate 对象，它表示为身份验证提供的证书；或者，如果没有提供证书，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.SslProtocol">
      <summary>获取一个值，该值指示用于对此连接进行身份验证的安全协议。</summary>
      <returns>
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示进行身份验证所使用的协议。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.TargetHostName">
      <summary>获取客户端正在尝试连接到的服务器的名称。 该名称用于服务器证书验证。 它可以是 DNS 名称，也可以是 IP 地址。</summary>
      <returns>客户端正在尝试连接到的服务器的名称。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.TransportContext">
      <summary>获取用于采用扩展保护的身份验证的 <see cref="T:System.Net.TransportContext" />。</summary>
      <returns>一个 <see cref="T:System.Net.TransportContext" /> 对象，它包含用于扩展保护的通道绑定令牌 (CBT)。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.WriteTimeout">
      <summary>获取或设置写操作阻止等待数据的时间。</summary>
      <returns>同步写入操作失败前经过的时间。</returns>
    </member>
    <member name="T:System.Net.Security.SslStreamCertificateContext">
      <summary>表示用于生成证书链的一组证书。</summary>
    </member>
    <member name="M:System.Net.Security.SslStreamCertificateContext.Create(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>尝试根据提供的证书生成证书链。</summary>
      <param name="target">服务器证书。</param>
      <param name="additionalCertificates">用于生成证书链的补充证书。</param>
      <param name="offline">
        <see langword="true" /> 指示丢失的证书可以从网络下载；<see langword="false" /> 指示应仅在可用的 X509Certificate 存储中搜索缺少的证书。</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="target" /> 没有关联的私钥。</exception>
      <returns>包含新创建的证书链的证书上下文。</returns>
    </member>
    <member name="T:System.Net.Security.TlsCipherSuite">
      <summary>表示 TLS（以前称为 SSL）协议的密码套件值。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_AES_128_CCM_8_SHA256">
      <summary>表示 TLS_AES_128_CCM_8_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_AES_128_CCM_SHA256">
      <summary>表示 TLS_AES_128_CCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_AES_128_GCM_SHA256">
      <summary>表示 TLS_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_AES_256_GCM_SHA384">
      <summary>表示 TLS_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_CHACHA20_POLY1305_SHA256">
      <summary>表示 TLS_CHACHA20_POLY1305_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA">
      <summary>表示 TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_EXPORT_WITH_RC4_40_MD5">
      <summary>表示 TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_DH_anon_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_DH_anon_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_DH_anon_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_DH_anon_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_DH_anon_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_256_CBC_SHA256">
      <summary>表示 TLS_DH_anon_WITH_AES_256_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_DH_anon_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_ARIA_128_CBC_SHA256">
      <summary>表示 TLS_DH_anon_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_ARIA_128_GCM_SHA256">
      <summary>表示 TLS_DH_anon_WITH_ARIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_ARIA_256_CBC_SHA384">
      <summary>表示 TLS_DH_anon_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_ARIA_256_GCM_SHA384">
      <summary>表示 TLS_DH_anon_WITH_ARIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA">
      <summary>表示 TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>表示 TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA">
      <summary>表示 TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256">
      <summary>表示 TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>表示 TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_DES_CBC_SHA">
      <summary>表示 TLS_DH_anon_WITH_DES_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_RC4_128_MD5">
      <summary>表示 TLS_DH_anon_WITH_RC4_128_MD5 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_SEED_CBC_SHA">
      <summary>表示 TLS_DH_anon_WITH_SEED_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA">
      <summary>表示 TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_DH_DSS_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_DH_DSS_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_DH_DSS_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_DH_DSS_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_256_CBC_SHA256">
      <summary>表示 TLS_DH_DSS_WITH_AES_256_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_DH_DSS_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256">
      <summary>表示 TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256">
      <summary>表示 TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384">
      <summary>表示 TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384">
      <summary>表示 TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA">
      <summary>表示 TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>表示 TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA">
      <summary>表示 TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256">
      <summary>表示 TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>表示 TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_DES_CBC_SHA">
      <summary>表示 TLS_DH_DSS_WITH_DES_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_SEED_CBC_SHA">
      <summary>表示 TLS_DH_DSS_WITH_SEED_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA">
      <summary>表示 TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_DH_RSA_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_DH_RSA_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_DH_RSA_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_DH_RSA_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_256_CBC_SHA256">
      <summary>表示 TLS_DH_RSA_WITH_AES_256_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_DH_RSA_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary>表示 TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary>表示 TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary>表示 TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary>表示 TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA">
      <summary>表示 TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>表示 TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA">
      <summary>表示 TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256">
      <summary>表示 TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>表示 TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_DES_CBC_SHA">
      <summary>表示 TLS_DH_RSA_WITH_DES_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_SEED_CBC_SHA">
      <summary>表示 TLS_DH_RSA_WITH_SEED_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA">
      <summary>表示 TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_DHE_DSS_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_DHE_DSS_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_256_CBC_SHA256">
      <summary>表示 TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256">
      <summary>表示 TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256">
      <summary>表示 TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384">
      <summary>表示 TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384">
      <summary>表示 TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA">
      <summary>表示 TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>表示 TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA">
      <summary>表示 TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256">
      <summary>表示 TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>表示 TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_DES_CBC_SHA">
      <summary>表示 TLS_DHE_DSS_WITH_DES_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_SEED_CBC_SHA">
      <summary>表示 TLS_DHE_DSS_WITH_SEED_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_DHE_PSK_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_128_CCM">
      <summary>表示 TLS_DHE_PSK_WITH_AES_128_CCM 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_DHE_PSK_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_256_CBC_SHA384">
      <summary>表示 TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_256_CCM">
      <summary>表示 TLS_DHE_PSK_WITH_AES_256_CCM 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256">
      <summary>表示 TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256">
      <summary>表示 TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384">
      <summary>表示 TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384">
      <summary>表示 TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>表示 TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>表示 TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>表示 TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256">
      <summary>表示 TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_NULL_SHA">
      <summary>表示 TLS_DHE_PSK_WITH_NULL_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_NULL_SHA256">
      <summary>表示 TLS_DHE_PSK_WITH_NULL_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_NULL_SHA384">
      <summary>表示 TLS_DHE_PSK_WITH_NULL_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_RC4_128_SHA">
      <summary>表示 TLS_DHE_PSK_WITH_RC4_128_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA">
      <summary>表示 TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_DHE_RSA_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_CCM">
      <summary>表示 TLS_DHE_RSA_WITH_AES_128_CCM 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_CCM_8">
      <summary>表示 TLS_DHE_RSA_WITH_AES_128_CCM_8 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_DHE_RSA_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_CBC_SHA256">
      <summary>表示 TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_CCM">
      <summary>表示 TLS_DHE_RSA_WITH_AES_256_CCM 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_CCM_8">
      <summary>表示 TLS_DHE_RSA_WITH_AES_256_CCM_8 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary>表示 TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary>表示 TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary>表示 TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary>表示 TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA">
      <summary>表示 TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>表示 TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA">
      <summary>表示 TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256">
      <summary>表示 TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>表示 TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256">
      <summary>表示 TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_DES_CBC_SHA">
      <summary>表示 TLS_DHE_RSA_WITH_DES_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_SEED_CBC_SHA">
      <summary>表示 TLS_DHE_RSA_WITH_SEED_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECCPWD_WITH_AES_128_CCM_SHA256">
      <summary>表示 TLS_ECCPWD_WITH_AES_128_CCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECCPWD_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_ECCPWD_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECCPWD_WITH_AES_256_CCM_SHA384">
      <summary>表示 TLS_ECCPWD_WITH_AES_256_CCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECCPWD_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_ECCPWD_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_ECDH_anon_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_ECDH_anon_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_NULL_SHA">
      <summary>表示 TLS_ECDH_anon_WITH_NULL_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_RC4_128_SHA">
      <summary>表示 TLS_ECDH_anon_WITH_RC4_128_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384">
      <summary>表示TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256">
      <summary>表示 TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256">
      <summary>表示 TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384">
      <summary>表示 TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384">
      <summary>表示 TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>表示 TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>表示 TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>表示 TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_NULL_SHA">
      <summary>表示 TLS_ECDH_ECDSA_WITH_NULL_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_RC4_128_SHA">
      <summary>表示 TLS_ECDH_ECDSA_WITH_RC4_128_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_ECDH_RSA_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_ECDH_RSA_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384">
      <summary>表示 TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary>表示 TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary>表示 TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary>表示 TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary>表示 TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>表示 TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>表示 TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>表示 TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_NULL_SHA">
      <summary>表示 TLS_ECDH_RSA_WITH_NULL_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_RC4_128_SHA">
      <summary>表示 TLS_ECDH_RSA_WITH_RC4_128_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CCM">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_AES_128_CCM 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CCM">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_AES_256_CCM 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256">
      <summary>表示TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_NULL_SHA">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_NULL_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_RC4_128_SHA">
      <summary>表示 TLS_ECDHE_ECDSA_WITH_RC4_128_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256">
      <summary>表示 TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256">
      <summary>表示 TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384">
      <summary>表示 TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256">
      <summary>表示 TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384">
      <summary>表示TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>表示 TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256">
      <summary>表示 TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_NULL_SHA">
      <summary>表示 TLS_ECDHE_PSK_WITH_NULL_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_NULL_SHA256">
      <summary>表示 TLS_ECDHE_PSK_WITH_NULL_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_NULL_SHA384">
      <summary>表示 TLS_ECDHE_PSK_WITH_NULL_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_RC4_128_SHA">
      <summary>表示 TLS_ECDHE_PSK_WITH_RC4_128_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384">
      <summary>表示 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary>表示 TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary>表示 TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary>表示 TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary>表示 TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>表示 TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>表示 TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>表示TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256">
      <summary>表示 TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_NULL_SHA">
      <summary>表示 TLS_ECDHE_RSA_WITH_NULL_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_RC4_128_SHA">
      <summary>表示 TLS_ECDHE_RSA_WITH_RC4_128_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5">
      <summary>表示 TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA">
      <summary>表示 TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5">
      <summary>表示 TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA">
      <summary>表示 TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_RC4_40_MD5">
      <summary>表示 TLS_KRB5_EXPORT_WITH_RC4_40_MD5 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_RC4_40_SHA">
      <summary>表示 TLS_KRB5_EXPORT_WITH_RC4_40_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_3DES_EDE_CBC_MD5">
      <summary>表示 TLS_KRB5_WITH_3DES_EDE_CBC_MD5 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_KRB5_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_DES_CBC_MD5">
      <summary>表示 TLS_KRB5_WITH_DES_CBC_MD5 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_DES_CBC_SHA">
      <summary>表示 TLS_KRB5_WITH_DES_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_IDEA_CBC_MD5">
      <summary>表示 TLS_KRB5_WITH_IDEA_CBC_MD5 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_IDEA_CBC_SHA">
      <summary>表示 TLS_KRB5_WITH_IDEA_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_RC4_128_MD5">
      <summary>表示 TLS_KRB5_WITH_RC4_128_MD5 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_RC4_128_SHA">
      <summary>表示 TLS_KRB5_WITH_RC4_128_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_NULL_WITH_NULL_NULL">
      <summary>表示 TLS_NULL_WITH_NULL_NULL 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_DHE_WITH_AES_128_CCM_8">
      <summary>表示 TLS_PSK_DHE_WITH_AES_128_CCM_8 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_DHE_WITH_AES_256_CCM_8">
      <summary>表示 TLS_PSK_DHE_WITH_AES_256_CCM_8 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_PSK_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_PSK_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_PSK_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_CCM">
      <summary>表示 TLS_PSK_WITH_AES_128_CCM 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_CCM_8">
      <summary>表示 TLS_PSK_WITH_AES_128_CCM_8 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_PSK_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_PSK_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_CBC_SHA384">
      <summary>表示 TLS_PSK_WITH_AES_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_CCM">
      <summary>表示 TLS_PSK_WITH_AES_256_CCM 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_CCM_8">
      <summary>表示 TLS_PSK_WITH_AES_256_CCM_8 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_PSK_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_ARIA_128_CBC_SHA256">
      <summary>表示 TLS_PSK_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_ARIA_128_GCM_SHA256">
      <summary>表示 TLS_PSK_WITH_ARIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_ARIA_256_CBC_SHA384">
      <summary>表示 TLS_PSK_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_ARIA_256_GCM_SHA384">
      <summary>表示 TLS_PSK_WITH_ARIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>表示 TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>表示 TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>表示 TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CHACHA20_POLY1305_SHA256">
      <summary>表示 TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_NULL_SHA">
      <summary>表示 TLS_PSK_WITH_NULL_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_NULL_SHA256">
      <summary>表示 TLS_PSK_WITH_NULL_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_NULL_SHA384">
      <summary>表示 TLS_PSK_WITH_NULL_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_RC4_128_SHA">
      <summary>表示 TLS_PSK_WITH_RC4_128_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_EXPORT_WITH_DES40_CBC_SHA">
      <summary>表示 TLS_RSA_EXPORT_WITH_DES40_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5">
      <summary>表示 TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_EXPORT_WITH_RC4_40_MD5">
      <summary>表示 TLS_RSA_EXPORT_WITH_RC4_40_MD5 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_RSA_PSK_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_RSA_PSK_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_256_CBC_SHA384">
      <summary>表示 TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256">
      <summary>表示 TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256">
      <summary>表示 TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384">
      <summary>表示 TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384">
      <summary>表示 TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>表示 TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384">
      <summary>表示 TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>表示 TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256">
      <summary>表示 TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_NULL_SHA">
      <summary>表示 TLS_RSA_PSK_WITH_NULL_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_NULL_SHA256">
      <summary>表示 TLS_RSA_PSK_WITH_NULL_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_NULL_SHA384">
      <summary>表示 TLS_RSA_PSK_WITH_NULL_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_RC4_128_SHA">
      <summary>表示 TLS_RSA_PSK_WITH_RC4_128_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_RSA_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_RSA_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_CBC_SHA256">
      <summary>表示 TLS_RSA_WITH_AES_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_CCM">
      <summary>表示 TLS_RSA_WITH_AES_128_CCM 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_CCM_8">
      <summary>表示 TLS_RSA_WITH_AES_128_CCM_8 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_GCM_SHA256">
      <summary>表示 TLS_RSA_WITH_AES_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_RSA_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_CBC_SHA256">
      <summary>表示 TLS_RSA_WITH_AES_256_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_CCM">
      <summary>表示 TLS_RSA_WITH_AES_256_CCM 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_CCM_8">
      <summary>表示 TLS_RSA_WITH_AES_256_CCM_8 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_GCM_SHA384">
      <summary>表示 TLS_RSA_WITH_AES_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary>表示 TLS_RSA_WITH_ARIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary>表示 TLS_RSA_WITH_ARIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary>表示 TLS_RSA_WITH_ARIA_256_CBC_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary>表示 TLS_RSA_WITH_ARIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_128_CBC_SHA">
      <summary>表示 TLS_RSA_WITH_CAMELLIA_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary>表示 TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary>表示 TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_256_CBC_SHA">
      <summary>表示 TLS_RSA_WITH_CAMELLIA_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256">
      <summary>表示 TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary>表示 TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_DES_CBC_SHA">
      <summary>表示 TLS_RSA_WITH_DES_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_IDEA_CBC_SHA">
      <summary>表示 TLS_RSA_WITH_IDEA_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_NULL_MD5">
      <summary>表示 TLS_RSA_WITH_NULL_MD5 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_NULL_SHA">
      <summary>表示 TLS_RSA_WITH_NULL_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_NULL_SHA256">
      <summary>表示 TLS_RSA_WITH_NULL_SHA256 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_RC4_128_MD5">
      <summary>表示 TLS_RSA_WITH_RC4_128_MD5 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_RC4_128_SHA">
      <summary>表示 TLS_RSA_WITH_RC4_128_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_SEED_CBC_SHA">
      <summary>表示 TLS_RSA_WITH_SEED_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA">
      <summary>表示 TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_WITH_AES_128_CBC_SHA">
      <summary>表示 TLS_SRP_SHA_WITH_AES_128_CBC_SHA 密码套件。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_WITH_AES_256_CBC_SHA">
      <summary>表示 TLS_SRP_SHA_WITH_AES_256_CBC_SHA 密码套件。</summary>
    </member>
    <member name="T:System.Security.Authentication.AuthenticationException">
      <summary>当身份验证流的身份验证失败时引发的异常。</summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor">
      <summary>不使用任何消息初始化 <see cref="T:System.Security.Authentication.AuthenticationException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>从 <see cref="T:System.Security.Authentication.AuthenticationException" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的指定实例初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的新实例。</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例，包含反序列化新的 <see cref="T:System.Security.Authentication.AuthenticationException" /> 实例所需的信息。</param>
      <param name="streamingContext">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 实例。</param>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String)">
      <summary>使用指定的消息初始化 <see cref="T:System.Security.Authentication.AuthenticationException" /> 类的新实例。</summary>
      <param name="message">描述身份验证失败的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String,System.Exception)">
      <summary>使用指定的消息和内部异常初始化 <see cref="T:System.Security.Authentication.AuthenticationException" /> 类的新实例。</summary>
      <param name="message">描述身份验证失败的 <see cref="T:System.String" />。</param>
      <param name="innerException">导致当前异常的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 类表示服务器用来验证传入客户端连接的扩展保护策略。</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>从 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 对象初始化 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的新实例，该对象包含用于填充 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 的必需数据。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例，包含序列化新的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 实例所需的信息。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，包含与新的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 实例关联的序列化流的源。</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)">
      <summary>初始化 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 类的新实例，该类指定应何时强制实施扩展保护策略。</summary>
      <param name="policyEnforcement">
        <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 值，该值指示应何时强制实施扩展保护策略。</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)">
      <summary>初始化 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 类的新实例，该类指定应何时强制实施扩展保护策略以及指定要使用的通道绑定令牌 (CBT)。</summary>
      <param name="policyEnforcement">
        <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 值，该值指示应何时强制实施扩展保护策略。</param>
      <param name="customChannelBinding">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />，它包含用于验证的自定义通道绑定。</param>
      <exception cref="T:System.ArgumentException">将 <paramref name="policyEnforcement" /> 指定为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customChannelBinding" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)">
      <summary>初始化 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 类的新实例，该类指定强制实施扩展保护策略的时间、策略强制实施的保护类型以及用于与客户端的 SPN 进行匹配的自定义服务提供程序名称 (SPN) 列表。</summary>
      <param name="policyEnforcement">
        <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 值，该值指示应何时强制实施扩展保护策略。</param>
      <param name="protectionScenario">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 值，该值指示策略强制实施的保护类型。</param>
      <param name="customServiceNames">
        <see cref="T:System.Collections.ICollection" /> 包含用于与客户端的 SPN 相匹配的自定义 SPN 列表。</param>
      <exception cref="T:System.ArgumentException">将 <paramref name="policyEnforcement" /> 指定为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customServiceNames" /> 为 <see langword="null" /> 或空列表。</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)">
      <summary>初始化 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 类的新实例，该类指定强制实施扩展保护策略的时间、策略强制实施的保护类型以及用于与客户端的 SPN 进行匹配的自定义服务提供程序名称 (SPN) 列表。</summary>
      <param name="policyEnforcement">
        <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 值，该值指示应何时强制实施扩展保护策略。</param>
      <param name="protectionScenario">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 值，该值指示策略强制实施的保护类型。</param>
      <param name="customServiceNames">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 包含用于与客户端的 SPN 相匹配的自定义 SPN 列表。</param>
      <exception cref="T:System.ArgumentException">将 <paramref name="policyEnforcement" /> 指定为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customServiceNames" /> 为 <see langword="null" /> 或空列表。</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象所必需的数据来填充 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 对象。</summary>
      <param name="info">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，它用于保存 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 对象的序列化数据。</param>
      <param name="context">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含与新的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 关联的序列化流的目标。</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString">
      <summary>获取扩展保护策略实例的字符串表示形式。</summary>
      <returns>一个 <see cref="T:System.String" /> 实例，它包含 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 实例的表示形式。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding">
      <summary>获取用于验证的自定义通道绑定令牌 (CBT)。</summary>
      <returns>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />，它包含用于验证的自定义通道绑定。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames">
      <summary>获取用于与客户端的 SPN 相匹配的自定义服务提供程序名称 (SPN) 列表。</summary>
      <returns>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 包含用于与客户端的 SPN 相匹配的自定义 SPN 列表。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection">
      <summary>指示操作系统是否支持带扩展保护的集成 Windows 身份验证。</summary>
      <returns>如果操作系统支持带扩展保护的集成 Windows 身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement">
      <summary>获取应强制实施扩展保护策略的时间。</summary>
      <returns>
        <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 值，该值指示应何时强制实施扩展保护策略。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario">
      <summary>获取扩展保护策略强制实施的保护类型。</summary>
      <returns>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 值，该值指示策略强制实施的保护类型。</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 枚举指定应何时强制实施 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always">
      <summary>总是强制实施 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。 不支持扩展保护的客户端无法进行身份验证。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never">
      <summary>绝不强制实施 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />，并禁用扩展保护。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.WhenSupported">
      <summary>仅在客户端和服务器支持扩展保护时强制实施 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 枚举指定此策略强制实施的保护方案。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected">
      <summary>此传输将在安全保护方案和标准保护方案之间进行选择，具体取决于所使用的通道的类型。 对于安全保护，将在安全通道中包装集成 Windows 身份验证，并包含无需执行服务提供程序名称 (SPN) 验证的精确匹配的通道绑定令牌。 对于标准保护，可以选择在带可选通道绑定令牌的安全通道中包装集成 Windows 身份验证，但必须执行 SPN 验证。 因此，如果请求是通过安全通道传入的，则检查通道绑定令牌 (CBT)；否则检查 SPN。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy">
      <summary>在由受信任的代理终结的安全通道中包装集成 Windows 身份验证，并且包含需要 SPN 验证的通道绑定令牌。 这要求存在 CBT，但在检查 SPN 时不会检查 CBT。</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 类是服务主体名称的只读集合。</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.#ctor(System.Collections.ICollection)">
      <summary>基于现有的 <see cref="T:System.Collections.ICollection" />，初始化 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 类新的只读实例。</summary>
      <param name="items">
        <see cref="T:System.Collections.ICollection" /> 类的实例，其中包含要用于初始化类的服务名称的指定值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> 为空。</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Contains(System.String)">
      <summary>返回一个值，该值指示指定字符串是否出现在此 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 实例中。</summary>
      <param name="searchServiceName">要搜寻的字符串。</param>
      <returns>返回 <see cref="T:System.Boolean" />。  
  
 如果参数 <paramref name="searchServiceName" /> 出现在此 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 实例中，则为 <see langword="true" />； 否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.Collections.IEnumerable)">
      <summary>将当前的 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 与指定的值合并以创建一个包含联合的新 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />。</summary>
      <param name="serviceNames">
        <see cref="T:System.Collections.IEnumerable" /> 类的一个实例，其中包含要合并的服务名称的指定值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceNames" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serviceNames" /> 为空。</exception>
      <returns>包含与指定值合并的现有 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 实例的联合的新 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 实例。</returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.String)">
      <summary>将当前的 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 与指定的值合并以创建一个包含联合的新 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />。</summary>
      <param name="serviceName">一个字符串，它包含要用于初始化该类的服务名称的指定值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceNames" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serviceNames" /> 为空。</exception>
      <returns>包含与指定值合并的现有 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 实例的联合的新 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 实例。</returns>
    </member>
    <member name="T:System.Security.Authentication.InvalidCredentialException">
      <summary>当身份验证流的身份验证失败并且不能重试时引发的异常。</summary>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor">
      <summary>不使用任何消息初始化 <see cref="T:System.Security.Authentication.InvalidCredentialException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>从 <see cref="T:System.Security.Authentication.InvalidCredentialException" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的指定实例初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的新实例。</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例，包含反序列化新的 <see cref="T:System.Security.Authentication.InvalidCredentialException" /> 实例所需的信息。</param>
      <param name="streamingContext">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 实例。</param>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.String)">
      <summary>使用指定的消息初始化 <see cref="T:System.Security.Authentication.InvalidCredentialException" /> 类的新实例。</summary>
      <param name="message">描述身份验证失败的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.String,System.Exception)">
      <summary>使用指定的消息和内部异常初始化 <see cref="T:System.Security.Authentication.InvalidCredentialException" /> 类的新实例。</summary>
      <param name="message">描述身份验证失败的 <see cref="T:System.String" />。</param>
      <param name="innerException">导致当前异常的 <see cref="T:System.Exception" />。</param>
    </member>
  </members>
</doc>