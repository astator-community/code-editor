<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets.Client</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ClientWebSocket">
      <summary>提供用于连接到 WebSocket 服务的客户端。</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.#ctor">
      <summary>创建 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 类的实例。</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Abort">
      <summary>中止连接并取消任何挂起的 IO 操作。</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>关闭作为异步操作的 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 实例。</summary>
      <param name="closeStatus">WebSocket 关闭状态。</param>
      <param name="statusDescription">关闭状态的说明。</param>
      <param name="cancellationToken">一个取消标记，用于传播应取消此操作的通知。</param>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>关闭作为异步操作的 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 实例的输出。</summary>
      <param name="closeStatus">WebSocket 关闭状态。</param>
      <param name="statusDescription">关闭状态的说明。</param>
      <param name="cancellationToken">一个取消标记，用于传播应取消此操作的通知。</param>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>连接到 WebSocket 服务器以作为异步操作。</summary>
      <param name="uri">要连接到的 WebSocket 服务器的 URI。</param>
      <param name="cancellationToken">用于传播应取消操作的通知的取消标记。</param>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Dispose">
      <summary>释放 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 实例使用的非托管资源。</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>将 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 上的数据作为异步操作进行接收。</summary>
      <param name="buffer">要接收响应的缓冲区。</param>
      <param name="cancellationToken">可用于传播应取消此操作的通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException">未连接 <see cref="T:System.Net.WebSockets.ClientWebSocket" />。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>将 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 上的数据作为异步操作进行接收。</summary>
      <param name="buffer">要接收响应的内存区域。</param>
      <param name="cancellationToken">可用于传播应取消此操作的通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException">未连接 <see cref="T:System.Net.WebSockets.ClientWebSocket" />。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>以异步操作方式，发送 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 上的数据。</summary>
      <param name="buffer">包含要发送的消息的缓冲区。</param>
      <param name="messageType">指定缓冲区是明文格式还是二进制格式的一个枚举值。</param>
      <param name="endOfMessage">要指示这是最终异步发送，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="cancellationToken">可用于传播应取消此操作的通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException">未连接 <see cref="T:System.Net.WebSockets.ClientWebSocket" />。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>以异步操作方式，从只读字节内存范围发送 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 上的数据。</summary>
      <param name="buffer">包含要发送的消息的内存区域。</param>
      <param name="messageType">指定缓冲区是明文格式还是二进制格式的一个枚举值。</param>
      <param name="endOfMessage">要指示这是最终异步发送，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="cancellationToken">可用于传播应取消此操作的通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException">未连接 <see cref="T:System.Net.WebSockets.ClientWebSocket" />。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 已关闭。</exception>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatus">
      <summary>获取在 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 实例上启动关闭握手的原因。</summary>
      <returns>启动关闭握手的原因。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription">
      <summary>获取对关闭 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 实例的原因的描述。</summary>
      <returns>对关闭 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 实例的原因的描述。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.Options">
      <summary>获取 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 实例的 WebSocket 选项。</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 实例的 WebSocket 选项。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.State">
      <summary>获取 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 实例的 WebSocket 状态。</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 实例的 WebSocket 状态。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.SubProtocol">
      <summary>获取 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 实例支持的 WebSocket 子协议。</summary>
      <returns>支持的 WebSocket 子协议。</returns>
    </member>
    <member name="T:System.Net.WebSockets.ClientWebSocketOptions">
      <summary>要与 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 对象结合使用的选项。</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)">
      <summary>添加 WebSocket 连接握手期间协商的子协议。</summary>
      <param name="subProtocol">要添加的 WebSocket 子协议。</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)">
      <summary>设置客户端缓冲区参数。</summary>
      <param name="receiveBufferSize">客户端接收缓冲区的大小（以字节为单位）。</param>
      <param name="sendBufferSize">客户端发送缓冲区的大小（以字节为单位）。</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})">
      <summary>设置客户端缓冲区参数。</summary>
      <param name="receiveBufferSize">客户端接收缓冲区的大小（以字节为单位）。</param>
      <param name="sendBufferSize">客户端发送缓冲区的大小（以字节为单位）。</param>
      <param name="buffer">要使用接收缓冲区。</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)">
      <summary>创建 HTTP 请求头及其值。</summary>
      <param name="headerName">HTTP 头的名称。</param>
      <param name="headerValue">HTTP 头的值。</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates">
      <summary>获取或设置客户端证书的集合。</summary>
      <returns>客户端证书的集合。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Cookies">
      <summary>获取或设置与此请求关联的 Cookie。</summary>
      <returns>与请求关联的 Cookie。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Credentials">
      <summary>获取或设置客户端的凭据信息。</summary>
      <returns>客户端的凭据信息。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval">
      <summary>获取或设置 WebSocket 协议保持活动状态的间隔。</summary>
      <returns>WebSocket 协议保持活动状态的间隔。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Proxy">
      <summary>获取或设置用于 WebSocket 请求的代理。</summary>
      <returns>用于 WebSocket 请求的代理。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.RemoteCertificateValidationCallback">
      <summary>获取或设置用于验证服务器证书的回调。</summary>
      <returns>用于验证服务器证书的回调函数。</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials">
      <summary>获取或设置一个 <see cref="T:System.Boolean" /> 值，它指示是否应在 WebSocket 握手期间使用默认凭据。</summary>
      <returns>
        <see langword="true" /> 如果应在 WebSocket 握手期间使用默认凭据，则为;否则为 <see langword="false" /> 。 默认值为 <see langword="true" />。</returns>
    </member>
  </members>
</doc>