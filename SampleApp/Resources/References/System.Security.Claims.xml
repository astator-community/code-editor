<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Claims</name>
  </assembly>
  <members>
    <member name="T:System.Security.Claims.Claim">
      <summary>表示声明。</summary>
    </member>
    <member name="M:System.Security.Claims.Claim.#ctor(System.IO.BinaryReader)">
      <summary>用指定的 <see cref="T:System.IO.BinaryReader" /> 初始化 <see cref="T:System.Security.Claims.Claim" /> 的实例。</summary>
      <param name="reader">指向 <see cref="T:System.Security.Claims.Claim" /> 的 <see cref="T:System.IO.BinaryReader" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.Claim.#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)">
      <summary>用指定的读取器和使用者初始化 <see cref="T:System.Security.Claims.Claim" /> 类的新实例。</summary>
      <param name="reader">二进制读取器。</param>
      <param name="subject">此声明说明的主题。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim)">
      <summary>初始化 <see cref="T:System.Security.Claims.Claim" /> 类的新实例。</summary>
      <param name="other">安全声明。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)">
      <summary>用指定的安全声明和使用者初始化 <see cref="T:System.Security.Claims.Claim" /> 类的新实例。</summary>
      <param name="other">安全声明。</param>
      <param name="subject">此声明说明的主题。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.Claim.#ctor(System.String,System.String)">
      <summary>使用指定的声明类型和值初始化 <see cref="T:System.Security.Claims.Claim" /> 类的新实例。</summary>
      <param name="type">声明类型。</param>
      <param name="value">声明值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.Claim.#ctor(System.String,System.String,System.String)">
      <summary>使用指定的声明类型、值和值类型初始化 <see cref="T:System.Security.Claims.Claim" /> 类的新实例。</summary>
      <param name="type">声明类型。</param>
      <param name="value">声明值。</param>
      <param name="valueType">声明值类型。 如果此参数为 <see langword="null" />，则使用 <see cref="F:System.Security.Claims.ClaimValueTypes.String" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String)">
      <summary>使用指定的声明类型、值、值类型和颁发者初始化 <see cref="T:System.Security.Claims.Claim" /> 类的新实例。</summary>
      <param name="type">声明类型。</param>
      <param name="value">声明值。</param>
      <param name="valueType">声明值类型。 如果此参数为 <see langword="null" />，则使用 <see cref="F:System.Security.Claims.ClaimValueTypes.String" />。</param>
      <param name="issuer">声明颁发者。 如果此参数为空或为 <see langword="null" />，则使用 <see cref="F:System.Security.Claims.ClaimsIdentity.DefaultIssuer" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>使用指定的声明类型、值、值类型、颁发者、原始颁发者，初始化 <see cref="T:System.Security.Claims.Claim" /> 类的新实例。</summary>
      <param name="type">声明类型。</param>
      <param name="value">声明值。</param>
      <param name="valueType">声明值类型。 如果此参数为 <see langword="null" />，则使用 <see cref="F:System.Security.Claims.ClaimValueTypes.String" />。</param>
      <param name="issuer">声明颁发者。 如果此参数为空或为 <see langword="null" />，则使用 <see cref="F:System.Security.Claims.ClaimsIdentity.DefaultIssuer" />。</param>
      <param name="originalIssuer">声明的原始颁发者。 如果此参数为空或 <see langword="null" />，则将 <see cref="P:System.Security.Claims.Claim.OriginalIssuer" /> 属性设置为 <see cref="P:System.Security.Claims.Claim.Issuer" /> 属性的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)">
      <summary>使用指定的声明类型、值、值类型、颁发者、原始颁发者和主题，初始化 <see cref="T:System.Security.Claims.Claim" /> 类的新实例。</summary>
      <param name="type">声明类型。</param>
      <param name="value">声明值。</param>
      <param name="valueType">声明值类型。 如果此参数为 <see langword="null" />，则使用 <see cref="F:System.Security.Claims.ClaimValueTypes.String" />。</param>
      <param name="issuer">声明颁发者。 如果此参数为空或为 <see langword="null" />，则使用 <see cref="F:System.Security.Claims.ClaimsIdentity.DefaultIssuer" />。</param>
      <param name="originalIssuer">声明的原始颁发者。 如果此参数为空或 <see langword="null" />，则将 <see cref="P:System.Security.Claims.Claim.OriginalIssuer" /> 属性设置为 <see cref="P:System.Security.Claims.Claim.Issuer" /> 属性的值。</param>
      <param name="subject">此声明说明的主题。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.Claim.Clone">
      <summary>返回从此对象复制的新 <see cref="T:System.Security.Claims.Claim" /> 对象。 新的声明不具有主题。</summary>
      <returns>新声明对象。</returns>
    </member>
    <member name="M:System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)">
      <summary>返回从此对象复制的新 <see cref="T:System.Security.Claims.Claim" /> 对象。 新声明的主题设置为指定的 ClaimsIdentity。</summary>
      <param name="identity">新声明的预期主题。</param>
      <returns>新声明对象。</returns>
    </member>
    <member name="M:System.Security.Claims.Claim.ToString">
      <summary>返回此 <see cref="T:System.Security.Claims.Claim" /> 对象的字符串表示形式。</summary>
      <returns>此 <see cref="T:System.Security.Claims.Claim" /> 对象的字符串表示形式。</returns>
    </member>
    <member name="M:System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)">
      <summary>将此 <see cref="T:System.Security.Claims.Claim" /> 写入编写器。</summary>
      <param name="writer">数据存储使用的编写器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter,System.Byte[])">
      <summary>将此 <see cref="T:System.Security.Claims.Claim" /> 写入编写器。</summary>
      <param name="writer">要编写此声明的编写器。</param>
      <param name="userData">要声明的用户数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Claims.Claim.CustomSerializationData">
      <summary>包含派生类型提供的任何其他数据。</summary>
      <returns>
        <see cref="T:System.Byte" />表示其他序列化数据的数组。</returns>
    </member>
    <member name="P:System.Security.Claims.Claim.Issuer">
      <summary>获取声明的颁发者。</summary>
      <returns>一个名称，指声明的颁发者。</returns>
    </member>
    <member name="P:System.Security.Claims.Claim.OriginalIssuer">
      <summary>获取声明的最初颁发者。</summary>
      <returns>引用声明原始颁发者的名称。</returns>
    </member>
    <member name="P:System.Security.Claims.Claim.Properties">
      <summary>获取包含与此声明关联的附加属性的字典。</summary>
      <returns>包含与声明关联的附加属性的字典。 作为名称-值对表示的属性。</returns>
    </member>
    <member name="P:System.Security.Claims.Claim.Subject">
      <summary>获取声明的主题。</summary>
      <returns>声明的主题。</returns>
    </member>
    <member name="P:System.Security.Claims.Claim.Type">
      <summary>获取声明的声明类型。</summary>
      <returns>声明类型。</returns>
    </member>
    <member name="P:System.Security.Claims.Claim.Value">
      <summary>获取声明的值。</summary>
      <returns>声明值。</returns>
    </member>
    <member name="P:System.Security.Claims.Claim.ValueType">
      <summary>获取声明的值类型。</summary>
      <returns>声明值类型。</returns>
    </member>
    <member name="T:System.Security.Claims.ClaimsIdentity">
      <summary>表示基于声明的标识。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimsIdentity.DefaultIssuer">
      <summary>默认颁发者，“地方当局”。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType">
      <summary>默认名称声明类型；<see cref="F:System.Security.Claims.ClaimTypes.Name" />。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType">
      <summary>默认角色声明类型；<see cref="F:System.Security.Claims.ClaimTypes.Role" />。</summary>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.#ctor">
      <summary>用空声称集合初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
      <summary>使用枚举集合 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 对象的初始化 <see cref="T:System.Security.Claims.Claim" /> 类的新实例。</summary>
      <param name="claims">传播声明标识的声明。</param>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)">
      <summary>用指定的声称和身份验证类型初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</summary>
      <param name="claims">传播声明标识的声明。</param>
      <param name="authenticationType">所使用的身份验证的类型。</param>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)">
      <summary>用指定的声明、身份验证类型、名称声明类型、角色声明类型初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</summary>
      <param name="claims">传播声明标识的声明。</param>
      <param name="authenticationType">所使用的身份验证的类型。</param>
      <param name="nameType">要用于名称声明的声明类型。</param>
      <param name="roleType">要用于角色声明的声明类型。</param>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)">
      <summary>用指定的 <see cref="T:System.IO.BinaryReader" /> 初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 的实例。</summary>
      <param name="reader">指向 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 的 <see cref="T:System.IO.BinaryReader" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 上声明的默认值为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)">
      <summary>从使用 <see cref="T:System.Runtime.Serialization.ISerializable" /> 创建的序列化流初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</summary>
      <param name="info">序列化数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 上声明的默认值为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>从使用 <see cref="T:System.Runtime.Serialization.ISerializable" /> 创建的序列化流初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</summary>
      <param name="info">序列化数据。</param>
      <param name="context">序列化的上下文。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 上声明的默认值为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)">
      <summary>从现有 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 实例初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</summary>
      <param name="other">要复制的 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> 上声明的默认值为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)">
      <summary>初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例，该类表示具有指定的 <see cref="T:System.Security.Principal.IIdentity" /> 用户。</summary>
      <param name="identity">新声明标识所基于的标识。</param>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
      <summary>使用指定的 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 和类型提供程序初始化 <see cref="T:System.Security.Principal.IIdentity" /> 类的新实例。</summary>
      <param name="identity">新声明标识所基于的标识。</param>
      <param name="claims">传播声明标识的声明。</param>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)">
      <summary>从指定的 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 用指定的声明、身份验证的类型、名称声明类型、角色声明类型来初始化 <see cref="T:System.Security.Principal.IIdentity" /> 类的新实例。</summary>
      <param name="identity">新声明标识所基于的标识。</param>
      <param name="claims">传播新声明标识的声明。</param>
      <param name="authenticationType">所使用的身份验证的类型。</param>
      <param name="nameType">要用于名称声明的声明类型。</param>
      <param name="roleType">要用于角色声明的声明类型。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="identity" /> 为 <see cref="T:System.Security.Claims.ClaimsIdentity" />，<see cref="P:System.Security.Claims.ClaimsIdentity.Actor" /> 导致返回 <see langword="this" /> 的循环引用。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String)">
      <summary>用空的声明集合和指定的身份验证类型初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</summary>
      <param name="authenticationType">所使用的身份验证的类型。</param>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)">
      <summary>用指定的声明、身份验证的类型、名称声明类型、角色声明类型来初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</summary>
      <param name="authenticationType">所使用的身份验证的类型。</param>
      <param name="nameType">要用于名称声明的声明类型。</param>
      <param name="roleType">要用于角色声明的声明类型。</param>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)">
      <summary>添加单个声明到此声明标识。</summary>
      <param name="claim">要添加的声明。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claim" /> 上声明的默认值为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
      <summary>添加声明列表到此声明标识。</summary>
      <param name="claims">要添加的声明。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claims" /> 上声明的默认值为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.Clone">
      <summary>返回从此声明标识中复制的新 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</summary>
      <returns>当前实例的副本。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)">
      <summary>为派生类型提供扩展点以创建自定义 <see cref="T:System.Security.Claims.Claim" />。</summary>
      <param name="reader">指向声明的 <see cref="T:System.IO.BinaryReader" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 上声明的默认值为 <see langword="null" />。</exception>
      <returns>一个新的 <see cref="T:System.Security.Claims.Claim" />。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})">
      <summary>检索所有与指定谓词相匹配的声明。</summary>
      <param name="match">执行匹配逻辑的函数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> 上声明的默认值为 <see langword="null" />。</exception>
      <returns>匹配的声明。 列表为只读。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.FindAll(System.String)">
      <summary>检索所有有指定声明类型的声明。</summary>
      <param name="type">要根据其匹配声明的声明类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 上声明的默认值为 <see langword="null" />。</exception>
      <returns>匹配的声明。 列表为只读。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})">
      <summary>检所由指定谓词匹配的第一个声明。</summary>
      <param name="match">执行匹配逻辑的函数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> 上声明的默认值为 <see langword="null" />。</exception>
      <returns>为第一个匹配声明，或者，如果找不到任何匹配，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.String)">
      <summary>检索有指定声明类型的第一个声明。</summary>
      <param name="type">要匹配的声明类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 上声明的默认值为 <see langword="null" />。</exception>
      <returns>为第一个匹配声明，或者，如果找不到任何匹配，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化当前<see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象所需的数据来填充 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</summary>
      <param name="info">要填充数据的对象。</param>
      <param name="context">此序列化的目标。 可以为 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 上声明的默认值为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})">
      <summary>确定该声明标识是否拥有与指定条件相匹配的声明。</summary>
      <param name="match">执行匹配逻辑的函数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> 上声明的默认值为 <see langword="null" />。</exception>
      <returns>如果存在匹配的声明，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)">
      <summary>确定该声明标识是否具备指定声明类型和值。</summary>
      <param name="type">要匹配的声明类型。</param>
      <param name="value">要匹配的声明的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
      <returns>如果找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)">
      <summary>尝试从声明标识中移除一个声明。</summary>
      <param name="claim">要移除的声明。</param>
      <exception cref="T:System.InvalidOperationException">无法移除声明。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)">
      <summary>尝试从声明标识中移除一个声明。</summary>
      <param name="claim">要移除的声明。</param>
      <returns>如果已成功移除了声明，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)">
      <summary>使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</summary>
      <param name="writer">数据存储使用的编写器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 上声明的默认值为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])">
      <summary>使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</summary>
      <param name="writer">数据存储使用的编写器。</param>
      <param name="userData">派生类型提供的其他数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 上声明的默认值为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Claims.ClaimsIdentity.Actor">
      <summary>获取或设置被授予委派权利的调用方的标识。</summary>
      <exception cref="T:System.InvalidOperationException">尝试将属性设置为当前实例。

或

<see langword="value" /> 导致返回 <see langword="this" /> 的循环引用。</exception>
      <returns>授予委托权利的调用方。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsIdentity.AuthenticationType">
      <summary>获取身份验证类型。</summary>
      <returns>身份验证类型。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsIdentity.BootstrapContext">
      <summary>获取或设置用于创建此声明标识的令牌。</summary>
      <returns>启动上下文。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsIdentity.Claims">
      <summary>获取与此声明标识关联的声明。</summary>
      <returns>与此声明标识相关联的声明的集合。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsIdentity.CustomSerializationData">
      <summary>包含派生类型提供的任何其他数据。 通常在调用 <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" /> 时设置。</summary>
      <returns>
        <see cref="T:System.Byte" />表示其他序列化数据的数组。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsIdentity.IsAuthenticated">
      <summary>获取一个值，该值指示是否验证了标识。</summary>
      <returns>
        <see langword="true" /> 如果标识已经过身份验证，则为;否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsIdentity.Label">
      <summary>获取或设置此声明标识的标签。</summary>
      <returns>标签。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsIdentity.Name">
      <summary>获取此声明标识的名称。</summary>
      <returns>姓名或 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsIdentity.NameClaimType">
      <summary>获取用于确定为此声明标识的 <see cref="P:System.Security.Claims.ClaimsIdentity.Name" /> 属性提供值的声明的声明类型。</summary>
      <returns>名称声明类型。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsIdentity.RoleClaimType">
      <summary>获取将解释为此声明标识中声明的 .NET Framework 角色的声明类型。</summary>
      <returns>角色声明类型。</returns>
    </member>
    <member name="T:System.Security.Claims.ClaimsPrincipal">
      <summary>支持多个基于声明的标识的 <see cref="T:System.Security.Principal.IPrincipal" /> 实现。</summary>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.#ctor">
      <summary>初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})">
      <summary>使用指定的声明标识，初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</summary>
      <param name="identities">从其初始化新声明主体的标识。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identities" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)">
      <summary>用指定的 <see cref="T:System.IO.BinaryReader" /> 初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 的实例。</summary>
      <param name="reader">指向 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 的 <see cref="T:System.IO.BinaryReader" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>从使用 <see cref="T:System.Runtime.Serialization.ISerializable" /> 创建的序列化流初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</summary>
      <param name="info">序列化数据。</param>
      <param name="context">序列化的上下文。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 为 null。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)">
      <summary>从指定的标识初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</summary>
      <param name="identity">从其初始化新的声明主体的标识。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)">
      <summary>从指定的主体初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</summary>
      <param name="principal">从其初始化新的声明主体的主体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="principal" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})">
      <summary>将指定的声明标识添加到此声明主体。</summary>
      <param name="identities">要添加的声明标识。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identities" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)">
      <summary>将指定的声明标识添加到此声明主体。</summary>
      <param name="identity">要添加的声明标识。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.Clone">
      <summary>返回此实例的副本。</summary>
      <returns>
        <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 对象的新副本。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)">
      <summary>创建新的声明标识。</summary>
      <param name="reader">二进制读取器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 <see langword="null" />。</exception>
      <returns>创建的声明标识。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})">
      <summary>检索所有与指定谓词相匹配的声明。</summary>
      <param name="match">执行匹配逻辑的函数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> 为 <see langword="null" />。</exception>
      <returns>匹配的声明。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)">
      <summary>检索所有或具有指定的声明类型的声明。</summary>
      <param name="type">要根据其匹配声明的声明类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 <see langword="null" />。</exception>
      <returns>匹配的声明。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})">
      <summary>检所由指定谓词匹配的第一个声明。</summary>
      <param name="match">执行匹配逻辑的函数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> 为 <see langword="null" />。</exception>
      <returns>为第一个匹配声明，或者，如果找不到任何匹配，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)">
      <summary>检索有指定声明类型的第一个声明。</summary>
      <param name="type">要匹配的声明类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 <see langword="null" />。</exception>
      <returns>为第一个匹配声明，或者，如果找不到任何匹配，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化当前<see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象所需的数据来填充 <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</summary>
      <param name="info">要填充数据的对象。</param>
      <param name="context">此序列化的目标。 可以为 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})">
      <summary>确定与此声明主体相关联的任何声明标识是否包含由指定的谓词匹配的声明。</summary>
      <param name="match">执行匹配逻辑的函数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> 为 <see langword="null" />。</exception>
      <returns>如果存在匹配的声明，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)">
      <summary>确定与此声明主体相关联的任何声明标识是否包含具有指定声明类型和值的声明。</summary>
      <param name="type">要匹配的声明类型。</param>
      <param name="value">要匹配的声明的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
      <returns>如果存在匹配的声明，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)">
      <summary>返回一个值，该值表示此声明主体代表的实体（用户）是否属于指定角色。</summary>
      <param name="role">要检查的角色。</param>
      <returns>如果声明主体属于指定角色，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)">
      <summary>使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</summary>
      <param name="writer">数据存储使用的编写器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])">
      <summary>使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</summary>
      <param name="writer">数据存储使用的编写器。</param>
      <param name="userData">派生类型提供的其他数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Claims.ClaimsPrincipal.Claims">
      <summary>获取包含所有声明的集合，这些声明来自于与此声明主体关联的所有声明标识符。</summary>
      <returns>与此主体关联的声明。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector">
      <summary>获取或设置用于选择 <see cref="P:System.Security.Claims.ClaimsPrincipal.Current" /> 属性返回的声明主体的委托。</summary>
      <returns>委托。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsPrincipal.Current">
      <summary>获取当前声明主体。</summary>
      <returns>当前声明主体。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsPrincipal.CustomSerializationData">
      <summary>包含派生类型提供的任何其他数据。 通常在调用 <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" /> 时设置。</summary>
      <returns>
        <see cref="T:System.Byte" />表示其他序列化数据的数组。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsPrincipal.Identities">
      <summary>获取一个集合，该集合包含与此声明主体关联的所有声明标识。</summary>
      <returns>声明标识的集合。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsPrincipal.Identity">
      <summary>获取与此声明主体相关联的主声明标识。</summary>
      <returns>与此声明主体相关联的主声明标识。</returns>
    </member>
    <member name="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector">
      <summary>获取或设置用于选择 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identity" /> 属性返回的声明标识的委托。</summary>
      <returns>委托。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Security.Claims.ClaimTypes">
      <summary>定义可以分配给使用者的已知声明类型的常数。 此类不能被继承。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Actor">
      <summary>声明的 URI，指定一个参与者，<c>http://schemas.xmlsoap.org/ws/2009/09/identity/claims/actor</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Anonymous">
      <summary>声明的 URI，指定匿名用户，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/anonymous</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Authentication">
      <summary>声明的 URI，指定关于标识是否经过身份验证的详细信息，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authenticated</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.AuthenticationInstant">
      <summary>声明的 URI，指定对实体进行身份验证的时机，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationinstant</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.AuthenticationMethod">
      <summary>声明的 URI，指定对实体进行身份验证的方法，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationmethod</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.AuthorizationDecision">
      <summary>声明的 URI，指定对于实体的授权决定，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authorizationdecision</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.CookiePath">
      <summary>声明的 URI，指定 Cookie 路径，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/cookiepath</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Country">
      <summary>声明的 URI，指定实体所在的国家/地区，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.DateOfBirth">
      <summary>声明的 URI，指定实体的出生日期，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.DenyOnlyPrimaryGroupSid">
      <summary>声明的 URI，指定实体上的“仅拒绝”主组 SID，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/denyonlyprimarygroupsid</c>。 deny-only SID 禁止指定的实体访问可保护对象。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.DenyOnlyPrimarySid">
      <summary>声明的 URI，指定实体上的“仅拒绝”主 SID，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/denyonlyprimarysid</c>。 deny-only SID 禁止指定的实体访问可保护对象。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.DenyOnlySid">
      <summary>声明的 URI，指定实体的“仅拒绝”安全标识符 (SID)，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/denyonlysid</c>。 deny-only SID 禁止指定的实体访问可保护对象。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.DenyOnlyWindowsDeviceGroup">
      <summary>声明的 URI，指定设备的“仅拒绝”Windows 组 SID，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/denyonlywindowsdevicegroup</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Dns">
      <summary>声明的 URI，指定与计算机名称关联的 DNS 名称或者与 X.509 证书的使用者或颁发者的备用名称关联的 DNS 名称，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dns</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Dsa">
      <summary>
        <c>http://schemas.microsoft.com/ws/2008/06/identity/claims/dsa</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Email">
      <summary>声明的 URI，指定实体的电子邮件地址，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Expiration">
      <summary>
        <c>http://schemas.microsoft.com/ws/2008/06/identity/claims/expiration</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Expired">
      <summary>
        <c>http://schemas.microsoft.com/ws/2008/06/identity/claims/expired</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Gender">
      <summary>声明的 URI，指定实体的性别，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/gender</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.GivenName">
      <summary>声明的 URI，指定实体的名字，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.GroupSid">
      <summary>声明的 URI，指定实体组的 SID，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/groupsid</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Hash">
      <summary>声明的 URI，指定一个哈希值，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/hash</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.HomePhone">
      <summary>声明的 URI，指定实体的住宅电话号码，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/homephone</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.IsPersistent">
      <summary>
        <c>http://schemas.microsoft.com/ws/2008/06/identity/claims/ispersistent</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Locality">
      <summary>声明的 URI，指定实体所在区域的区域设置，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/locality</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.MobilePhone">
      <summary>声明的 URI，指定实体的移动电话号码，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/mobilephone</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Name">
      <summary>声明的 URI，指定实体的名称，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.NameIdentifier">
      <summary>声明的 URI，指定实体的名称，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.OtherPhone">
      <summary>声明的 URI，指定实体的备用电话号码，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/otherphone</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.PostalCode">
      <summary>声明的 URI，指定实体的邮政编码，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/postalcode</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.PrimaryGroupSid">
      <summary>声明的 URI，指定实体的主组 SID，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/primarygroupsid</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.PrimarySid">
      <summary>声明的 URI，指定实体的主 SID，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/primarysid</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Role">
      <summary>声明的 URI，指定实体的角色，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/role</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Rsa">
      <summary>声明的 URI，指定一个 RSA 密钥，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/rsa</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.SerialNumber">
      <summary>声明的 URI，指定一个序列号，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/serialnumber</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Sid">
      <summary>声明的 URI，指定一个安全标识符 (SID)，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/sid</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Spn">
      <summary>声明的 URI，指定一个服务主体名称 (SPN) 声明，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/spn</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.StateOrProvince">
      <summary>声明的 URI，指定实体所在的州或省份，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/stateorprovince</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.StreetAddress">
      <summary>声明的 URI，指定实体的街道地址，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/streetaddress</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Surname">
      <summary>声明的 URI，指定实体的姓氏，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.System">
      <summary>声明的 URI，标识系统实体，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/system</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Thumbprint">
      <summary>声明的 URI，指定一个指纹，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/thumbprint</c>。 指纹是 X.509 证书的全局唯一 SHA-1 哈希。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Upn">
      <summary>声明的 URI，指定一个用户主体名称 (UPN)，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Uri">
      <summary>声明的 URI，指定一个 URI，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/uri</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.UserData">
      <summary>声明的 URI，指定用户数据，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/userdata</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Version">
      <summary>声明的 URI，指定版本，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/version</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.Webpage">
      <summary>声明的 URI，指定实体的网页，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/webpage</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.WindowsAccountName">
      <summary>声明的 URI，指定实体的 Windows 域帐户名，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsaccountname</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim">
      <summary>
        <c>http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsdeviceclaim</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.WindowsDeviceGroup">
      <summary>声明的 URI，指定设备的 Windows 组 SID，<c>http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsdevicegroup</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.WindowsFqbnVersion">
      <summary>
        <c>http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsfqbnversion</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.WindowsSubAuthority">
      <summary>
        <c>http://schemas.microsoft.com/ws/2008/06/identity/claims/windowssubauthority</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.WindowsUserClaim">
      <summary>
        <c>http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsuserclaim</c>。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimTypes.X500DistinguishedName">
      <summary>X.500 可分辨名称声明的 URI，例如 X.509 公钥证书的主题或目录服务目录信息树中的项标识符，<c>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/x500distinguishedname</c>。</summary>
    </member>
    <member name="T:System.Security.Claims.ClaimValueTypes">
      <summary>根据 W3C 和 OASIS 定义的类型 URI 定义声明值类型。 此类不能被继承。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Base64Binary">
      <summary>表示 <see langword="base64Binary" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Base64Octet">
      <summary>表示 <see langword="base64Octet" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Boolean">
      <summary>表示 <see langword="boolean" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Date">
      <summary>表示 <see langword="date" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.DateTime">
      <summary>表示 <see langword="dateTime" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.DaytimeDuration">
      <summary>表示 <see langword="daytimeDuration" /> XQuery 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.DnsName">
      <summary>表示 <see langword="dns" /> SOAP 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Double">
      <summary>表示 <see langword="double" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.DsaKeyValue">
      <summary>表示 <see langword="DSAKeyValue" /> XML 签名数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Email">
      <summary>表示 <see langword="emailaddress" /> SOAP 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Fqbn">
      <summary>表示 <see langword="fqbn" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.HexBinary">
      <summary>表示 <see langword="hexBinary" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Integer">
      <summary>表示 <see langword="integer" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Integer32">
      <summary>表示 <see langword="integer32" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Integer64">
      <summary>表示 <see langword="integer64" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.KeyInfo">
      <summary>表示 <see langword="KeyInfo" /> XML 签名数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Rfc822Name">
      <summary>表示 <see langword="rfc822Name" /> XQuery 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Rsa">
      <summary>表示 <see langword="rsa" /> SOAP 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.RsaKeyValue">
      <summary>表示 <see langword="RSAKeyValue" /> XML 签名数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Sid">
      <summary>表示 <see langword="sid" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.String">
      <summary>表示 <see langword="string" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.Time">
      <summary>表示 <see langword="time" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.UInteger32">
      <summary>表示 <see langword="uinteger32" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.UInteger64">
      <summary>表示 <see langword="uinteger64" /> XML 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.UpnName">
      <summary>表示 <see langword="UPN" /> SOAP 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.X500Name">
      <summary>表示 <see langword="x500Name" /> XQuery 数据类型的 URI。</summary>
    </member>
    <member name="F:System.Security.Claims.ClaimValueTypes.YearMonthDuration">
      <summary>表示 <see langword="yearMonthDuration" /> XQuery 数据类型的 URI。</summary>
    </member>
    <member name="T:System.Security.Principal.GenericIdentity">
      <summary>表示泛型用户。</summary>
    </member>
    <member name="M:System.Security.Principal.GenericIdentity.#ctor(System.Security.Principal.GenericIdentity)">
      <summary>使用指定的 <see cref="T:System.Security.Principal.GenericIdentity" /> 对象初始化 <see cref="T:System.Security.Principal.GenericIdentity" /> 类的新实例。</summary>
      <param name="identity">根据其构造 <see cref="T:System.Security.Principal.GenericIdentity" /> 新实例的对象。</param>
    </member>
    <member name="M:System.Security.Principal.GenericIdentity.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Security.Principal.GenericIdentity" /> 类的新实例，该类表示具有指定名称的用户。</summary>
      <param name="name">用户名，代码当前即以该用户的名义运行。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Principal.GenericIdentity.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Security.Principal.GenericIdentity" /> 类的新实例，该类表示具有指定名称和身份验证类型的用户。</summary>
      <param name="name">用户名，代码当前即以该用户的名义运行。</param>
      <param name="type">用于标识用户的身份验证的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。  
  
- 或 - 
<paramref name="type" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Principal.GenericIdentity.Clone">
      <summary>创建作为当前实例副本的新对象。</summary>
      <returns>当前实例的副本。</returns>
    </member>
    <member name="P:System.Security.Principal.GenericIdentity.AuthenticationType">
      <summary>获取用于标识用户的身份验证的类型。</summary>
      <returns>用于标识用户的身份验证的类型。</returns>
    </member>
    <member name="P:System.Security.Principal.GenericIdentity.Claims">
      <summary>为用户获取此最常用标识表示的所有声明。</summary>
      <returns>表示该 <see cref="T:System.Security.Principal.GenericIdentity" /> 对象的请求的集合。</returns>
    </member>
    <member name="P:System.Security.Principal.GenericIdentity.IsAuthenticated">
      <summary>获取一个值，该值指示是否验证了用户。</summary>
      <returns>如果已验证了用户，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Principal.GenericIdentity.Name">
      <summary>获取用户的名称。</summary>
      <returns>用户名，代码当前即以该用户的名义运行。</returns>
    </member>
    <member name="T:System.Security.Principal.GenericPrincipal">
      <summary>表示泛型主体。</summary>
    </member>
    <member name="M:System.Security.Principal.GenericPrincipal.#ctor(System.Security.Principal.IIdentity,System.String[])">
      <summary>从用户标识和一组由该标识代表的用户所属的角色名称初始化 <see cref="T:System.Security.Principal.GenericPrincipal" /> 类的新实例。</summary>
      <param name="identity">代表任何用户的 <see cref="T:System.Security.Principal.IIdentity" /> 的基本实现。</param>
      <param name="roles">一个角色名称数组，其中包含 <paramref name="identity" /> 参数代表的用户。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Principal.GenericPrincipal.IsInRole(System.String)">
      <summary>确定当前 <see cref="T:System.Security.Principal.GenericPrincipal" /> 是否属于指定的角色。</summary>
      <param name="role">要检查其成员资格的角色的名称。</param>
      <returns>如果当前 <see cref="T:System.Security.Principal.GenericPrincipal" /> 是指定角色的成员，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Principal.GenericPrincipal.Identity">
      <summary>获取当前 <see cref="T:System.Security.Principal.GenericIdentity" /> 表示的用户的 <see cref="T:System.Security.Principal.GenericPrincipal" />。</summary>
      <returns>
        <see cref="T:System.Security.Principal.GenericIdentity" /> 表示的用户的 <see cref="T:System.Security.Principal.GenericPrincipal" />。</returns>
    </member>
  </members>
</doc>