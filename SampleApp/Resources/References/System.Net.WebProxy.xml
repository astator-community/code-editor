<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebProxy</name>
  </assembly>
  <members>
    <member name="T:System.Net.IWebProxyScript">
      <summary>提供要加载的基接口并执行脚本以进行自动代理检测。</summary>
    </member>
    <member name="M:System.Net.IWebProxyScript.Close">
      <summary>关闭脚本。</summary>
    </member>
    <member name="M:System.Net.IWebProxyScript.Load(System.Uri,System.String,System.Type)">
      <summary>加载脚本。</summary>
      <param name="scriptLocation">仅限内部。</param>
      <param name="script">仅限内部。</param>
      <param name="helperType">仅限内部。</param>
      <returns>一个 <see cref="T:System.Boolean" />，它表明是否成功加载脚本。</returns>
    </member>
    <member name="M:System.Net.IWebProxyScript.Run(System.String,System.String)">
      <summary>运行脚本。</summary>
      <param name="url">仅限内部。</param>
      <param name="host">仅限内部。</param>
      <returns>
        <see cref="T:System.String" />。  
  
返回的一个只能在内部使用的值。</returns>
    </member>
    <member name="T:System.Net.WebProxy">
      <summary>包含 <see cref="T:System.Net.WebRequest" /> 类的 HTTP 代理设置。</summary>
    </member>
    <member name="M:System.Net.WebProxy.#ctor">
      <summary>初始化 <see cref="T:System.Net.WebProxy" /> 类的空实例。</summary>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用以前序列化的内容初始化 <see cref="T:System.Net.WebProxy" /> 类的实例。</summary>
      <param name="serializationInfo">序列化数据。</param>
      <param name="streamingContext">序列化数据的上下文。</param>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.String)">
      <summary>用指定的 URI 初始化 <see cref="T:System.Net.WebProxy" /> 类的新实例。</summary>
      <param name="Address">代理服务器的 URI。</param>
      <exception cref="T:System.UriFormatException">
        <paramref name="Address" /> 是无效的 URI。</exception>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)">
      <summary>使用指定的 URI 和回避设置初始化 <see cref="T:System.Net.WebProxy" /> 类的新实例。</summary>
      <param name="Address">代理服务器的 URI。</param>
      <param name="BypassOnLocal">如果对本地地址跳过代理，则为 <see langword="true" />；否则，为 <see langword="false" />。</param>
      <exception cref="T:System.UriFormatException">
        <paramref name="Address" /> 是无效的 URI。</exception>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])">
      <summary>使用指定的 URI、回避设置和要回避的 URI 列表初始化 <see cref="T:System.Net.WebProxy" /> 类的新实例。</summary>
      <param name="Address">代理服务器的 URI。</param>
      <param name="BypassOnLocal">如果对本地地址跳过代理，则为 <see langword="true" />；否则，为 <see langword="false" />。</param>
      <param name="BypassList">一个正则表达式字符串数组，它包含要跳过的服务器的 URI。</param>
      <exception cref="T:System.UriFormatException">
        <paramref name="Address" /> 是无效的 URI。</exception>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)">
      <summary>使用指定的 URI、回避设置、要回避的 URI 列表和凭据初始化 <see cref="T:System.Net.WebProxy" /> 类的新实例。</summary>
      <param name="Address">代理服务器的 URI。</param>
      <param name="BypassOnLocal">如果对本地地址跳过代理，则为 <see langword="true" />；否则，为 <see langword="false" />。</param>
      <param name="BypassList">一个正则表达式字符串数组，它包含要跳过的服务器的 URI。</param>
      <param name="Credentials">要提交给代理服务器进行身份验证的 <see cref="T:System.Net.ICredentials" /> 实例。</param>
      <exception cref="T:System.UriFormatException">
        <paramref name="Address" /> 是无效的 URI。</exception>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.String,System.Int32)">
      <summary>使用指定的主机和端口号初始化 <see cref="T:System.Net.WebProxy" /> 类的新实例。</summary>
      <param name="Host">代理主机的名称。</param>
      <param name="Port">要使用的 <paramref name="Host" /> 上的端口号。</param>
      <exception cref="T:System.UriFormatException">通过组合 <paramref name="Host" /> 和 <paramref name="Port" /> 构成的 URI 不是有效的 URI。</exception>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.Uri)">
      <summary>从指定的 <see cref="T:System.Net.WebProxy" /> 实例中初始化 <see cref="T:System.Uri" /> 类的新实例。</summary>
      <param name="Address">一个 <see cref="T:System.Uri" /> 实例，它包含代理服务器的地址。</param>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean)">
      <summary>使用 <see cref="T:System.Net.WebProxy" /> 实例和回避设置初始化 <see cref="T:System.Uri" /> 类的新实例。</summary>
      <param name="Address">一个 <see cref="T:System.Uri" /> 实例，它包含代理服务器的地址。</param>
      <param name="BypassOnLocal">如果对本地地址跳过代理，则为 <see langword="true" />；否则，为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])">
      <summary>使用指定的 <see cref="T:System.Net.WebProxy" /> 实例、回避设置和要回避的 URI 列表初始化 <see cref="T:System.Uri" /> 类的新实例。</summary>
      <param name="Address">一个 <see cref="T:System.Uri" /> 实例，它包含代理服务器的地址。</param>
      <param name="BypassOnLocal">如果对本地地址跳过代理，则为 <see langword="true" />；否则，为 <see langword="false" />。</param>
      <param name="BypassList">一个正则表达式字符串数组，它包含要跳过的服务器的 URI。</param>
    </member>
    <member name="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)">
      <summary>使用指定的 <see cref="T:System.Net.WebProxy" /> 实例、回避设置、要回避的 URI 列表和凭据初始化 <see cref="T:System.Uri" /> 类的新实例。</summary>
      <param name="Address">一个 <see cref="T:System.Uri" /> 实例，它包含代理服务器的地址。</param>
      <param name="BypassOnLocal">如果对本地地址跳过代理，则为 <see langword="true" />；否则，为 <see langword="false" />。</param>
      <param name="BypassList">一个正则表达式字符串数组，它包含要跳过的服务器的 URI。</param>
      <param name="Credentials">要提交给代理服务器进行身份验证的 <see cref="T:System.Net.ICredentials" /> 实例。</param>
    </member>
    <member name="M:System.Net.WebProxy.GetDefaultProxy">
      <summary>读取 Internet Explorer 非动态代理设置。</summary>
      <returns>一个 <see cref="T:System.Net.WebProxy" /> 实例，它包含 Internet Explorer 5.5 及更高版本中的非动态代理设置。</returns>
    </member>
    <member name="M:System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化目标对象所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="serializationInfo">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="streamingContext">用于指定该序列化的目标的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Net.WebProxy.GetProxy(System.Uri)">
      <summary>返回请求的已代理 URI。</summary>
      <param name="destination">所请求 Internet 资源的 <see cref="T:System.Uri" /> 实例。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> 参数为 <see langword="null" />。</exception>
      <returns>如果资源在回避列表上，则为 Internet 资源的 <see cref="T:System.Uri" /> 实例；否则为代理的 <see cref="T:System.Uri" /> 实例。</returns>
    </member>
    <member name="M:System.Net.WebProxy.IsBypassed(System.Uri)">
      <summary>指示是否对指定的主机使用代理服务器。</summary>
      <param name="host">要检查代理使用情况的主机的 <see cref="T:System.Uri" /> 实例。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> 参数为 <see langword="null" />。</exception>
      <returns>如果代理服务器不应用于 <paramref name="host" />，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>创建系统序列化 <see cref="T:System.Net.WebProxy" /> 对象时所使用的序列化数据和上下文。</summary>
      <param name="serializationInfo">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="streamingContext">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构，指定该序列化的目标。</param>
    </member>
    <member name="P:System.Net.WebProxy.Address">
      <summary>获取或设置代理服务器的地址。</summary>
      <returns>一个 <see cref="T:System.Uri" /> 实例，它包含代理服务器的地址。</returns>
    </member>
    <member name="P:System.Net.WebProxy.BypassArrayList">
      <summary>获取不使用代理服务器的地址列表。</summary>
      <returns>一个 <see cref="T:System.Collections.ArrayList" />，其中包含表示 URI 的 <see cref="P:System.Net.WebProxy.BypassList" /> 数组的列表，这些 URI 在被访问时不使用代理服务器。</returns>
    </member>
    <member name="P:System.Net.WebProxy.BypassList">
      <summary>获取或设置一个地址数组，这些地址不使用代理服务器。</summary>
      <returns>包含描述 URI 的正则表达式列表的数组，这些 URI 在被访问时不使用代理服务器。</returns>
    </member>
    <member name="P:System.Net.WebProxy.BypassProxyOnLocal">
      <summary>获取或设置一个值，该值指示是否跳过代理服务器而使用本地地址。</summary>
      <returns>如果跳过代理服务器而使用本地地址，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值是 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.WebProxy.Credentials">
      <summary>获取或设置要提交到代理服务器进行身份验证的凭据。</summary>
      <exception cref="T:System.InvalidOperationException">将 <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> 属性设置为 <see langword="true" /> 后，尝试设置此属性。</exception>
      <returns>一个 <see cref="T:System.Net.ICredentials" /> 实例，它包含要提交给代理服务器进行身份验证的凭据。</returns>
    </member>
    <member name="P:System.Net.WebProxy.UseDefaultCredentials">
      <summary>获取或设置 <see cref="T:System.Boolean" /> 值，该值控制 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 是否随请求一起发送。</summary>
      <exception cref="T:System.InvalidOperationException">当 <see cref="P:System.Net.WebProxy.Credentials" /> 属性包含默认凭据以外的凭据时，尝试设置此属性。</exception>
      <returns>如果使用默认凭据，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值是 <see langword="false" />。</returns>
    </member>
  </members>
</doc>